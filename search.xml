<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>httpclient 使用</title>
    <url>/posts/812c7f75.html</url>
    <content><![CDATA[<h1 id="连接池配置"><a href="#连接池配置" class="headerlink" title="连接池配置"></a>连接池配置</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_CONN_TOTAL = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_CONN_PER_ROUTE = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONNECTION_REQUEST_TIMEOUT = <span class="number">5000</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONNECT_TIMEOUT = <span class="number">5000</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SOCKET_TIMEOUT = <span class="number">30000</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> CloseableHttpClient client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    Builder builder = RequestConfig.custom();</span><br><span class="line">    builder</span><br><span class="line">    builder<span class="comment">// 从连接池获取连接的超时时间</span></span><br><span class="line">          .setConnectionRequestTimeout(CONNECTION_REQUEST_TIMEOUT)</span><br><span class="line">          <span class="comment">// 与接口服务器连接超时时间</span></span><br><span class="line">          .setConnectTimeout(CONNECT_TIMEOUT)</span><br><span class="line">          <span class="comment">// 获取响应数据超时时间</span></span><br><span class="line">          .setSocketTimeout(SOCKET_TIMEOUT);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 4.3以上版本推荐使用HttpClientBuilder来创建client</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     * 1、HttpClientBuilder.setRetryHandler(HttpRequestRetryHandler retryHandler);请求重试处理。</span></span><br><span class="line"><span class="comment">     * 2、HttpClientBuilder.setRedirectStrategy(RedirectStrategy redirectStrategy);设置重定向。</span></span><br><span class="line"><span class="comment">     * 3、httpClientBuilder.setDefaultCookieStore(BasicCookieStore cookieStore);设置cookie store</span></span><br><span class="line"><span class="comment">     * 4、HttpClientBuilder.setProxy(HttpHost proxy);设置代理服务器。</span></span><br><span class="line"><span class="comment">     * 5、HttpClientBuilder.setDefaultRequestConfig(RequestConfig config);在此亦可设置RequestConfig。</span></span><br><span class="line"><span class="comment">     * 6、HttpClientBuilder.setUserAgent(String userAgent);设置用户代理。</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    HttpClientBuilder clientBuilder = HttpClients.custom();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// builder.setExpectContinueEnabled(true).setStaleConnectionCheckEnabled(true)</span></span><br><span class="line">    <span class="comment">// .setTargetPreferredAuthSchemes(Arrays.asList(AuthSchemes.NTLM,</span></span><br><span class="line">    <span class="comment">// AuthSchemes.DIGEST))</span></span><br><span class="line">    <span class="comment">// .setProxyPreferredAuthSchemes(Arrays.asList(AuthSchemes.BASIC));</span></span><br><span class="line">    builder.setCookieSpec(CookieSpecs.IGNORE_COOKIES);</span><br><span class="line"></span><br><span class="line">    RequestConfig defaultRequestConfig = builder.build();</span><br><span class="line">    clientBuilder.setDefaultRequestConfig(defaultRequestConfig);</span><br><span class="line">    <span class="comment">// 连接池配置代码</span></span><br><span class="line">    <span class="comment">// 默认是：20</span></span><br><span class="line">    clientBuilder.setMaxConnTotal(MAX_CONN_TOTAL);</span><br><span class="line">    <span class="comment">// 默认是：2</span></span><br><span class="line">    clientBuilder.setMaxConnPerRoute(MAX_CONN_PER_ROUTE);</span><br><span class="line">    <span class="comment">// 第一种方式：如果是 ip+端口的 https 地址，需要配置不校验证书，否则会报 SSLPeerUnverifiedException 异常</span></span><br><span class="line">    clientBuilder.setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE);</span><br><span class="line">    <span class="comment">// try &#123;</span></span><br><span class="line">    <span class="comment">//     // SSL or TLS</span></span><br><span class="line">    <span class="comment">//     SSLContext sc = SSLContext.getInstance("SSL");</span></span><br><span class="line">    <span class="comment">//     MyX509TrustManager trustManager = new MyX509TrustManager();</span></span><br><span class="line">    <span class="comment">//     sc.init(null, new TrustManager[]&#123;trustManager&#125;, new java.security.SecureRandom());</span></span><br><span class="line">    <span class="comment">//     // // 设置协议http和https对应的处理socket链接工厂的对象</span></span><br><span class="line">    <span class="comment">//     // Registry&lt;ConnectionSocketFactory&gt; registry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</span></span><br><span class="line">    <span class="comment">//     //    .register("http", PlainConnectionSocketFactory.INSTANCE)</span></span><br><span class="line">    <span class="comment">//     //    // 第二种方式：如果是 ip+端口的 https 地址，需要配置不校验证书，否则会报 SSLPeerUnverifiedException 异常</span></span><br><span class="line">    <span class="comment">//     //    .register("https", new SSLConnectionSocketFactory(sc, NoopHostnameVerifier.INSTANCE))</span></span><br><span class="line">    <span class="comment">//     //    .build();</span></span><br><span class="line">    <span class="comment">//     // PoolingHttpClientConnectionManager connManager = new PoolingHttpClientConnectionManager(registry);</span></span><br><span class="line">    <span class="comment">//     // 主要连接池配置代码</span></span><br><span class="line">    <span class="comment">//     // 默认是：20</span></span><br><span class="line">    <span class="comment">//     // connManager.setMaxTotal(MAX_CONN_TOTAL);</span></span><br><span class="line">    <span class="comment">//     // 默认是：2</span></span><br><span class="line">    <span class="comment">//     // connManager.setDefaultMaxPerRoute(MAX_CONN_PER_ROUTE);</span></span><br><span class="line">    <span class="comment">//     // clientBuilder.setConnectionManager(connManager);</span></span><br><span class="line">    <span class="comment">//     // 第三种方式：如果是 ip+端口的 https 地址，需要配置不校验证书，否则会报 SSLPeerUnverifiedException 异常</span></span><br><span class="line">    <span class="comment">//   	clientBuilder.setSSLSocketFactory(new SSLConnectionSocketFactory(sc, NoopHostnameVerifier.INSTANCE));</span></span><br><span class="line">    <span class="comment">// &#125; catch (Exception e) &#123;</span></span><br><span class="line">    <span class="comment">//     e.printStackTrace();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    client = clientBuilder.build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>apache</tag>
        <tag>httpclient</tag>
      </tags>
  </entry>
  <entry>
    <title>BigPipe 分块输出遇到的问题</title>
    <url>/posts/b0407ea6.html</url>
    <content><![CDATA[<h1 id="buffer-问题"><a href="#buffer-问题" class="headerlink" title="buffer 问题"></a>buffer 问题</h1><p>由于“各路”<code>buffer</code>的存在，如果包比较小的话<code>BigPipe</code>的<code>chunked</code>输出很可能会被<code>buffer</code>住。</p>
<blockquote>
<p>解决方案</p>
</blockquote>
<ol>
<li>填充空格：将一次<code>flush</code>的数据填充到 <code>buffer_size</code>。</li>
<li>调小<code>buffer</code>，让数据更容易达到 <code>buffer_size</code>。</li>
<li>关闭<code>buffer</code>。</li>
</ol>
<a id="more"></a>
<h2 id="Nginx-负载-buffer"><a href="#Nginx-负载-buffer" class="headerlink" title="Nginx 负载 buffer"></a>Nginx 负载 buffer</h2><p>对于 Nginx 来说，会有 <code>proxy_buffer</code> 和 <code>fastcgi_buffer</code>。第一种方式，不用调整 buffer，但这种方式很不优雅，而且增加了带宽，并不是很合理。至于调小 buffer，这看起来是一个很好的思路，然而对于 gzip 过的数据来说，最小的 buffer 可能也比较大。</p>
<ul>
<li>选择了关闭 <code>proxy_buffer</code> 和 <code>fastcgi_buffer</code></li>
</ul>
<p>关闭 <code>proxy_buffer</code> 的指令 <code>proxy_buffering off</code> 原生就支持。而关闭 <code>fastcgi_buffer</code> 的 <code>fastcgi_buffering</code> 需要1.5.6版本。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Syntax: fastcgi_buffering on | off;</span><br><span class="line">Default: fastcgi_buffering on;</span><br><span class="line">Context: http, server, location</span><br><span class="line">This directive appeared in version 1.5.6.</span><br></pre></td></tr></table></figure>
<p>这种方式对所有请求都关闭 buffer</p>
<ul>
<li>用 http header，用于关闭 buffer</li>
</ul>
<blockquote>
<p>Buffering can also be enabled or disabled by passing “yes” or “no” in the “X-Accel-Buffering” response header field. This capability can be disabled using the fastcgi_ignore_headers directive.</p>
</blockquote>
<p>因此，配置上完全不用关闭 buffer，只需要在代码中加 header 就好，顺利把 buffer 优雅关闭</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">header(&apos;X-Accel-Buffering: no&apos;);</span><br></pre></td></tr></table></figure>
<p>在需要关闭 nginx 的 buffer 的请求响应添加 X-Accel-Buffering 头：<br>response.addHeader(“X-Accel-Buffering”, “no”);</p>
<ul>
<li>其他问题</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    ....</span><br><span class="line">    fastcgi_buffer_size 1k; </span><br><span class="line">    fastcgi_buffers 16 1k;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其实读可以这么理解上面的配置，nginx会在攒够一块儿缓冲区的量后，将一块儿数据发出去。上面我们配置了fastcgi_buffers 16 1k; 就是16块儿，大小为1K的缓存。</p>
<p>我们的数据量太小了，连默认的一块儿缓冲区都填不满，没法看到分块儿发送的效果，所以这里我们将缓冲区给调小为1K，这样就能1K为单位分块儿，1K一发，体现出实验效果了。</p>
<h2 id="ios-系统-buffer-问题"><a href="#ios-系统-buffer-问题" class="headerlink" title="ios 系统 buffer 问题"></a>ios 系统 buffer 问题</h2><ul>
<li>经过 nginx 负载</li>
</ul>
<p>首屏内容最少要 200 个字符（html标签、css样式、js代码不算在内），同时需要配置 X-Accel-Buffering 头才会分块 flush</p>
<ul>
<li>不经过 nginx 负载</li>
</ul>
<p>首屏内容最少要 200 个字符（html标签、css样式、js代码不算在内），无需配置 X-Accel-Buffering 头</p>
<h2 id="android-系统-buffer-问题"><a href="#android-系统-buffer-问题" class="headerlink" title="android 系统 buffer 问题"></a>android 系统 buffer 问题</h2><p>配置 X-Accel-Buffering 头，首屏内容超过 200 字符都不能分块 flush</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>BigPipe</tag>
        <tag>Facebook</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>IP 操作工具类</title>
    <url>/posts/27e8862d.html</url>
    <content><![CDATA[<h1 id="IpUtils-java"><a href="#IpUtils-java" class="headerlink" title="IpUtils.java"></a>IpUtils.java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.LineNumberReader;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * IP 操作工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/4/4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IpUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取 IP</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     1、如果使用ngnix反向代理，导致不能使用HttpServletRequest.getRemoteAddr()获取来访者真实ip的问题，</span></span><br><span class="line"><span class="comment">     *     2、对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照','分割</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddr</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String ipAddr = request.getHeader(<span class="string">"x-forwarded-for"</span>);</span><br><span class="line">        <span class="keyword">if</span> (ipAddr == <span class="keyword">null</span> || ipAddr.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ipAddr)) &#123;</span><br><span class="line">            ipAddr = request.getHeader(<span class="string">"Proxy-Client-IP"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ipAddr == <span class="keyword">null</span> || ipAddr.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ipAddr)) &#123;</span><br><span class="line">            ipAddr = request.getHeader(<span class="string">"WL-Proxy-Client-IP"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ipAddr == <span class="keyword">null</span> || ipAddr.length() == <span class="number">0</span> || <span class="string">"unknown"</span>.equalsIgnoreCase(ipAddr)) &#123;</span><br><span class="line">            ipAddr = request.getRemoteAddr();</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"127.0.0.1"</span>.equals(ipAddr) || <span class="string">"0:0:0:0:0:0:0:1"</span>.equals(ipAddr)) &#123;</span><br><span class="line">                <span class="comment">//根据网卡取本机配置的IP</span></span><br><span class="line">                InetAddress inet = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    inet = InetAddress.getLocalHost();</span><br><span class="line">                    ipAddr = inet.getHostAddress();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照','分割</span></span><br><span class="line">        <span class="comment">// 没有考虑ipv6</span></span><br><span class="line">        <span class="comment">// if (ipAddr != null &amp;&amp; ipAddr.length() &gt; 15) &#123; //"***.***.***.***".length() = 15</span></span><br><span class="line">        <span class="comment">//     if (ipAddr.indexOf(",") &gt; 0) &#123;</span></span><br><span class="line">        <span class="comment">//         ipAddr = ipAddr.substring(0, ipAddr.indexOf(","));</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">if</span> (ipAddr != <span class="keyword">null</span> &amp;&amp; ipAddr.contains(<span class="string">","</span>)) &#123;</span><br><span class="line">            ipAddr = ipAddr.substring(<span class="number">0</span>, ipAddr.indexOf(<span class="string">","</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ipAddr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 IP 获得 MAC 地址</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip IP 地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMacAddr</span><span class="params">(String ip)</span> </span>&#123;</span><br><span class="line">        String macAddr = <span class="string">""</span>;</span><br><span class="line">        InputStreamReader isr = <span class="keyword">null</span>;</span><br><span class="line">        LineNumberReader reader = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Process p = Runtime.getRuntime().exec(<span class="string">"nbtstat -A "</span> + ip);</span><br><span class="line">            isr = <span class="keyword">new</span> InputStreamReader(p.getInputStream());</span><br><span class="line">            reader = <span class="keyword">new</span> LineNumberReader(isr);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                String str = reader.readLine();</span><br><span class="line">                <span class="keyword">if</span> (str != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (str.indexOf(<span class="string">"MAC Address"</span>) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                        macAddr = str.substring(str.indexOf(<span class="string">"MAC Address"</span>) + <span class="number">14</span>, str.length());</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (isr != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    isr.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    reader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> macAddr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>JAVA 通用树形结构数据构建工具类</title>
    <url>/posts/35652e2e.html</url>
    <content><![CDATA[<h1 id="TreeNode"><a href="#TreeNode" class="headerlink" title="TreeNode"></a>TreeNode</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 树结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1506101868495287822L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"节点Id"</span>)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"节点名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String label;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"父节点Id"</span>)</span><br><span class="line">    <span class="keyword">private</span> String parentId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"子节点列表"</span>)</span><br><span class="line">    <span class="keyword">private</span> List&lt;TreeNode&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="第一种：单一实体"><a href="#第一种：单一实体" class="headerlink" title="第一种：单一实体"></a>第一种：单一实体</h1><blockquote>
<p>实现</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据列表，构建树结构</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list 					列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> rootParentId 	根节点的 parentId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 树结构数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;TreeNode&gt; <span class="title">convert</span><span class="params">(List&lt;TreeNode&gt; list, String rootParentId)</span> </span>&#123;</span><br><span class="line">  List&lt;TreeNode&gt; tree = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  Iterator&lt;TreeNode&gt; iterator = list.iterator();</span><br><span class="line">  <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">    TreeNode node = iterator.next();</span><br><span class="line">    String parentId = node.getParentId();</span><br><span class="line">    <span class="keyword">if</span> (ObjectUtils.isEmpty(parentId) || rootParentId.equals(parentId)) &#123;</span><br><span class="line">      tree.add(node);</span><br><span class="line">      iterator.remove();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (TreeNode node : tree) &#123;</span><br><span class="line">    List&lt;TreeNode&gt; children = TreeNode.getChildren(node, list);</span><br><span class="line">    node.getChildren().addAll(children);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取子节点数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parentNode 父节点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list       所有节点集合</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回子节点列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;TreeNode&gt; <span class="title">getChildren</span><span class="params">(TreeNode parentNode, List&lt;TreeNode&gt; list)</span> </span>&#123;</span><br><span class="line">  List&lt;TreeNode&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  Iterator&lt;TreeNode&gt; iterator = list.iterator();</span><br><span class="line">  <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">    TreeNode node = iterator.next();</span><br><span class="line">    <span class="comment">// 如果当前节点 ID 与父节点 ID 一致，表示当前数据是该节点的子节点</span></span><br><span class="line">    <span class="keyword">if</span> (parentNode.getId().equals(node.getParentId())) &#123;</span><br><span class="line">      children.add(node);</span><br><span class="line">      iterator.remove();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 递归调用</span></span><br><span class="line">  <span class="keyword">for</span> (TreeNode node : children) &#123;</span><br><span class="line">    <span class="comment">// 调用自身方法，依次添加子节点数据</span></span><br><span class="line">    node.getChildren().addAll(getChildren(node, list));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> children;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用例子</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;TreeNode&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(...);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建树形结构数据</span></span><br><span class="line">List&lt;TreeNode&gt; tree = convert(list, <span class="string">"-1"</span>);</span><br></pre></td></tr></table></figure>
<h1 id="第二种：任意实体"><a href="#第二种：任意实体" class="headerlink" title="第二种：任意实体"></a>第二种：任意实体</h1><blockquote>
<p>实现</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据列表，构建树结构</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list                列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> getIdFunction       Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> getParentIdFunction parentId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> setChildrenFunction children 列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rootParentId        跟节点父级 ID，一般为 0 或 -1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 树结构数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">build</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;T&gt; list,</span></span></span><br><span class="line"><span class="function"><span class="params">            Function&lt;T, ?&gt; getIdFunction,</span></span></span><br><span class="line"><span class="function"><span class="params">            Function&lt;T, ?&gt; getParentIdFunction,</span></span></span><br><span class="line"><span class="function"><span class="params">            BiConsumer&lt;T, List&lt;T&gt;&gt; setChildrenFunction,</span></span></span><br><span class="line"><span class="function"><span class="params">            Long rootParentId</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        List&lt;T&gt; tree = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Iterator&lt;T&gt; iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            T node = iterator.next();</span><br><span class="line">            Object parentId = getParentIdFunction.apply(node);</span><br><span class="line">            <span class="keyword">if</span> (ObjectUtils.isEmpty(parentId) || rootParentId.equals(parentId)) &#123;</span><br><span class="line">                tree.add(node);</span><br><span class="line">                iterator.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (T node : tree) &#123;</span><br><span class="line">            List&lt;T&gt; children = getChildren(node, list, getIdFunction, getParentIdFunction, setChildrenFunction);</span><br><span class="line">            <span class="keyword">if</span> (!children.isEmpty()) &#123;</span><br><span class="line">                setChildrenFunction.accept(node, children);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取子节点数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parentNode 父节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list       所有节点集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回子节点列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">getChildren</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            T parentNode,</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;T&gt; list,</span></span></span><br><span class="line"><span class="function"><span class="params">            Function&lt;T, ?&gt; getIdFunction,</span></span></span><br><span class="line"><span class="function"><span class="params">            Function&lt;T, ?&gt; getParentFunction,</span></span></span><br><span class="line"><span class="function"><span class="params">            BiConsumer&lt;T, List&lt;T&gt;&gt; setChildrenFunction</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>&#123;</span><br><span class="line">        List&lt;T&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Iterator&lt;T&gt; iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            T node = iterator.next();</span><br><span class="line">            <span class="comment">// 如果当前节点 ID 与父节点 ID 一致，表示当前数据是该节点的子节点</span></span><br><span class="line">            Object id = getIdFunction.apply(parentNode);</span><br><span class="line">            Object parentId = getParentFunction.apply(node);</span><br><span class="line">            <span class="keyword">if</span> (id.toString().equals(parentId.toString())) &#123;</span><br><span class="line">                children.add(node);</span><br><span class="line">                iterator.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 递归调用</span></span><br><span class="line">        <span class="keyword">for</span> (T node : children) &#123;</span><br><span class="line">            <span class="comment">// 调用自身方法，依次添加子节点数据</span></span><br><span class="line">            List&lt;T&gt; childrenNodes = getChildren(node, list, getIdFunction, getParentFunction, setChildrenFunction);</span><br><span class="line">            <span class="keyword">if</span> (!childrenNodes.isEmpty()) &#123;</span><br><span class="line">                setChildrenFunction.accept(node, childrenNodes);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用例子</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;TreeNode&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(...);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建树形结构数据</span></span><br><span class="line">List&lt;TreeNode&gt; tree = build(list, TreeNode::getId, TreeNode::getParentId, TreeNode::setChildren, <span class="string">"-1"</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Tree</tag>
      </tags>
  </entry>
  <entry>
    <title>JVM优化</title>
    <url>/posts/1a45f578.html</url>
    <content><![CDATA[<p>阿里巴巴<code>Dubbo</code>框架推荐配置参数，参数值根据情况调整</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-server </span><br><span class="line">-Xmx2g </span><br><span class="line">-Xms2g </span><br><span class="line">-Xmn256m </span><br><span class="line">-XX:PermSize=128m </span><br><span class="line">-Xss256k </span><br><span class="line">-XX:+DisableExplicitGC </span><br><span class="line">-XX:+UseConcMarkSweepGC </span><br><span class="line">-XX:+CMSParallelRemarkEnabled </span><br><span class="line">-XX:+UseCMSCompactAtFullCollection </span><br><span class="line">-XX:LargePageSizeInBytes=128m </span><br><span class="line">-XX:+UseFastAccessorMethods </span><br><span class="line">-XX:+UseCMSInitiatingOccupancyOnly </span><br><span class="line">-XX:CMSInitiatingOccupancyFraction=70</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">-server <span class="comment"># 服务器模式</span></span><br><span class="line">-Xms <span class="comment"># JVM初始分配的堆内存，一般和Xmx配置成一样，以避免每次gc后JVM重新分配内存</span></span><br><span class="line">-Xmx <span class="comment"># JVM最大允许分配的堆内存</span></span><br><span class="line">-Xmn <span class="comment"># 年轻代内存大小，整个JVM内存=年轻代+年老代+持久代</span></span><br><span class="line">-XX:PermSize=128m <span class="comment"># 持久代内存大小</span></span><br><span class="line">-Xss256k <span class="comment"># 设置每个线程的栈内存大小</span></span><br><span class="line">-XX:+DisableExplicitGC <span class="comment"># 忽略手动调用GC，System.gc()的调用就会变成一个空调用，完全不触发GC</span></span><br><span class="line">-XX:+UseConcMarkSweepGC <span class="comment"># 并发标记清除（CMS）收集器</span></span><br><span class="line">-XX:+CMSParallelRemarkEnabled <span class="comment"># 降低标记停顿</span></span><br><span class="line">-XX:+UseCMSCompactAtFullCollection <span class="comment"># 在FULLGC的时候对年老代的压缩（CMS是不会移动内存的，因此，这个非常容易产生碎片，导致内存不够用，因此，内存的压缩这个时候就会被启用。增加这个参数是个好习惯。可能会影响性能，但是可以消除碎片）</span></span><br><span class="line">-XX:LargePageSizeInBytes=128m <span class="comment"># 内存页的大小（内存页的大小不可设置过大，会影响Perm的大小）</span></span><br><span class="line">-XX:+UseFastAccessorMethods <span class="comment"># 原始类型的快速优化</span></span><br><span class="line">-XX:+UseCMSInitiatingOccupancyOnly <span class="comment"># 使用手动定义初始化定义开始CMS收集（禁止hostspot自行触发CMS GC）</span></span><br><span class="line">-XX:CMSInitiatingOccupancyFraction=70 <span class="comment"># 使用CMS作为垃圾回收，使用70%后开始CMS收集（符合公式：CMSInitiatingOccupancyFraction &lt;=((Xmx-Xmn)-(Xmn-Xmn/(SurvivorRatior+2)))/(Xmx-Xmn)*100，否则会报promontion faild错误）</span></span><br></pre></td></tr></table></figure>
<h1 id="OmitStackTraceInFastThrow"><a href="#OmitStackTraceInFastThrow" class="headerlink" title="OmitStackTraceInFastThrow"></a>OmitStackTraceInFastThrow</h1><p>问题描述：生产环境抛异常,但却没有将堆栈信息输出到日志<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -XX:+OmitStackTraceInFastThrow 选项在 -server 情况下默认开启。</span><br><span class="line">这就不难解释为何经常在系统日志中看到很多行的java.lang.NullPointerException 苦于找不到 stacktrace 而不知道错误出在何处。 </span><br><span class="line">遇到这种情况，解决的方法也很简单：既然在一段时间后 jvm 才会进行重新编译优化，那么该错误在刚开始出现的时候还是会有 stacktrace 的。所以向前搜索日志，或者将程序重启，观察刚重启时候的 log 便可以找到错误的 stacktrace</span><br><span class="line">-XX:+OmitStackTraceInFastThrow</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br></pre></td></tr></table></figure></p>
<h1 id="PreserveFramePointer"><a href="#PreserveFramePointer" class="headerlink" title="PreserveFramePointer"></a>PreserveFramePointer</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 如果使用 perfj 画 Flame Graph 的话，开启这个</span><br><span class="line">–XX:+PreserveFramePointer</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title>Java、Oracle 的 DES 加解密方式互转</title>
    <url>/posts/5145849a.html</url>
    <content><![CDATA[<blockquote>
<p> 本文主要实现<code>Oracle</code> <code>DES</code>加解密和<code>Java</code> <code>DES</code>加解密的互转。</p>
</blockquote>
<h1 id="Oracle-加解密实现"><a href="#Oracle-加解密实现" class="headerlink" title="Oracle 加解密实现"></a>Oracle 加解密实现</h1><h2 id="包定义"><a href="#包定义" class="headerlink" title="包定义"></a>包定义</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PACKAGE</span> WX_CRYPTO <span class="keyword">IS</span></span><br><span class="line">  <span class="comment">-- 定义 DES encrypt 函数</span></span><br><span class="line">  <span class="keyword">FUNCTION</span> <span class="keyword">DES_ENCRYPT</span>(INPUT_STRING <span class="keyword">IN</span> <span class="built_in">VARCHAR2</span>) <span class="keyword">RETURN</span> <span class="built_in">VARCHAR2</span>;</span><br><span class="line">  FUNCTION DES_ENCRYPT(INPUT_STRING IN VARCHAR2, KEY_STRING IN VARCHAR2)</span><br><span class="line">    RETURN VARCHAR2;</span><br><span class="line"></span><br><span class="line">  <span class="comment">-- 定义 DES decrypt 函数</span></span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2) RETURN VARCHAR2 DETERMINISTIC;</span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2, KEY_STRING IN VARCHAR2)</span><br><span class="line">    RETURN VARCHAR2 DETERMINISTIC;</span><br><span class="line"><span class="keyword">END</span> WX_CRYPTO;</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h2 id="包体定义"><a href="#包体定义" class="headerlink" title="包体定义"></a>包体定义</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PACKAGE</span> <span class="keyword">BODY</span> WX_CRYPTO <span class="keyword">IS</span></span><br><span class="line">  <span class="comment">-- 实现 DES encrypt 函数（一个参数）</span></span><br><span class="line">  <span class="keyword">FUNCTION</span> <span class="keyword">DES_ENCRYPT</span>(INPUT_STRING <span class="keyword">IN</span> <span class="built_in">VARCHAR2</span> <span class="comment">-- 明文</span></span><br><span class="line">                       ) <span class="keyword">RETURN</span> <span class="built_in">VARCHAR2</span> <span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> WX_CRYPTO.DES_ENCRYPT(INPUT_STRING =&gt; INPUT_STRING,</span><br><span class="line">                                 KEY_STRING   =&gt; <span class="string">'12345678'</span>);</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">-- 实现 DES encrypt 函数（两个参数）</span></span><br><span class="line">  FUNCTION DES_ENCRYPT(INPUT_STRING IN VARCHAR2, <span class="comment">-- 明文</span></span><br><span class="line">                       KEY_STRING   IN VARCHAR2 <span class="comment">-- 密钥</span></span><br><span class="line">                       ) RETURN VARCHAR2 AS</span><br><span class="line">    V_TEXT        VARCHAR2(4000); <span class="comment">-- 明文。长度要是 8 的倍数，若不足 8 的倍数，则用隐藏字符串 chr(0) 补足</span></span><br><span class="line">    V_TEXT_RAW    RAW(2048); <span class="comment">-- 明文</span></span><br><span class="line">    V_KEY_RAW     RAW(128); <span class="comment">-- 密钥</span></span><br><span class="line">    V_ENCRYPT_RAW RAW(2048); <span class="comment">-- 加密后的字符串</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> INPUT_STRING <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span></span><br><span class="line">      <span class="keyword">RETURN</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    IF INSTR(INPUT_STRING, '&#123;DES&#125;') = 1 THEN</span><br><span class="line">      RETURN INPUT_STRING;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    <span class="comment">-- 向右补足。CHR(0) 隐藏字符串</span></span><br><span class="line">    V_TEXT := RPAD(INPUT_STRING,</span><br><span class="line">                   (TRUNC(LENGTHB(INPUT_STRING) / 8) + 1) * 8,</span><br><span class="line">                   CHR(0));</span><br><span class="line">    <span class="comment">-- 转换成 16 进制</span></span><br><span class="line">    V_TEXT_RAW    := SYS.UTL_I18N.STRING_TO_RAW(V_TEXT, 'ZHS16GBK');</span><br><span class="line">    V_KEY_RAW     := SYS.UTL_I18N.STRING_TO_RAW(KEY_STRING, 'ZHS16GBK');</span><br><span class="line">    V_ENCRYPT_RAW := SYS.DBMS_OBFUSCATION_TOOLKIT.DESENCRYPT(INPUT =&gt; V_TEXT_RAW,</span><br><span class="line">                                                         KEY   =&gt; V_KEY_RAW);</span><br><span class="line">    RETURN '&#123;DES&#125;' || RAWTOHEX(V_ENCRYPT_RAW);</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">-- 实现 DES decrypt 函数（一个参数）</span></span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2 <span class="comment">-- 明文</span></span><br><span class="line">                       ) RETURN VARCHAR2 DETERMINISTIC AS</span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> WX_CRYPTO.DES_DECRYPT(INPUT_STRING =&gt; INPUT_STRING,</span><br><span class="line">                                 KEY_STRING   =&gt; <span class="string">'12345678'</span>);</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">-- 实现 DES decrypt 函数（两个参数）</span></span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2, <span class="comment">-- 密文</span></span><br><span class="line">                       KEY_STRING   IN VARCHAR2 <span class="comment">-- 密钥</span></span><br><span class="line">                       ) RETURN VARCHAR2 DETERMINISTIC AS</span><br><span class="line">    V_TEXT_RAW       RAW(2048); <span class="comment">-- 密文</span></span><br><span class="line">    V_KEY_RAW        RAW(128); <span class="comment">-- 密钥</span></span><br><span class="line">    V_DECRYPT_RAW    RAW(2048); <span class="comment">-- 解密后的明文</span></span><br><span class="line">    V_DECRYPT_STRING VARCHAR2(4000); <span class="comment">-- 解密后的明文</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> INPUT_STRING <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span></span><br><span class="line">      <span class="keyword">RETURN</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    IF INSTR(INPUT_STRING, '&#123;DES&#125;') = 1 THEN</span><br><span class="line">      V_TEXT_RAW := HEXTORAW(SUBSTR(INPUT_STRING, 6));</span><br><span class="line">      <span class="comment">-- 转换成 16 进制</span></span><br><span class="line">      V_KEY_RAW := SYS.UTL_I18N.STRING_TO_RAW(KEY_STRING, 'ZHS16GBK');</span><br><span class="line">      <span class="comment">-- 解密</span></span><br><span class="line">      V_DECRYPT_RAW := SYS.DBMS_OBFUSCATION_TOOLKIT.DESDECRYPT(INPUT =&gt; V_TEXT_RAW,</span><br><span class="line">                                                           KEY   =&gt; V_KEY_RAW);</span><br><span class="line">      <span class="comment">-- RAW_TO_CHAR 转换成字符串</span></span><br><span class="line">      V_DECRYPT_STRING := SYS.UTL_I18N.RAW_TO_CHAR(V_DECRYPT_RAW, 'ZHS16GBK');</span><br><span class="line">      <span class="comment">-- RTRIM 去除字符串右侧的隐藏字符串 CHR(0)</span></span><br><span class="line">      RETURN RTRIM(V_DECRYPT_STRING, CHR(0));</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    RETURN INPUT_STRING;</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">END</span> WX_CRYPTO;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：</p>
<p>1、sql中默认密钥为<code>12345678</code></p>
<p>2、加密后会加上：<code>{DES}</code>前缀；解密的时候会用<code>SUBSTR</code>掉截取掉<code>{DES}</code>前缀</p>
</blockquote>
<h1 id="JAVA-加解密实现"><a href="#JAVA-加解密实现" class="headerlink" title="JAVA 加解密实现"></a>JAVA 加解密实现</h1><h2 id="DES-工具类实现"><a href="#DES-工具类实现" class="headerlink" title="DES 工具类实现"></a>DES 工具类实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.DESKeySpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidAlgorithmParameterException;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidKeySpecException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Oracle des 加解密 java 实现</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Des</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String ALGORITHM_1 = <span class="string">"DES"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String ALGORITHM_2 = <span class="string">"DES/CBC/NoPadding"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String CHARSET = <span class="string">"gbk"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 原始字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 加密 key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String str, String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DESKeySpec desKey = <span class="keyword">new</span> DESKeySpec(key.getBytes(CHARSET));</span><br><span class="line">            SecretKey secretKey = SecretKeyFactory.getInstance(ALGORITHM_1).generateSecret(desKey);</span><br><span class="line"></span><br><span class="line">            Cipher cipher = Cipher.getInstance(ALGORITHM_2);</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE, secretKey, <span class="keyword">new</span> IvParameterSpec(<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>]));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = str.getBytes(CHARSET);</span><br><span class="line">            System.out.println(<span class="string">"src ---&gt; "</span> + Arrays.toString(bytes));</span><br><span class="line">            <span class="keyword">byte</span>[] inBytes = <span class="keyword">new</span> <span class="keyword">byte</span>[((bytes.length / <span class="number">8</span>) + <span class="number">1</span>) * <span class="number">8</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">                inBytes[i] = bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"inBytes ---&gt; "</span> + Arrays.toString(inBytes));</span><br><span class="line">            <span class="keyword">byte</span>[] eBytes = cipher.doFinal(inBytes);</span><br><span class="line">            String hexStr = HexUtils.encodeHexString(eBytes, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            System.out.println(str + <span class="string">" encrypted (hex)   :"</span> + hexStr);</span><br><span class="line">            <span class="keyword">return</span> hexStr;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeySpecException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 加密字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 解密 key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String str, String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DESKeySpec desKey = <span class="keyword">new</span> DESKeySpec(key.getBytes(CHARSET));</span><br><span class="line">            SecretKey secretKey = SecretKeyFactory.getInstance(ALGORITHM_1).generateSecret(desKey);</span><br><span class="line"></span><br><span class="line">            Cipher cipher = Cipher.getInstance(ALGORITHM_2);</span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, secretKey, <span class="keyword">new</span> IvParameterSpec(<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>]));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = HexUtils.decodeHex(str);</span><br><span class="line">            <span class="keyword">byte</span>[] dBytes = cipher.doFinal(bytes);</span><br><span class="line">            System.out.println(<span class="string">"decryptBytes ---&gt; "</span> + Arrays.toString(dBytes));</span><br><span class="line"></span><br><span class="line">            List&lt;Byte&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">byte</span> dByte : dBytes) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dByte != <span class="number">0</span>) &#123;</span><br><span class="line">                    list.add(dByte);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">byte</span>[] copy = <span class="keyword">new</span> <span class="keyword">byte</span>[list.size()];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                copy[i] = list.get(i);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(copy, CHARSET);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeySpecException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RRException(e.getMessage(), -<span class="number">99</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="HexUtils-工具类"><a href="#HexUtils-工具类" class="headerlink" title="HexUtils 工具类"></a>HexUtils 工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * hex 编码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">HexUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HexUtils</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Used to build output as Hex</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[] DIGITS_LOWER =</span><br><span class="line">            &#123;<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Used to build output as Hex</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[] DIGITS_UPPER =</span><br><span class="line">            &#123;<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将表示十六进制值的String转换为这些相同值的字节数组</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 十六进制数字的字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 包含从提供的char数组解码的二进制数据的字节数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decodeHex(<span class="keyword">final</span> String data) &#123;</span><br><span class="line">        <span class="keyword">return</span> decodeHex(data.toCharArray());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将表示十六进制值的字符数组转换为这些相同值的字节数组</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 十六进制数字的字符数组</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 包含从提供的char数组解码的二进制数据的字节数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decodeHex(<span class="keyword">final</span> <span class="keyword">char</span>[] data) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> len = data.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((len &amp; <span class="number">0x01</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Odd number of characters."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] out = <span class="keyword">new</span> <span class="keyword">byte</span>[len &gt;&gt; <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// two characters form the hex value.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; j &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> f = toDigit(data[j], j) &lt;&lt; <span class="number">4</span>;</span><br><span class="line">            j++;</span><br><span class="line">            f = f | toDigit(data[j], j);</span><br><span class="line">            j++;</span><br><span class="line">            out[i] = (<span class="keyword">byte</span>) (f &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将字节数组转换为字符数组，按顺序表示每个字节的十六进制值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 需要转换为十六进制字符数组的 byte 数组</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 十六进制字符数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span>[] encodeHex(<span class="keyword">final</span> <span class="keyword">byte</span>[] data) &#123;</span><br><span class="line">        <span class="keyword">return</span> encodeHex(data, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts an array of bytes into an array of characters representing the hexadecimal values of each byte in order.</span></span><br><span class="line"><span class="comment">     * The returned array will be double the length of the passed array, as it takes two characters to represent any</span></span><br><span class="line"><span class="comment">     * given byte.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data        a byte[] to convert to Hex characters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toLowerCase &lt;code&gt;true&lt;/code&gt; converts to lowercase, &lt;code&gt;false&lt;/code&gt; to uppercase</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A char[] containing hexadecimal characters in the selected case</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">char</span>[] encodeHex(<span class="keyword">final</span> <span class="keyword">byte</span>[] data, <span class="keyword">final</span> <span class="keyword">boolean</span> toLowerCase) &#123;</span><br><span class="line">        <span class="keyword">return</span> encodeHex(data, toLowerCase ? DIGITS_LOWER : DIGITS_UPPER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts an array of bytes into an array of characters representing the hexadecimal values of each byte in order.</span></span><br><span class="line"><span class="comment">     * The returned array will be double the length of the passed array, as it takes two characters to represent any</span></span><br><span class="line"><span class="comment">     * given byte.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     a byte[] to convert to Hex characters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toDigits the output alphabet (must contain at least 16 chars)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A char[] containing the appropriate characters from the alphabet</span></span><br><span class="line"><span class="comment">     * For best results, this should be either upper- or lower-case hex.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span>[] encodeHex(<span class="keyword">final</span> <span class="keyword">byte</span>[] data, <span class="keyword">final</span> <span class="keyword">char</span>[] toDigits) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> l = data.length;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">char</span>[] out = <span class="keyword">new</span> <span class="keyword">char</span>[l &lt;&lt; <span class="number">1</span>];</span><br><span class="line">        <span class="comment">// two characters form the hex value.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; l; i++) &#123;</span><br><span class="line">            out[j++] = toDigits[(<span class="number">0xF0</span> &amp; data[i]) &gt;&gt;&gt; <span class="number">4</span>];</span><br><span class="line">            out[j++] = toDigits[<span class="number">0x0F</span> &amp; data[i]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts an array of bytes into a String representing the hexadecimal values of each byte in order. The returned</span></span><br><span class="line"><span class="comment">     * String will be double the length of the passed array, as it takes two characters to represent any given byte.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data a byte[] to convert to Hex characters</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A String containing lower-case hexadecimal characters</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encodeHexString</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> encodeHexString(data, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts an array of bytes into a String representing the hexadecimal values of each byte in order. The returned</span></span><br><span class="line"><span class="comment">     * String will be double the length of the passed array, as it takes two characters to represent any given byte.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data        a byte[] to convert to Hex characters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toLowerCase &lt;code&gt;true&lt;/code&gt; converts to lowercase, &lt;code&gt;false&lt;/code&gt; to uppercase</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A String containing lower-case hexadecimal characters</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encodeHexString</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span>[] data, <span class="keyword">final</span> <span class="keyword">boolean</span> toLowerCase)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(encodeHex(data, toLowerCase));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Converts a hexadecimal character to an integer.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ch    A character to convert to an integer digit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index The index of the character in the source</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> An integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">toDigit</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> ch, <span class="keyword">final</span> <span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> digit = Character.digit(ch, <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">if</span> (digit == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal hexadecimal character "</span> + ch + <span class="string">" at index "</span> + index);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> digit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>Oracle</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Oracle 加密</span></span><br><span class="line"><span class="keyword">SELECT</span> WX_CRYPTO.DES_ENCRYPT(<span class="string">'测试123！@#。【】[] '</span>, <span class="string">'7agyrpho'</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">&#123;DES&#125;EBD9F4F8AC29DDFCD74FD951A2B84F064D5CD6976143B08644AC7B62569BB4E6</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Oracle 解密</span></span><br><span class="line"><span class="keyword">SELECT</span> WX_CRYPTO.DES_DECRYPT(<span class="string">'&#123;DES&#125;EBD9F4F8AC29DDFCD74FD951A2B84F064D5CD6976143B08644AC7B62569BB4E6'</span>,</span><br><span class="line">                             <span class="string">'7agyrpho'</span>)</span><br><span class="line">  <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">测试123！@<span class="comment">#。【】[] </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Oracle 解密 Java 的密文</span></span><br><span class="line"><span class="keyword">SELECT</span> WX_CRYPTO.DES_DECRYPT(<span class="string">'&#123;DES&#125;EBD9F4F8AC29DDFCD74FD951A2B84F064D5CD6976143B086'</span>,</span><br><span class="line">                             <span class="string">'7agyrpho'</span>)</span><br><span class="line">  <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">-- 输出</span></span><br><span class="line">测试123！@<span class="comment">#。【】[]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Java</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DesTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"测试123！@#。【】[] "</span>;</span><br><span class="line">        String key = <span class="string">"7agyrpho"</span>;</span><br><span class="line">        <span class="comment">// Java 加密</span></span><br><span class="line">        String ee = Des.encrypt(str, key);</span><br><span class="line">        System.out.println(<span class="string">"ee ---&gt; "</span> + ee);</span><br><span class="line">        <span class="comment">// Java 解密</span></span><br><span class="line">        String dd = Des.decrypt(ee, key);</span><br><span class="line">        System.out.println(<span class="string">"dd ---&gt; "</span> + dd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 日志输出</span></span><br><span class="line">ee ---&gt; EBD9F4F8AC29DDFCD74FD951A2B84F064D5CD6976143B086</span><br><span class="line">dd ---&gt; 测试123！@#。【】[] </span><br><span class="line"></span><br><span class="line"><span class="comment">// Java 解密 Oracle 的密文</span></span><br><span class="line">String dd = Des.decrypt(<span class="string">"EBD9F4F8AC29DDFCD74FD951A2B84F064D5CD6976143B08644AC7B62569BB4E6"</span>, <span class="string">"7agyrpho"</span>);</span><br><span class="line">System.out.println(<span class="string">"dd ---&gt; "</span> + dd);</span><br><span class="line"><span class="comment">// 日志输出</span></span><br><span class="line">dd ---&gt; 测试123！@#。【】[]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>DES</tag>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Lambda 用法</title>
    <url>/posts/cc1d3937.html</url>
    <content><![CDATA[<h1 id="按分组获取分组中最新一条记录"><a href="#按分组获取分组中最新一条记录" class="headerlink" title="按分组获取分组中最新一条记录"></a>按分组获取分组中最新一条记录</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 历史任务实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HistoryTask</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">7925632180050362451L</span>;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 主键ID</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String id;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 流程实例ID</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> String orderId;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 任务名称</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">	<span class="keyword">private</span> String taskName;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 任务显示名称</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String displayName;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 任务处理者ID</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> String operator;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 任务创建时间</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> String createTime;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 任务完成时间</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> String finishTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, HistoryTask&gt; <span class="title">getLatest</span><span class="params">(List&lt;HistoryTask&gt; historyTasks)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> historyTasks.stream().collect(</span><br><span class="line">    <span class="comment">// 根据任务处理者 Id 分组，获取各自分组中最新的一条记录</span></span><br><span class="line">    Collectors.toMap(</span><br><span class="line">      HistoryTask::getOperator,</span><br><span class="line">      Function.identity(),</span><br><span class="line">      (h1, h2) -&gt; &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          Date date1 = DateUtil.parseDate(h1.getFinishTime(), <span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">          Date date2 = DateUtil.parseDate(h2.getFinishTime(), <span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">          <span class="keyword">return</span> date1.after(date2) ? h1 : h2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">          <span class="comment">// ignore</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> h1;</span><br><span class="line">      &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">List&lt;HistoryTask&gt; historyTasks = ...</span><br><span class="line">historyTasks = <span class="keyword">new</span> ArrayList&lt;&gt;(getLatest(historyTasks).values());</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>lambada</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 应用 JAR 包部署启动脚本</title>
    <url>/posts/42919bde.html</url>
    <content><![CDATA[<blockquote>
<p>目录结构</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[txrd@host-148 /data/user-center]$ tree -af </span><br><span class="line">.</span><br><span class="line">├── ./project </span><br><span class="line">│ └── ./user-center-server.jar </span><br><span class="line">└── ./logs </span><br><span class="line">│ └── ./info.log</span><br><span class="line">│ └── ./error.log</span><br><span class="line">│ └── ./warn.log</span><br><span class="line">│ └── ./stdout.log</span><br><span class="line">└── ./restart.sh</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>restart.sh 脚本</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Author: YL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Date:   2019-05-08 15:52:30</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Last Modified by:   YL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Last Modified time: 2022-05-21 13:28:19</span></span><br><span class="line"></span><br><span class="line">export LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line">cd `dirname $0`</span><br><span class="line">CURRENT_DIR=`pwd`</span><br><span class="line">LOGS_DIR=$CURRENT_DIR/logs</span><br><span class="line">STDOUT_FILE=$CURRENT_DIR/logs/stdout.log</span><br><span class="line">PROJECT_HOME=$CURRENT_DIR/project</span><br><span class="line">JAR_FILE=$PROJECT_HOME/user-center-server.jar</span><br><span class="line"></span><br><span class="line">mkdir -p $&#123;LOGS_DIR&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> pid</span></span><br><span class="line">PIDS=`ps -ef | grep java | grep -v grep | grep "$JAR_FILE" | awk '&#123;print $2&#125;'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> JVM options</span></span><br><span class="line">JAVA_OPT="-server -Xms1g -Xmx1g -Xss256k"</span><br><span class="line">JAVA_OPT="$&#123;JAVA_OPT&#125; -Dloader.path=$&#123;PROJECT_HOME&#125;/lib/ -Djava.io.tmpdir=$&#123;LOGS_DIR&#125;"</span><br><span class="line">JAVA_OPT="$&#123;JAVA_OPT&#125; -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70"</span><br><span class="line">JAVA_OPT="$&#123;JAVA_OPT&#125; -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$&#123;LOGS_DIR&#125;/dump-`date +"%Y-%m-%d"`.hprof"</span><br><span class="line">JAVA_OPT="$&#123;JAVA_OPT&#125; -Ddubbo.protocol.port=20886"</span><br><span class="line">JAVA_OPT="$&#123;JAVA_OPT&#125; -Dspring.profiles.active=pro -Dfile.encoding=UTF-8"</span><br><span class="line">JAVA_OPT="$&#123;JAVA_OPT&#125; -jar $&#123;JAR_FILE&#125;"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Graceful shutdown</span></span><br><span class="line">function gracefulShutdown()&#123;</span><br><span class="line">    if [ -z "$PIDS" ]; then</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE does not started!" | tee -a $STDOUT_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE kill $PIDS begining" | tee -a $STDOUT_FILE</span><br><span class="line">        for PID in $PIDS ; do</span><br><span class="line">            kill $PID &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">        done</span><br><span class="line"></span><br><span class="line">        # check for graceful shutdown</span><br><span class="line">        COUNT=0</span><br><span class="line">        while [ $COUNT -lt 1 ]; do</span><br><span class="line">            sleep 1</span><br><span class="line">            COUNT=1</span><br><span class="line">            for PID in $PIDS ; do</span><br><span class="line">                PID_EXIST=`ps -f -p $PID | grep java`</span><br><span class="line">                if [ -n "$PID_EXIST" ]; then</span><br><span class="line">                    COUNT=0</span><br><span class="line">                    break</span><br><span class="line">                fi</span><br><span class="line">            done</span><br><span class="line">        done</span><br><span class="line">	echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE kill $PID success" | tee -a $STDOUT_FILE</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function operate()&#123;</span><br><span class="line">    if [[ "$1" = "kill" ]]; then</span><br><span class="line">        gracefulShutdown</span><br><span class="line">    elif [[ "$1" = "start" ]] ; then</span><br><span class="line">        # check JAVA_HOME ENV</span><br><span class="line">        if [[ -z $&#123;JAVA_HOME&#125; ]]; then</span><br><span class="line">           echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE 未配置 JAVA_HOME 环境变量" | tee -a $STDOUT_FILE</span><br><span class="line">           exit 1</span><br><span class="line">        fi</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE JAVA_HOME=$&#123;JAVA_HOME&#125;" | tee -a $STDOUT_FILE</span><br><span class="line">        </span><br><span class="line">        cd $PROJECT_HOME</span><br><span class="line">        # starting</span><br><span class="line">        nohup $JAVA_HOME/bin/java $JAVA_OPT &gt;&gt; $STDOUT_FILE 2&gt;&amp;1 &amp;</span><br><span class="line">        PIDS=`ps -ef | grep java | grep -v grep | grep "$JAR_FILE" | awk '&#123;print $2&#125;'`</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE started OK! pid: $PIDS" | tee -a $STDOUT_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE is not support $1" | tee -a $STDOUT_FILE</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [[ "$1" = "start" || "$1" = "check" ]]; then</span><br><span class="line">    if [ -n "$PIDS" ]; then</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE already started! pid: $PIDS" &gt;&gt; $STDOUT_FILE</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    operate start</span><br><span class="line">elif [[ "$1" = "" || "$1" = "restart" ]]; then</span><br><span class="line">    operate kill</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE starting" | tee -a $STDOUT_FILE</span><br><span class="line">    ls -d -t $LOGS_DIR/undertow* | tail -n +3 | xargs rm -rf</span><br><span class="line">    operate start</span><br><span class="line">elif [[ "$1" = "kill" ]]; then</span><br><span class="line">    operate kill</span><br><span class="line">else</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE is not support $1" | tee -a $STDOUT_FILE</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JAR</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Validation 使用</title>
    <url>/posts/2aa80b48.html</url>
    <content><![CDATA[<ul>
<li><p>NotBlank</p>
<p>基础类型是用来判断是否为空</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotBlank</span>(message = <span class="string">"员工工号不能为空"</span>)</span><br><span class="line"><span class="keyword">private</span> String empNo;</span><br></pre></td></tr></table></figure>
</li>
<li><p>NotNull</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotNull</span>(message = <span class="string">"员工 id 不能为空"</span>)</span><br><span class="line"><span class="keyword">private</span> Long empId;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Pattern</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"^G0[a-zA-Z0-9]+$"</span>, message = <span class="string">"员工工号不符合要求，请以 G0 开头，其余均需为数字或字母组合"</span>)</span><br><span class="line"><span class="keyword">private</span> String empNo;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Length</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Length</span>(max = <span class="number">25</span>, message = <span class="string">"员工工号长度不能超过&#123;max&#125;个字符"</span>)</span><br><span class="line"><span class="comment">// @Length(max = 45, message = "员工工号[$&#123;validatedValue&#125;]长度不能超过&#123;max&#125;个字符")</span></span><br><span class="line"><span class="keyword">private</span> String empNo;</span><br></pre></td></tr></table></figure>
</li>
<li><p>sdf</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>hibernate-validation</tag>
        <tag>javax-validation</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 线程池</title>
    <url>/posts/bc557e1a.html</url>
    <content><![CDATA[<h2 id="线程池作用"><a href="#线程池作用" class="headerlink" title="线程池作用"></a>线程池作用</h2><ul>
<li>CPU资源隔离</li>
<li>减少上下文切换</li>
<li>减少线程创建/关闭的资源开销</li>
<li>更好并发控制</li>
<li>更好生命周期控制</li>
</ul>
<h2 id="设计时注意事项"><a href="#设计时注意事项" class="headerlink" title="设计时注意事项"></a>设计时注意事项</h2><ul>
<li>任务混杂</li>
<li>任务依赖</li>
<li>饥饿死锁</li>
<li>慢操作</li>
</ul>
<a id="more"></a>
<h2 id="使用时注意事项"><a href="#使用时注意事项" class="headerlink" title="使用时注意事项"></a>使用时注意事项</h2><h3 id="线程池参数"><a href="#线程池参数" class="headerlink" title="线程池参数"></a>线程池参数</h3><ul>
<li>核心池大小（core pool size）</li>
<li>最大池的大小（maximum pool size）</li>
<li>存活时间（keep-alive time）</li>
<li>缓冲队列（work queue）</li>
</ul>
<h3 id="任务队列（BlockingQueue）"><a href="#任务队列（BlockingQueue）" class="headerlink" title="任务队列（BlockingQueue）"></a>任务队列（BlockingQueue）</h3><ul>
<li>无限队列<ul>
<li>LinkedBlockingQueue<ul>
<li><code>newSingleThreadExecutor</code></li>
<li><code>newFixedThreadPool</code></li>
</ul>
</li>
</ul>
</li>
<li><p>有限队列 </p>
<ul>
<li>ArrayBlockingQueue</li>
<li>LinkedBlockingQueue(int capacity)</li>
<li>饱和策略<ul>
<li><code>setRejectedExecutionHandler</code></li>
<li><code>ThreadPoolExecutor.AbortPolicy</code><ul>
<li>中止策略（默认）</li>
<li>抛出<code>RejectedExecutionException</code></li>
<li>调用者捕获后，自行实现逻辑</li>
</ul>
</li>
</ul>
</li>
<li>ThreadPoolExecutor.CallerRunsPolicy <ul>
<li>不丢弃任务</li>
<li>不抛出异常</li>
<li>把任务退回调用者线程执行（同步调用）</li>
</ul>
</li>
<li>ThreadPoolExecutor.DiscardOldestPolicy <ul>
<li>遗弃最旧的任务</li>
<li>选择本应该接下来就要执行的任务<ul>
<li>会尝试再次提交</li>
</ul>
</li>
<li>如果使用优先级队列，则丢弃优先级最高的元素</li>
<li><em>配合 SynchronousQueue 使用，可以实现任务提交并等待的效果</em></li>
</ul>
</li>
<li>ThreadPoolExecutor.DiscardPolicy <ul>
<li>遗弃策略</li>
<li>放弃这个任务</li>
</ul>
</li>
<li><p>可以结合<code>Semaphore</code>使用 </p>
<ul>
<li>限制任务注入率（injection rate）</li>
</ul>
</li>
<li><p>FIFO</p>
</li>
</ul>
</li>
<li>同步移交（synchronous handoff） <ul>
<li>直接传递给其他线程</li>
<li>SynchronousQueue<ul>
<li><code>newCachedThreadPool</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="线程工厂"><a href="#线程工厂" class="headerlink" title="线程工厂"></a>线程工厂</h3><ul>
<li><p>设置异常处理 <code>UncaughtExceptionHandler</code></p>
</li>
<li><p>设置线程名称</p>
</li>
<li>优先级（不建议）</li>
<li>守护线程（不建议）</li>
<li>增加额外的计数器</li>
<li>增加额外的统计信息</li>
<li><code>Executors.privilegedThreadFactory()</code>，使用安全策略创建线程 </li>
</ul>
<h3 id="执行策略"><a href="#执行策略" class="headerlink" title="执行策略"></a>执行策略</h3><ul>
<li>执行任务，不关心结果<ul>
<li>void execute(Runnable command)</li>
</ul>
</li>
<li>执行任务，需要对结果进行处理<ul>
<li>Future submit(Callable task)</li>
<li>Future submit(Runnable task)</li>
<li>Future submit(Runnable task, T result)</li>
</ul>
</li>
<li>执行一批任务，需要全部成功完成<ul>
<li>List<future> invokeAll(Collection&lt;? extends Callable<t>&gt; tasks)</t></future></li>
<li>List<future> invokeAll(Collection&lt;? extends Callable<t>&gt; tasks, long timeout, TimeUnit unit)</t></future></li>
</ul>
</li>
<li>执行一批任务，只需要有一个成功完成即可<ul>
<li>T List<future> invokeAny(Collection&lt;? extends Callable<t>&gt; tasks)</t></future></li>
<li>T invokeAny(Collection&lt;? extends Callable<t>&gt; tasks, long timeout, TimeUnit unit)</t></li>
</ul>
</li>
<li>执行一批任务，需要逐个处理结果<ul>
<li>CompletionService<ul>
<li>ExecutorCompletionService</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>ExecutorService</tag>
        <tag>Executors</tag>
      </tags>
  </entry>
  <entry>
    <title>返回 JSON 格式数据，Long 前端精准度丢失问题</title>
    <url>/posts/a56434f6.html</url>
    <content><![CDATA[<blockquote>
<p>spring-boot 2.0.0 以下版本</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 返回 JSON，Long 前端精准度丢失问题</span></span><br><span class="line">        MappingJackson2HttpMessageConverter converter = <span class="keyword">new</span> MappingJackson2HttpMessageConverter();</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 序列换成json时,将所有的long变成string</span></span><br><span class="line"><span class="comment">         * 因为js中得数字类型不能包含所有的java long值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        SimpleModule <span class="keyword">module</span> = <span class="keyword">new</span> SimpleModule();</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(Long<span class="class">.<span class="keyword">class</span>, <span class="title">ToStringSerializer</span>.<span class="title">instance</span>)</span>;</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class="line">        mapper.registerModule(<span class="keyword">module</span>);</span><br><span class="line">        converter.setObjectMapper(mapper);</span><br><span class="line">        converters.add(converter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>在<code>spring-boot</code> <code>2.0.x</code>以上版本，要在<code>WebMvConfig</code>上添加<code>@Order(0)</code>注解，否则配置不生效</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.<span class="keyword">module</span>.SimpleModule;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ser.std.ToStringSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Web Mvc 自定义配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     spring-boot 2.0.0.RELEASE configureMessageConverters生效，2.0.3.RELEASE不生效问题</span></span><br><span class="line"><span class="comment"> *     2.0.3.RELEASE要加&amp;#64;Order(0)才可以，而2.0.0.RELEASE以下版本不用加</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2017/6/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Order</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line">        Jackson2ObjectMapperBuilder builder = Jackson2ObjectMapperBuilder.json();</span><br><span class="line">        builder.dateFormat(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// if (this.applicationContext != null) &#123;</span></span><br><span class="line">        <span class="comment">//     builder.applicationContext(this.applicationContext);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// messageConverters.add(new MappingJackson2HttpMessageConverter(builder.build()));</span></span><br><span class="line">        <span class="comment">// 返回 JSON，Long 前端精准度丢失问题</span></span><br><span class="line">        <span class="comment">// ObjectMapper mapper = new ObjectMapper();</span></span><br><span class="line">        <span class="comment">// // 格式化日志格式</span></span><br><span class="line">        <span class="comment">// mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 序列换成json时,将所有的long变成string</span></span><br><span class="line"><span class="comment">         * 因为js中得数字类型不能包含所有的java long值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        SimpleModule <span class="keyword">module</span> = <span class="keyword">new</span> SimpleModule();</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(Long<span class="class">.<span class="keyword">class</span>, <span class="title">ToStringSerializer</span>.<span class="title">instance</span>)</span>;</span><br><span class="line">        <span class="keyword">module</span>.addSerializer(BigInteger<span class="class">.<span class="keyword">class</span>, <span class="title">ToStringSerializer</span>.<span class="title">instance</span>)</span>;</span><br><span class="line">        builder.modules(<span class="keyword">module</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mapper.registerModule(module);</span></span><br><span class="line">        <span class="comment">// MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter(builder.build());</span></span><br><span class="line">        <span class="comment">// converter.setObjectMapper(mapper);</span></span><br><span class="line">        converters.add(<span class="keyword">new</span> MappingJackson2HttpMessageConverter(builder.build()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>spring-boot 2.1.x 版本</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Jackson2ObjectMapperBuilderCustomizer <span class="title">jackson2ObjectMapperBuilderCustomizer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Jackson2ObjectMapperBuilderCustomizer customizer = <span class="keyword">new</span> Jackson2ObjectMapperBuilderCustomizer() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(Jackson2ObjectMapperBuilder builder)</span> </span>&#123;</span><br><span class="line">            builder.dateFormat(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>))</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * 序列换成json时,将所有的long变成string</span></span><br><span class="line"><span class="comment">                 * 因为js中得数字类型不能包含所有的java long值</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .serializerByType(Long<span class="class">.<span class="keyword">class</span>, <span class="title">ToStringSerializer</span>.<span class="title">instance</span>)</span></span><br><span class="line"><span class="class">                .<span class="title">serializerByType</span>(<span class="title">Long</span>.<span class="title">TYPE</span>, <span class="title">ToStringSerializer</span>.<span class="title">instance</span>)</span></span><br><span class="line"><span class="class">                .<span class="title">serializerByType</span>(<span class="title">BigInteger</span>.<span class="title">class</span>, <span class="title">ToStringSerializer</span>.<span class="title">instance</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> customizer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>OkHttp 动态超时时间配置</title>
    <url>/posts/eb373e45.html</url>
    <content><![CDATA[<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ul>
<li>自定义一个拦截器</li>
<li>在拦截器中重置超时时间等配置</li>
</ul>
<a id="more"></a>
<h1 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h1><blockquote>
<p>HeadersEx.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Headers;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeadersEx</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = HeadersEx<span class="class">.<span class="keyword">class</span>.<span class="title">getSimpleName</span>()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONNECT_TIMEOUT = NAME + <span class="string">".connectTimeout"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WRITE_TIMEOUT = NAME + <span class="string">".writeTimeout"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String READ_TIMEOUT = NAME + <span class="string">".readTimeout"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PRINT_LOG = NAME + <span class="string">".printLog"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer connectTimeout;</span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer writeTimeout;</span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer readTimeout;</span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> printLog;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HeadersEx</span><span class="params">(Integer connectTimeout, Integer writeTimeout, Integer readTimeout, <span class="keyword">boolean</span> printLog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.connectTimeout = connectTimeout;</span><br><span class="line">        <span class="keyword">this</span>.writeTimeout = writeTimeout;</span><br><span class="line">        <span class="keyword">this</span>.readTimeout = readTimeout;</span><br><span class="line">        <span class="keyword">this</span>.printLog = printLog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HeadersEx.<span class="function">Builder <span class="title">defaultConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Builder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Integer connectTimeout;</span><br><span class="line">        <span class="keyword">private</span> Integer writeTimeout;</span><br><span class="line">        <span class="keyword">private</span> Integer readTimeout;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> printLog = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        Builder() &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 配置 connectTimeout，单位：ms</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> connectTimeout 链接超时时间</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">connectTimeout</span><span class="params">(Integer connectTimeout)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.connectTimeout = connectTimeout;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 配置 writeTimeout，单位：ms</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> writeTimeout 请求超时时间</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">writeTimeout</span><span class="params">(Integer writeTimeout)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.writeTimeout = writeTimeout;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 配置 readTimeout，单位：ms</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> readTimeout 响应超时时间</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">readTimeout</span><span class="params">(Integer readTimeout)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.readTimeout = readTimeout;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 配置日志打印开关</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> printLog 是否打印request body、response body等日志</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">printLog</span><span class="params">(<span class="keyword">boolean</span> printLog)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.printLog = printLog;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function">HeadersEx <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> HeadersEx(<span class="keyword">this</span>.connectTimeout, <span class="keyword">this</span>.writeTimeout, <span class="keyword">this</span>.readTimeout, <span class="keyword">this</span>.printLog);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置读取超时时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> builder 响应超时时间：s</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Headers <span class="title">of</span><span class="params">(HeadersEx.Builder builder)</span> </span>&#123;</span><br><span class="line">        HeadersEx build = builder.build();</span><br><span class="line">        Integer connectTimeout = build.getConnectTimeout();</span><br><span class="line">        Integer writeTimeout = build.getWriteTimeout();</span><br><span class="line">        Integer readTimeout = build.getReadTimeout();</span><br><span class="line">        <span class="keyword">boolean</span> printLog = build.isPrintLog();</span><br><span class="line">        <span class="keyword">return</span> Headers.of(</span><br><span class="line">                CONNECT_TIMEOUT, connectTimeout == <span class="keyword">null</span> ? <span class="string">""</span> : String.valueOf(connectTimeout.intValue()),</span><br><span class="line">                WRITE_TIMEOUT, writeTimeout == <span class="keyword">null</span> ? <span class="string">""</span> : String.valueOf(writeTimeout.intValue()),</span><br><span class="line">                READ_TIMEOUT, readTimeout == <span class="keyword">null</span> ? <span class="string">""</span> : String.valueOf(readTimeout.intValue()),</span><br><span class="line">                PRINT_LOG, String.valueOf(printLog)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>TimeoutInterceptor.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> top.ylonline.common.okhttp.util.HeadersEx;</span><br><span class="line"><span class="keyword">import</span> top.ylonline.common.util.StrUtils;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Interceptor;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动态配置 connectTimeout、writeTimeout、readTimeout 超时时间拦截器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeoutInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Request request = chain.request();</span><br><span class="line">        String connectTimeout = request.header(HeadersEx.CONNECT_TIMEOUT);</span><br><span class="line">        <span class="keyword">if</span> (StrUtils.isNotBlank(connectTimeout)) &#123;</span><br><span class="line">            <span class="comment">// 动态修改：连接超时时间</span></span><br><span class="line">            chain = chain.withConnectTimeout(Integer.parseInt(connectTimeout), TimeUnit.MILLISECONDS);</span><br><span class="line">        &#125;</span><br><span class="line">        String writeTimeout = request.header(HeadersEx.WRITE_TIMEOUT);</span><br><span class="line">        <span class="keyword">if</span> (StrUtils.isNotBlank(writeTimeout)) &#123;</span><br><span class="line">            <span class="comment">// 动态修改：请求超时时间</span></span><br><span class="line">            chain = chain.withWriteTimeout(Integer.parseInt(writeTimeout), TimeUnit.MILLISECONDS);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String readTimeout = request.header(HeadersEx.READ_TIMEOUT);</span><br><span class="line">        <span class="keyword">if</span> (StrUtils.isNotBlank(readTimeout)) &#123;</span><br><span class="line">            <span class="comment">// 动态修改：响应超时时间</span></span><br><span class="line">            chain = chain.withReadTimeout(Integer.parseInt(readTimeout), TimeUnit.MILLISECONDS);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// log.info("connectTimeoutMillis: &#123;&#125;", chain.connectTimeoutMillis());</span></span><br><span class="line">        <span class="comment">// log.info("writeTimeoutMillis: &#123;&#125;", chain.writeTimeoutMillis());</span></span><br><span class="line">        <span class="comment">// log.info("readTimeoutMillis: &#123;&#125;", chain.readTimeoutMillis());</span></span><br><span class="line">        <span class="keyword">return</span> chain.proceed(request);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>OkHttpTest.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> OkHttpClient <span class="title">okHttpClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OkHttpCommonProperties props = properties.getCommon();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> connectTimeout = props.getConnectTimeout().toMillis();</span><br><span class="line">    <span class="keyword">long</span> readTimeout = props.getReadTimeout().toMillis();</span><br><span class="line">    <span class="keyword">long</span> writeTimeout = props.getWriteTimeout().toMillis();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> maxIdleConnections = props.getPool().getMaxIdleConnections();</span><br><span class="line">    <span class="keyword">long</span> keepAliveDuration = props.getPool().getKeepAliveDuration().toMillis();</span><br><span class="line"></span><br><span class="line">    OkHttpClient.Builder builder = <span class="keyword">new</span> OkHttpClient.Builder();</span><br><span class="line">    builder.connectTimeout(connectTimeout, TimeUnit.MILLISECONDS);</span><br><span class="line">    builder.readTimeout(readTimeout, TimeUnit.MILLISECONDS);</span><br><span class="line">    builder.writeTimeout(writeTimeout, TimeUnit.MILLISECONDS);</span><br><span class="line"></span><br><span class="line">    builder.retryOnConnectionFailure(<span class="keyword">false</span>);</span><br><span class="line">    <span class="comment">// 配置连接池</span></span><br><span class="line">    ConnectionPool pool = <span class="keyword">new</span> ConnectionPool(maxIdleConnections, keepAliveDuration, TimeUnit.MILLISECONDS);</span><br><span class="line">    builder.connectionPool(pool);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加动态超时时间配置拦截器</span></span><br><span class="line">    builder.addInterceptor(<span class="keyword">new</span> TimeoutInterceptor());</span><br><span class="line">    <span class="comment">// 添加日志拦截器</span></span><br><span class="line">    <span class="comment">// builder.addInterceptor(new LoggingInterceptor());</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 添加 https 支持</span></span><br><span class="line">        SSLContext sc = SSLContext.getInstance(<span class="string">"SSL"</span>);</span><br><span class="line">        <span class="comment">// SSLContext sc = SSLContext.getInstance("TLS");</span></span><br><span class="line">        DisabledValidationTrustManager trustManager = <span class="keyword">new</span> DisabledValidationTrustManager();</span><br><span class="line">        sc.init(<span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">new</span> TrustManager[]&#123;trustManager&#125;,</span><br><span class="line">                <span class="keyword">new</span> java.security.SecureRandom());</span><br><span class="line">        builder.sslSocketFactory(sc.getSocketFactory(), trustManager);</span><br><span class="line">        builder.hostnameVerifier(NoopHostnameVerifier.INSTANCE);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException | KeyManagementException e) &#123;</span><br><span class="line">        log.error(<span class="string">"okhttp init TLS failed."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> builder.build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">okHttpClient</span><span class="params">()</span> <span class="keyword">throws</span> OkHttpException </span>&#123;</span><br><span class="line">    OkHttpClient client = okHttpClient();</span><br><span class="line">    </span><br><span class="line">    HeadersEx.Builder builder = HeadersEx.defaultConfig()</span><br><span class="line">        .connectTimeout(<span class="number">4000</span>)</span><br><span class="line">        .readTimeout(<span class="number">10000</span>);</span><br><span class="line">    Request.Builder requestBuilder = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">        		.headers(HeadersEx.of(builder));</span><br><span class="line">    Request request = requestBuilder.build();</span><br><span class="line">    <span class="keyword">try</span> (Response response = client.newCall(request).execute()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (response == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> OkHttpException(<span class="string">"return response is null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ResponseBody body = response.body();</span><br><span class="line">        <span class="comment">// 如果使用 string()，当数据大于 1MB 时，容易造成内存溢出。推荐使用 byteStream()，记得关闭操作流</span></span><br><span class="line">        <span class="comment">// String str = body.string();</span></span><br><span class="line">        String str = body == <span class="keyword">null</span> ? <span class="keyword">null</span> : IOUtils.toString(body.byteStream(), charset);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SocketTimeoutException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> OkHttpException(<span class="string">"连接超时"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> OkHttpException(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>OkHttp</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven 使用</title>
    <url>/posts/e3a1de67.html</url>
    <content><![CDATA[<h1 id="Maven-打包-jar"><a href="#Maven-打包-jar" class="headerlink" title="Maven 打包 jar"></a>Maven 打包 jar</h1><p>spring-boot插件打包<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 打包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定 src/main/resources下所有文件及文件夹为资源文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>$&#123;project.build.directory&#125;/classes<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- &lt;include&gt;**/*.xml&lt;/include&gt; &lt;include&gt;**/*.properties&lt;/include&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用com.alibaba.dubbo.container.Main启动应用的话，要把spring配置放到/META-INF/spring下 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>$&#123;project.build.directory&#125;/classes/META-INF/spring<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/spring<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>spring-context.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">classesDirectory</span>&gt;</span>target/classes/<span class="tag">&lt;/<span class="name">classesDirectory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.alibaba.dubbo.container.Main<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useUniqueVersions</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useUniqueVersions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>lib/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Class-Path</span>&gt;</span>.<span class="tag">&lt;/<span class="name">Class-Path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打包jar时，把依赖的第三方jar包，放到lib/文件下 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">includeTypes</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">includeTypes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">useUniqueVersions</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useUniqueVersions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                            $&#123;project.build.directory&#125;/lib</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="配置阿里云私有库"><a href="#配置阿里云私有库" class="headerlink" title="配置阿里云私有库"></a>配置阿里云私有库</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;aliyun-nexus-public-snapshots&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;public-snapshots&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/snapshots/&lt;/url&gt;</span></span><br><span class="line"><span class="comment">&lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="发布-jar-到私有仓库"><a href="#发布-jar-到私有仓库" class="headerlink" title="发布 jar 到私有仓库"></a>发布 jar 到私有仓库</h1><h2 id="Maven-setting-xml-配置"><a href="#Maven-setting-xml-配置" class="headerlink" title="Maven setting.xml 配置"></a>Maven setting.xml 配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="项目-pom-xml-配置"><a href="#项目-pom-xml-配置" class="headerlink" title="项目 pom.xml 配置"></a>项目 pom.xml 配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 发布 jar 到中央仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus Release Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.ctim:8081/repository/maven2-weixin-release/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.ctim:8081/repository/maven2-weixin-snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p> 注意，pom.xml中的id要和setting.xml中配置的一致</p>
</blockquote>
<h2 id="发布源码"><a href="#发布源码" class="headerlink" title="发布源码"></a>发布源码</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果不发布源码，可以使用如下配置，只打包源码，不发布到私有仓库</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 只打包源码，不发布元源码到私有仓库 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>none<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="执行-deploy-发布-jar-到私有仓库"><a href="#执行-deploy-发布-jar-到私有仓库" class="headerlink" title="执行 deploy 发布 jar 到私有仓库"></a>执行 deploy 发布 jar 到私有仓库</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mvn clean deploy -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：release 版本只能上传一次，SNAPSHOT 版本可以无限次上传</p>
</blockquote>
<h2 id="使用私有仓库下载-jar"><a href="#使用私有仓库下载-jar" class="headerlink" title="使用私有仓库下载 jar"></a>使用私有仓库下载 jar</h2><blockquote>
<p>在 setting.xml 配置 mirror</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.ctim:8081/repository/maven2-weixin-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在 setting.xml 配置 profile 并激活</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>wechat<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus Release Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.ctim:8081/repository/maven2-weixin-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>激活 profile</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>wechat<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>OkHttp 池配置</title>
    <url>/posts/c17653b2.html</url>
    <content><![CDATA[<h1 id="Dispatcher-调度"><a href="#Dispatcher-调度" class="headerlink" title="Dispatcher 调度"></a>Dispatcher 调度</h1><blockquote>
<p>内部执行 http 请求的实际线程池</p>
</blockquote>
<p>每一个OkHttpClient 实例将请求 Call 使用 Dispatcher 进行线程分发，在 Dispatcher 中通过 ExecutorService 线程池来执行每一个请求的。</p>
<a id="more"></a>
<blockquote>
<p>初始化</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Dispatcher dispatcher = <span class="keyword">new</span> Dispatcher();</span><br><span class="line"><span class="comment">// Dispatcher dispatcher = new Dispatcher(Executors.newCachedThreadPool());</span></span><br><span class="line">dispatcher.setMaxRequests(<span class="number">64</span>);</span><br><span class="line">dispatcher.setMaxRequestsPerHost(<span class="number">4</span>);</span><br><span class="line">builder.dispatcher(dispatcher);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>主要参数说明</p>
</blockquote>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>maxRequests</td>
<td>当前 OkHttpClient 实例最大的并发请求数</td>
<td>默认：64。这个值一般要大于maxRequestPerHost。</td>
</tr>
<tr>
<td>maxRequestPerHost</td>
<td>单个主机最大请求并发数，这里的主机指被请求方主机，一般可以理解对调用方有限流作用</td>
<td>默认：4<br>这个值设置，有如下几个场景考虑：<br>- 如果被调用方的并发能力只能支持100，那这个值最好不要超过100，否则对调用方有压力<br>- 如果当前 OkHttpClient 实例只对一个调用方发起调用，那这个值与 maxRequests 保持一致<br>- 如果当前 OkHttpClient 实例在一个事务中对 n 个调用方发起调用，n * maxReuestPerHost 要接近 maxRequest</td>
</tr>
<tr>
<td>executorService</td>
<td>构造参数：内部线程池</td>
<td>可根据情况自定义线程池</td>
</tr>
</tbody>
</table>
<blockquote>
<p>executorService 默认初始化代码</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> ExecutorService <span class="title">executorService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (executorService == <span class="keyword">null</span>) &#123;</span><br><span class="line">    executorService = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">0</span>, Integer.MAX_VALUE, <span class="number">60</span>, TimeUnit.SECONDS, <span class="keyword">new</span> SynchronousQueue&lt;Runnable&gt;(), Util.threadFactory(<span class="string">"OkHttp Dispatcher"</span>, <span class="keyword">false</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> executorService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="ConnectionPool-连接池"><a href="#ConnectionPool-连接池" class="headerlink" title="ConnectionPool 连接池"></a>ConnectionPool 连接池</h1><p>1）从 ConnectionPool 获取一个 RealConnection 对象，如果缓冲池里面没有就创建一个 RealConnection 对象并且放入 ConnectionPool 中，实际是放入 ConnectionPool 的 ArrayDeque 队列中</p>
<p>2）获取 RealConnection 对象后调用其 connect 打开 Socket 链接</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>OkHttp</tag>
      </tags>
  </entry>
  <entry>
    <title>XML 使用</title>
    <url>/posts/9605cdb8.html</url>
    <content><![CDATA[<h1 id="XML-报文换行"><a href="#XML-报文换行" class="headerlink" title="XML 报文换行"></a>XML 报文换行</h1><blockquote>
<p>正常换行</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ns1:message</span> <span class="attr">xmlns:ns1</span>=<span class="string">"MessageServer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ns1:arg0</span>&gt;</span>191<span class="tag">&lt;/<span class="name">ns1:arg0</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ns1:arg1</span>&gt;</span>标题：My alert title<span class="symbol">&amp;#x000A;</span>状态：alerting<span class="symbol">&amp;#x000A;</span>信息：webfronts<span class="tag">&lt;/<span class="name">ns1:arg1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ns1:message</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>前提，不能用&lt;![CDATA[]]&gt;把内容包起来，也不能使用\r\n等</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这样是不能换行的，会原样显示&amp;#x000A;字符出来 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ns1:arg1</span>&gt;</span>&lt;![CDATA[标题：My alert title&amp;#x000A;状态：alerting&amp;#x000A;信息：webfronts]]&gt;<span class="tag">&lt;/<span class="name">ns1:arg1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title>c3p0连接池配置介绍</title>
    <url>/posts/84f9d92c.html</url>
    <content><![CDATA[<p>com.mchange.v2.c3p0.ComboPooledDataSource 参数设置</p>
<ul>
<li>acquireIncrement -&gt; 1<br>当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3</li>
<li>acquireRetryAttempts -&gt; 30<br>定义在从数据库获取新连接失败后重复尝试的次数。Default: 30</li>
<li>acquireRetryDelay -&gt; 1000<br>两次连接中间隔时间，单位毫秒。Default: 1000</li>
<li>autoCommitOnClose -&gt; false<br>连接关闭时默认将所有未提交的操作回滚。Default: false</li>
<li>automaticTestTable -&gt; null<br>c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么 属性 preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。Default: null<a id="more"></a></li>
<li>breakAfterAcquireFailure -&gt; false<br>获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection() 的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false</li>
<li>checkoutTimeout -&gt; 0<br>当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。efault: 0</li>
<li>connectionCustomizerClassName -&gt; null<br>定制管理Connection的生命周期</li>
<li>connectionTesterClassName -&gt; com.mchange.v2.c3p0.impl.DefaultConnectionTester<br>通过实现ConnectionTester或QueryConnectionTester的类来测试连接。类名需制定全路径。Default: com.mchange.v2.c3p0.impl.DefaultConnectionTester</li>
<li>dataSourceName -&gt; 1hgf49x9esziub21tsqy1p|17b6178</li>
<li>unreturnedConnectionTimeout -&gt; 0<br>配置debug和回收Connection：单位s</li>
<li>debugUnreturnedConnectionStackTraces -&gt; false<br>配置debug和回收Connection</li>
<li>description -&gt; null</li>
<li>driverClass -&gt; oracle.jdbc.driver.OracleDriver</li>
<li>factoryClassLocation -&gt; null<br>指定c3p0 libraries的路径，如果（通常都是这样）在本地即可获得那么无需设置，默认null即可。Default: null</li>
<li>forceIgnoreUnresolvedTransactions -&gt; false<br>Strongly disrecommended. Setting this to true may lead to subtle and bizarre bugs. 文档原文）作者强烈建议不使用的一个属性</li>
<li>identityToken -&gt; 1hgf49x9esziub21tsqy1p|17b6178</li>
<li>idleConnectionTestPeriod -&gt; 60<br>每60秒检查所有连接池中的空闲连接。Default: 0</li>
<li>initialPoolSize -&gt; 5<br>初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3</li>
<li>jdbcUrl -&gt; jdbc:oracle:thin:@localhost:1521:orcl</li>
<li>maxAdministrativeTaskTime -&gt; 0</li>
<li>maxConnectionAge -&gt; 0<br>管理连接池的大小和连接的生存时间：单位s</li>
<li>maxIdleTime -&gt; 60<br>最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0</li>
<li>maxIdleTimeExcessConnections -&gt; 0<br>default : 0，单位 s 。这个配置主要是为了减轻连接池的负载，比如连接池中连接数因为某次数据访问高峰导致创建了很多数据连接，但是后面的时间段需要的数据库连接数很少，则此时连接池完全没有必要维护那么多的连接，所以有必要将断开丢弃掉一些连接来减轻负载，必须小于maxIdleTime。配置不为0，则会将连接池中的连接数量保持到minPoolSize</li>
<li>maxPoolSize -&gt; 20<br>连接池中保留的最大连接数。Default: 15</li>
<li>maxStatements -&gt; 0<br>JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个 connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。如果maxStatements与 maxStatementsPerConnection均为0，则缓存被关闭。Default: 0</li>
<li>maxStatementsPerConnection -&gt; 0<br>maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0</li>
<li>minPoolSize -&gt; 5<br>初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3</li>
<li>numHelperThreads -&gt; 3<br>c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能 通过多线程实现多个操作同时被执行。Default: 3</li>
<li>numThreadsAwaitingCheckoutDefaultUser -&gt; 0</li>
<li>preferredTestQuery -&gt; null<br>定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意：测试的表必须在初始数据源的时候就存在。Default: null</li>
<li>properties -&gt; {user=<strong>**</strong> password=<strong>**</strong>}</li>
<li>propertyCycle -&gt; 0<br>用户修改系统配置参数执行前最多等待300秒。Default: 0</li>
<li>testConnectionOnCheckin -&gt; false<br>如果设为true那么在取得连接的同时将校验连接的有效性。Default: false</li>
<li>testConnectionOnCheckout -&gt; false<br>因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用 idleConnectionTestPeriod或automaticTestTable 等方法来提升连接测试的性能。Default: false</li>
<li>usesTraditionalReflectiveProxies -&gt; false</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>c3p0</tag>
        <tag>DataSource</tag>
      </tags>
  </entry>
  <entry>
    <title>logback 多环境配置</title>
    <url>/posts/7bd4851.html</url>
    <content><![CDATA[<p>在 logback.xml中使用<code>:-</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- $&#123;变量名:-默认值&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.path"</span> <span class="attr">value</span>=<span class="string">"$&#123;catalina.home:-./..&#125;/logs"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>application.yml</code> 配置 <code>profiles</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br></pre></td></tr></table></figure>
<p>在使用 <code>logback-spring.xml</code> 中使用 <code>springProfile</code> 配置，使用 <code>logback-spring.xml</code> 可以获得更多spring boot个性化配置</p>
<a id="more"></a>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- For assistance related to logback-translator or configuration --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- files in general, please contact the logback user mailing list --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- at http://www.qos.ch/mailman/listinfo/logback-user --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- For professional support please see --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- http://www.qos.ch/shop/products/professionalSupport --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.charset"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.path"</span> <span class="attr">value</span>=<span class="string">"$&#123;catalina.home&#125;/logs"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.pattern"</span> <span class="attr">value</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss&#125; %highlight(%-5p)] %yellow(%t) %cyan(%c.%M\\(%L\\)) | %m%n"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.maxHistory"</span> <span class="attr">value</span>=<span class="string">"15"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&amp;lt;!&amp;ndash; https://logback.qos.ch/manual/layouts.html#coloring &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">    &amp;lt;!&amp;ndash; 彩色日志依赖的渲染类 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">    &lt;conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" /&gt;</span></span><br><span class="line"><span class="comment">    &lt;conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" /&gt;</span></span><br><span class="line"><span class="comment">    &lt;conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" /&gt;</span></span><br><span class="line"><span class="comment">    &amp;lt;!&amp;ndash; 彩色日志格式 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="logger.pattern" value="$&#123;CONSOLE_LOG_PATTERN:-%clr([%d&#123;yyyy-MM-dd HH:mm:ss&#125; %clr($&#123;LOG_LEVEL_PATTERN:-%5p&#125;)])&#123;faint&#125; %clr(%c.%M\\(%L\\))&#123;cyan&#125; | %m%n&#125;" /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"dev"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"stdout"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"stdout"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"prod"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"stdout"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logger.path&#125;/info.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                    $&#123;logger.path&#125;/info.log.%d&#123;yyyy.MM.dd&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>$&#123;logger.maxHistory&#125;<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"stdout"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>logback</tag>
      </tags>
  </entry>
  <entry>
    <title>Paging 分页器实例</title>
    <url>/posts/30063ce8.html</url>
    <content><![CDATA[<h1 id="Java中实现一个分页器"><a href="#Java中实现一个分页器" class="headerlink" title="Java中实现一个分页器"></a>Java中实现一个分页器</h1><p>简单封装一个分页实例</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Create by YL on 2017/05/29.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Paging</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2429864663690465105L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> page = <span class="number">1</span>; <span class="comment">// 当前页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> size = <span class="number">10</span>; <span class="comment">// 每页显示记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> total; <span class="comment">// 总记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> pages; <span class="comment">// 总页数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> start = <span class="number">1</span>; <span class="comment">// 每页起始数（从1开始）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> end; <span class="comment">// 每页结束数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> prev = <span class="number">1</span>; <span class="comment">// 上一页（从1开始）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> next; <span class="comment">// 下一页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> hasPrev; <span class="comment">// 判断是否有上一页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> hasNext; <span class="comment">// 判断是否有下一页</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; items = <span class="keyword">new</span> ArrayList&lt;E&gt;(); <span class="comment">// 查询结果集</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Paging</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Paging</span><span class="params">(<span class="keyword">long</span> page, <span class="keyword">long</span> size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.page = page;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSize</span><span class="params">(<span class="keyword">long</span> size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (page &gt; <span class="keyword">this</span>.getPages())</span><br><span class="line">            page = <span class="keyword">this</span>.getPages();</span><br><span class="line">        <span class="keyword">if</span> (page &lt;= <span class="number">0</span>)</span><br><span class="line">            page = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPage</span><span class="params">(<span class="keyword">long</span> page)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.page = page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">long</span> total)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getPages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> total = <span class="keyword">this</span>.getTotal();</span><br><span class="line">        <span class="keyword">long</span> size = <span class="keyword">this</span>.getSize();</span><br><span class="line">        <span class="keyword">if</span> ((total % size) == <span class="number">0</span>) &#123;</span><br><span class="line">            pages = total / size;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pages = total / size + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pages == <span class="number">0</span> ? <span class="number">1</span> : pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPages</span><span class="params">(<span class="keyword">long</span> pages)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pages = pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始行，可用于Oracle、MySQL等分页</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     * Oracle: rownum &lt;= endRow and rownum &gt; startRow</span></span><br><span class="line"><span class="comment">     * MySQL: limit startRow, pageSize</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        start = <span class="keyword">this</span>.getPage() &gt; <span class="number">0</span> ? (<span class="keyword">this</span>.getPage() - <span class="number">1</span>) * <span class="keyword">this</span>.getSize() : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStart</span><span class="params">(<span class="keyword">long</span> start)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.start = start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 结束行，可以用于oracle分页使用</span></span><br><span class="line"><span class="comment">     * Oracle: rownum &lt;= endRow</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        end = <span class="keyword">this</span>.getStart() + <span class="keyword">this</span>.getSize();</span><br><span class="line">        <span class="keyword">return</span> end;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnd</span><span class="params">(<span class="keyword">long</span> end)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.end = end;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getPrev</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isHasPrev()) &#123;</span><br><span class="line">            <span class="keyword">return</span> getPage() - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getPage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrev</span><span class="params">(<span class="keyword">long</span> prev)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.prev = prev;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isHasNext()) &#123;</span><br><span class="line">            <span class="keyword">return</span> getPage() + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getPage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(<span class="keyword">long</span> next)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isHasPrev</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getPage() - <span class="number">1</span> &gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHasPrev</span><span class="params">(<span class="keyword">boolean</span> hasPrev)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hasPrev = hasPrev;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isHasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getPage() + <span class="number">1</span> &lt;= getPages();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHasNext</span><span class="params">(<span class="keyword">boolean</span> hasNext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hasNext = hasNext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;E&gt; <span class="title">getItems</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItems</span><span class="params">(List&lt;E&gt; items)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.items = items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="number">100</span>);</span><br><span class="line">        sb.append(<span class="keyword">this</span>.getClass().getSimpleName());</span><br><span class="line">        sb.append(<span class="string">" ["</span>);</span><br><span class="line">        sb.append(<span class="string">"page="</span>).append(<span class="keyword">this</span>.getPage());</span><br><span class="line">        sb.append(<span class="string">", size="</span>).append(<span class="keyword">this</span>.getSize());</span><br><span class="line">        sb.append(<span class="string">", total="</span>).append(<span class="keyword">this</span>.getTotal());</span><br><span class="line">        sb.append(<span class="string">", pages="</span>).append(<span class="keyword">this</span>.getPages());</span><br><span class="line">        sb.append(<span class="string">", start="</span>).append(<span class="keyword">this</span>.getStart());</span><br><span class="line">        sb.append(<span class="string">", end="</span>).append(<span class="keyword">this</span>.getEnd());</span><br><span class="line">        sb.append(<span class="string">", prev="</span>).append(<span class="keyword">this</span>.getPrev());</span><br><span class="line">        sb.append(<span class="string">", next="</span>).append(<span class="keyword">this</span>.getNext());</span><br><span class="line">        sb.append(<span class="string">", hasPrev="</span>).append(<span class="keyword">this</span>.isHasPrev());</span><br><span class="line">        sb.append(<span class="string">", hasNext="</span>).append(<span class="keyword">this</span>.isHasNext());</span><br><span class="line">        sb.append(<span class="string">", items="</span>).append(items);</span><br><span class="line">        sb.append(<span class="string">"]"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>logback 踩坑</title>
    <url>/posts/15985cf3.html</url>
    <content><![CDATA[<ol>
<li>totalSizeCap 配置大于 2GB 时，不生效的问题</li>
</ol>
<blockquote>
<p>logbakc.xml 配置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"info_rolling"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logger.path&#125;/info.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            $&#123;logger.path&#125;/info.%d&#123;yy-MM-dd&#125;.%i.log</span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>$&#123;logger.maxHistory&#125;<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>512MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">totalSizeCap</span>&gt;</span>5GB<span class="tag">&lt;/<span class="name">totalSizeCap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>logback-core-1.1.11.jar 及之前版本的 TimeBasedArchiveRemover</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">capTotalSize</span><span class="params">(Date now)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> totalSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> totalRemoved = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> offset = <span class="number">0</span>; offset &lt; maxHistory; offset++) &#123;</span><br><span class="line">        Date date = rc.getEndOfNextNthPeriod(now, -offset);</span><br><span class="line">        File[] matchingFileArray = getFilesInPeriod(date);</span><br><span class="line">        descendingSortByLastModified(matchingFileArray);</span><br><span class="line">        <span class="keyword">for</span> (File f : matchingFileArray) &#123;</span><br><span class="line">            <span class="keyword">long</span> size = f.length();</span><br><span class="line">            <span class="keyword">if</span> (totalSize + size &gt; totalSizeCap) &#123;</span><br><span class="line">                addInfo(<span class="string">"Deleting ["</span> + f + <span class="string">"]"</span> + <span class="string">" of size "</span> + <span class="keyword">new</span> FileSize(size));</span><br><span class="line">                totalRemoved += size;</span><br><span class="line">                f.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            totalSize += size;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    addInfo(<span class="string">"Removed  "</span> + <span class="keyword">new</span> FileSize(totalRemoved) + <span class="string">" of files"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的<code>totalSize</code>使用的是<code>int</code>类型，<code>Interger.MAX_VALUE</code>最大只能表示2GB的数据，修改成使用<code>long</code>类型可以解决这个问题。</p>
<blockquote>
<p>logback-core 1.2.0 之后的版本已经修复这个问题</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">capTotalSize</span><span class="params">(Date now)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> totalSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> totalRemoved = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> offset = <span class="number">0</span>; offset &lt; maxHistory; offset++) &#123;</span><br><span class="line">        Date date = rc.getEndOfNextNthPeriod(now, -offset);</span><br><span class="line">        File[] matchingFileArray = getFilesInPeriod(date);</span><br><span class="line">        descendingSortByLastModified(matchingFileArray);</span><br><span class="line">        <span class="keyword">for</span> (File f : matchingFileArray) &#123;</span><br><span class="line">            <span class="keyword">long</span> size = f.length();</span><br><span class="line">            <span class="keyword">if</span> (totalSize + size &gt; totalSizeCap) &#123;</span><br><span class="line">                addInfo(<span class="string">"Deleting ["</span> + f + <span class="string">"]"</span> + <span class="string">" of size "</span> + <span class="keyword">new</span> FileSize(size));</span><br><span class="line">                totalRemoved += size;</span><br><span class="line">                f.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            totalSize += size;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    addInfo(<span class="string">"Removed  "</span> + <span class="keyword">new</span> FileSize(totalRemoved) + <span class="string">" of files"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>logback</tag>
      </tags>
  </entry>
  <entry>
    <title>注解实现动态锁业务</title>
    <url>/posts/5e4e02b5.html</url>
    <content><![CDATA[<h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>基于注解、<code>Spring AOP</code> 和 <code>Spring Expression</code>表达式实现动态锁业务。</p>
<a id="more"></a>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><blockquote>
<p>FormLock.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Inherited;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防止表单重复提交锁实现注解</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> FormLock &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Spring Expression Language (SpEL) expression for computing the key dynamically.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 表单锁 key 的值，spring el 表达式（Spring Expression Language (SpEL) expression），动态获取表单锁的 key 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">key</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>FormLockAspect.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RLock;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RedissonClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.LocalVariableTableParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.ExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.standard.SpelExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.support.StandardEvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormLockAspect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOCK_KEY = <span class="string">"redisson::lock::%s::%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LocalVariableTableParameterNameDiscoverer discoverer = <span class="keyword">new</span> LocalVariableTableParameterNameDiscoverer();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"@annotation(com.grgbanking.prms.common.lock.FormLock)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"pointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint point)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Method method = resolveMethod(point);</span><br><span class="line">        FormLock formLock = AnnotationUtils.findAnnotation(method, FormLock<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (formLock == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        String el = formLock.key();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(el)) &#123;</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!el.startsWith(<span class="string">"#"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        Object[] args = point.getArgs();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Expose indexed variables as well as parameter names (if discoverable)</span></span><br><span class="line">        String[] paramNames = <span class="keyword">this</span>.discoverer.getParameterNames(method);</span><br><span class="line">        <span class="keyword">int</span> paramCount = (paramNames != <span class="keyword">null</span> ? paramNames.length : method.getParameterCount());</span><br><span class="line">        <span class="keyword">int</span> argsCount = args.length;</span><br><span class="line"></span><br><span class="line">        EvaluationContext eval = <span class="keyword">new</span> StandardEvaluationContext();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paramCount; i++) &#123;</span><br><span class="line">            Object value = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (argsCount &gt; paramCount &amp;&amp; i == paramCount - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// Expose remaining arguments as vararg array for last parameter</span></span><br><span class="line">                value = Arrays.copyOfRange(args, i, argsCount);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argsCount &gt; i) &#123;</span><br><span class="line">                <span class="comment">// Actual argument found - otherwise left as null</span></span><br><span class="line">                value = args[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * see &#123;<span class="doctag">@link</span> MethodBasedEvaluationContext#lazyLoadArguments()&#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            eval.setVariable(<span class="string">"a"</span> + i, value);</span><br><span class="line">            eval.setVariable(<span class="string">"p"</span> + i, value);</span><br><span class="line">            <span class="keyword">if</span> (paramNames != <span class="keyword">null</span>) &#123;</span><br><span class="line">                eval.setVariable(paramNames[i], value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Expression expression = parser.parseExpression(el);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 这里可能会抛出异常，不用处理，这样有利于程序发现&#123;<span class="doctag">@link</span> FormLock#key()&#125;配置错误问题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String lockKey;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lockKey = expression.getValue(eval, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (EvaluationException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> EvaluationException(String.format(<span class="string">"%s 表达式错误"</span>, el));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(lockKey)) &#123;</span><br><span class="line">            log.warn(<span class="string">"&#123;&#125; 表达式的值为空，直接执行逻辑"</span>, el);</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        String name = point.getTarget().getClass().getSimpleName() + <span class="string">"#"</span> + method.getName();</span><br><span class="line">        RLock lock = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock = redissonClient.getLock(String.format(LOCK_KEY, name, lockKey));</span><br><span class="line">            <span class="comment">// 如果不主动释放锁，300 秒后自动释放</span></span><br><span class="line">            <span class="keyword">boolean</span> success = lock.tryLock(<span class="number">100L</span>, <span class="number">300000L</span>, TimeUnit.MILLISECONDS);</span><br><span class="line">            <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">                <span class="comment">// todo 改成自己的返回格式：json、页面等</span></span><br><span class="line">                <span class="keyword">return</span> Rs.error(<span class="string">"表单已提交，不可重复提交"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// log.info("获得表单执行锁 ---&gt; 结束，获取数量：&#123;&#125;", notifications.size());</span></span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (lock != <span class="keyword">null</span> &amp;&amp; lock.isLocked() &amp;&amp; lock.isHeldByCurrentThread()) &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Method <span class="title">resolveMethod</span><span class="params">(ProceedingJoinPoint point)</span> </span>&#123;</span><br><span class="line">        MethodSignature signature = (MethodSignature) point.getSignature();</span><br><span class="line">        Class&lt;?&gt; targetClass = point.getTarget().getClass();</span><br><span class="line"></span><br><span class="line">        Method method = getDeclaredMethod(targetClass, signature.getName(),</span><br><span class="line">            signature.getMethod().getParameterTypes());</span><br><span class="line">        <span class="keyword">if</span> (method == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"无法解析目标方法: "</span> + signature.getMethod().getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> method;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Method <span class="title">getDeclaredMethod</span><span class="params">(Class&lt;?&gt; clazz, String name, Class&lt;?&gt;... parameterTypes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> clazz.getDeclaredMethod(name, parameterTypes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">            Class&lt;?&gt; superClass = clazz.getSuperclass();</span><br><span class="line">            <span class="keyword">if</span> (superClass != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> getDeclaredMethod(superClass, name, parameterTypes);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 例子：会自动读取 dto.getFormId() 的值来作为锁的 key</span></span><br><span class="line"><span class="meta">@FormLock</span>(key = <span class="string">"#dto.formId"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/list"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(QueryDto dto)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 具体业务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryDto</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String formId;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Lock</tag>
        <tag>spring</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式Id生成器</title>
    <url>/posts/f9490f40.html</url>
    <content><![CDATA[<h1 id="Id生成的几种方式"><a href="#Id生成的几种方式" class="headerlink" title="Id生成的几种方式"></a>Id生成的几种方式</h1><ul>
<li>数据库自增<ul>
<li>优势<ul>
<li>简单，无需额外操作</li>
<li>保持定长自增</li>
<li>保持单表唯一性</li>
</ul>
</li>
<li>劣势<ul>
<li>主键生成依赖数据库，高并发下会造成数据库服务器压力较大</li>
<li>水平扩展困难，在分布式数据库环境下，无法保证唯一性</li>
</ul>
</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>UUID（GUID）</p>
<ul>
<li>优势<ul>
<li>本地生成，无需远程调用（无需网络通信）</li>
<li>全局唯一</li>
<li>水平扩展好</li>
</ul>
</li>
<li>劣势<ul>
<li>ID 128 bits，占用空间大</li>
<li>字符串类型，索引效率低</li>
<li>无法保证趋势递增</li>
</ul>
</li>
</ul>
</li>
<li><p>时间戳</p>
<p>略</p>
</li>
<li><p>Twitter Snowflake 雪花算法</p>
<ul>
<li>优势<ul>
<li>本地生产，无需远程调用（无需网络通信）</li>
<li>单机每秒可生成400w个ID</li>
<li>ID 64 bits，占用空间小</li>
<li>long类型，对索引效率有提升</li>
<li>趋势递增</li>
</ul>
</li>
<li>劣势<ul>
<li>时间回拨问题</li>
<li>集群部署时，集群内机器时间同步问题</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="基于雪花算法的分布式Id生成器实现"><a href="#基于雪花算法的分布式Id生成器实现" class="headerlink" title="基于雪花算法的分布式Id生成器实现"></a>基于雪花算法的分布式Id生成器实现</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该生成器采用 Twitter Snowflake 算法实现，生成 64 Bits 的 Long 型编号</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     1 bit        41 bits     10 bits     12 bits</span></span><br><span class="line"><span class="comment"> *     sign bit     时间戳       工作ID       序列号ID</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">SnowflakeKeyGenerator</span> <span class="keyword">implements</span> <span class="title">KeyGenerator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基准时间：时间偏移量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> EPOCH;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 从2017年01月01日零点开始</span></span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.set(<span class="number">2017</span>, Calendar.JANUARY, <span class="number">1</span>);</span><br><span class="line">        calendar.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);</span><br><span class="line">        calendar.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line">        calendar.set(Calendar.SECOND, <span class="number">0</span>);</span><br><span class="line">        calendar.set(Calendar.MILLISECOND, <span class="number">0</span>);</span><br><span class="line">        EPOCH = calendar.getTimeInMillis();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列号ID位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> SEQUENCE_BITS = <span class="number">12L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 工作ID位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> WORKER_ID_BITS = <span class="number">10L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列号ID最大值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> SEQUENCE_MASK = (<span class="number">1</span> &lt;&lt; SEQUENCE_BITS) - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 工作ID最大值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> WORKER_ID_MAX_VALUE = <span class="number">1L</span> &lt;&lt; WORKER_ID_BITS;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 工作ID左移12位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> WORKER_ID_LEFT_SHIFT_BITS = SEQUENCE_BITS;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间戳左移22数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> TIMESTAMP_LEFT_SHIFT_BITS = WORKER_ID_LEFT_SHIFT_BITS + WORKER_ID_BITS;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列号ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequence;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列号ID偏移量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span> sequenceOffset;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最后生成编号时间戳，单位：毫秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> lastTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 工作ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerId;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SnowflakeKeyGenerator</span><span class="params">(<span class="keyword">long</span> workerId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (workerId &gt;= WORKER_ID_MAX_VALUE || workerId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(String.format(<span class="string">"worker Id can't be greater than %d or less than 0"</span>,</span><br><span class="line">                    WORKER_ID_MAX_VALUE));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.workerId = workerId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成 ID</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回@&#123;<span class="doctag">@link</span> Long&#125;类型的Id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">long</span> <span class="title">nextId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 保证当前时间大于最后时间。时间回退会导致产生重复id</span></span><br><span class="line">        <span class="keyword">long</span> currentMillis = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">if</span> (currentMillis &lt; <span class="keyword">this</span>.lastTime) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(String.format(<span class="string">"clock moved backwards.Refusing to generate id for %d "</span> +</span><br><span class="line">                            <span class="string">"milliseconds"</span>,</span><br><span class="line">                    (<span class="keyword">this</span>.lastTime - currentMillis)));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取序列号</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.lastTime == currentMillis) &#123;</span><br><span class="line">            <span class="comment">// 当获得序号超过最大值时，归0，并去获得新的时间</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0L</span> == (<span class="keyword">this</span>.sequence = ++<span class="keyword">this</span>.sequence &amp; SEQUENCE_MASK)) &#123;</span><br><span class="line">                currentMillis = tailNextMillis(currentMillis);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 1、在跨毫秒时，序列号总是归0，导致序列号为0的ID较多，导致生成的ID取模后不均匀</span></span><br><span class="line">            <span class="comment">// this.sequence = 0;</span></span><br><span class="line">            <span class="comment">// 2、序列号取[0-9]之间的随机数，可以初步解决【1】中的问题，也会导致ID取模不均匀</span></span><br><span class="line">            <span class="comment">// this.sequence = new SecureRandom().nextInt(10);</span></span><br><span class="line">            <span class="comment">// 3、交替使用[0-1]</span></span><br><span class="line">            <span class="keyword">this</span>.sequence = vibrateSequenceOffset();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置最后时间戳</span></span><br><span class="line">        <span class="keyword">this</span>.lastTime = currentMillis;</span><br><span class="line">        <span class="comment">// 生成编号</span></span><br><span class="line">        <span class="keyword">return</span> ((currentMillis - EPOCH) &lt;&lt; TIMESTAMP_LEFT_SHIFT_BITS)</span><br><span class="line">                | (<span class="keyword">this</span>.workerId &lt;&lt; WORKER_ID_LEFT_SHIFT_BITS)</span><br><span class="line">                | <span class="keyword">this</span>.sequence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不停获得时间，直到大于最后时间</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 从 Snowflake 的官方文档 (https://github.com/twitter/snowflake/#system-clock-dependency) 中也可以看到, 它明确要求 "You should</span></span><br><span class="line"><span class="comment">     * use NTP to keep your system clock accurate". 而且最好把 NTP 配置成不会向后调整的模式. 也就是说, NTP 纠正时间时, 不会向后回拨机器时钟.</span></span><br><span class="line"><span class="comment">     * ntpd 和 ntpdate 的区别，使用 ntpd 影响不大</span></span><br><span class="line"><span class="comment">     * todo 如果时间回拨，会导致这个逻辑等待，等待时间可能会很长</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lastTime 最后时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">tailNextMillis</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> lastTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> time = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">while</span> (time &lt;= lastTime) &#123;</span><br><span class="line">            time = System.currentTimeMillis();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只会交替返回0和1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">byte</span> <span class="title">vibrateSequenceOffset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sequenceOffset = (<span class="keyword">byte</span>) (~<span class="keyword">this</span>.sequenceOffset &amp; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.sequenceOffset;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Twitter</tag>
        <tag>Snowflake</tag>
      </tags>
  </entry>
  <entry>
    <title>Brendan Gregg 的 FlameGraph 火焰图</title>
    <url>/posts/f2d475dc.html</url>
    <content><![CDATA[<h1 id="下载-lightweight-java-profiler-采样栈信息"><a href="#下载-lightweight-java-profiler-采样栈信息" class="headerlink" title="下载 lightweight-java-profiler 采样栈信息"></a>下载 lightweight-java-profiler 采样栈信息</h1><p><code>https://code.google.com/archive/p/lightweight-java-profiler/source/default/source</code> 下载 <code>lightweight-java-profiler</code> 工具</p>
<ol>
<li>修改<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第4行 BITS?=32 改成</span></span><br><span class="line">BITS?=64</span><br><span class="line"><span class="comment"># 第49行 INCLUDES=-I$(JAVA_HOME)/$(HEADERS) -I$(JAVA_HOME)/$(HEADERS)/$(UNAME) 改成</span></span><br><span class="line">INCLUDES=-I$(JAVA_HOME)/$(HEADERS) -I$(JAVA_HOME)/$(HEADERS)/$(UNAME) -I/usr/include/x86_64-linux-gnu</span><br></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol start="2">
<li>编译<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make all</span><br><span class="line"><span class="comment"># yum -y update gcc</span></span><br><span class="line"><span class="comment"># yum -y install gcc+ gcc-c++</span></span><br><span class="line"><span class="comment"># 报错的话，要修改display.cc 第 22 行，fprintf(file_, "%" PRIdPTR" ", traces[i].count);</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="下载-FlameGraph-火焰图生成工具"><a href="#下载-FlameGraph-火焰图生成工具" class="headerlink" title="下载 FlameGraph 火焰图生成工具"></a>下载 FlameGraph 火焰图生成工具</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> http://github.com/brendangregg/FlameGraph</span><br></pre></td></tr></table></figure>
<h1 id="使用-Profiler-工具生成-trace-txt-文件"><a href="#使用-Profiler-工具生成-trace-txt-文件" class="headerlink" title="使用 Profiler 工具生成 trace.txt 文件"></a>使用 Profiler 工具生成 trace.txt 文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tomcat 中</span></span><br><span class="line">JAVA_OPTS=<span class="string">"-server -agentpath:/home/yl/lightweight-java-profiler/build-64/liblagent.so"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># java jar</span></span><br><span class="line">java -agentpath:/home/yl/lightweight-java-profiler/build-64/liblagent.so -jar xxx.jar</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：trace 不是实时写入，而是在应用 shutdown 的时候才写入的，别 kill 应用，否则 trace 里面什么都没有</p>
</blockquote>
<p>另外有几个参数可在编译时修改，都在global.h文件中。首先是采样的频率，缺省是100次 每秒；另外是最大采样的线程栈，缺省3000，超过3000就忽略（对于复杂的应用明显不够） ；最后是栈的深度，缺省是128（对于调用层次深的应用调大）。</p>
<h1 id="将-trace-txt-文件转换为-trace-svg-格式的火焰图"><a href="#将-trace-txt-文件转换为-trace-svg-格式的火焰图" class="headerlink" title="将 trace.txt 文件转换为 trace.svg 格式的火焰图"></a>将 trace.txt 文件转换为 trace.svg 格式的火焰图</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> FlameGraph</span><br><span class="line">./stackcollapse-ljp.awk &lt; ../traces.txt | ./flamegraph.pl --colors=java --title=<span class="string">"traces title"</span> &gt; ../traces.svg</span><br><span class="line"><span class="comment"># yum install perl</span></span><br><span class="line"><span class="comment"># 一些参数说明</span></span><br><span class="line">--title       <span class="comment"># change title text</span></span><br><span class="line">--width       <span class="comment"># width of image (default 1200)</span></span><br><span class="line">--height      <span class="comment"># height of each frame (default 16)</span></span><br><span class="line">--minwidth    <span class="comment"># omit smaller functions (default 0.1 pixels)</span></span><br><span class="line">--fonttype    <span class="comment"># font type (default "Verdana")</span></span><br><span class="line">--fontsize    <span class="comment"># font size (default 12)</span></span><br><span class="line">--countname   <span class="comment"># count type label (default "samples")</span></span><br><span class="line">--nametype    <span class="comment"># name type label (default "Function:")</span></span><br><span class="line">--colors      <span class="comment"># set color palette. choices are: hot (default), mem, io,</span></span><br><span class="line">              <span class="comment"># wakeup, chain, java, js, perl, red, green, blue, aqua,</span></span><br><span class="line">              <span class="comment"># yellow, purple, orange</span></span><br><span class="line">--<span class="built_in">hash</span>        <span class="comment"># colors are keyed by function name hash</span></span><br><span class="line">--cp          <span class="comment"># use consistent palette (palette.map)</span></span><br><span class="line">--reverse     <span class="comment"># generate stack-reversed flame graph</span></span><br><span class="line">--inverted    <span class="comment"># icicle graph</span></span><br><span class="line">--negate      <span class="comment"># switch differential hues (blue&lt;-&gt;red)</span></span><br><span class="line">--<span class="built_in">help</span>        <span class="comment"># this message</span></span><br><span class="line"></span><br><span class="line">eg,</span><br><span class="line">./flamegraph.pl --title=<span class="string">"Flame Graph: malloc()"</span> trace.txt &gt; graph.svg</span><br></pre></td></tr></table></figure>
<p>用浏览器打开生成的 traces.svg 火焰图文件</p>
<p>默认：samples<br>–countname=pages<br>1 pages = 4 kbyte<br>–countname=bytes</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>lightweight-java-profiler</tag>
        <tag>FlameGraph</tag>
      </tags>
  </entry>
  <entry>
    <title>父子关系树或列表排序</title>
    <url>/posts/1f7d4723.html</url>
    <content><![CDATA[<h1 id="父子关系列表排序"><a href="#父子关系列表排序" class="headerlink" title="父子关系列表排序"></a>父子关系列表排序</h1><blockquote>
<p>父节点在前，子节点在后</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 按父子节点排序，父节点在子节点前面</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> departs 列表</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 排序列表</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Depart&gt; <span class="title">sort</span><span class="params">(List&lt;Depart&gt; departs)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 先找出所有的 root 元素</span></span><br><span class="line">  Queue&lt;Depart&gt; queues = departs.stream()</span><br><span class="line">    .filter(d -&gt; d.getParentId() == <span class="keyword">null</span> || -<span class="number">1L</span> == d.getParentId())</span><br><span class="line">    .collect(Collectors.toCollection(LinkedList::<span class="keyword">new</span>));</span><br><span class="line">  <span class="keyword">return</span> findChildren(departs, queues);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Depart&gt; <span class="title">findChildren</span><span class="params">(List&lt;Depart&gt; departs, Queue&lt;Depart&gt; queues)</span> </span>&#123;</span><br><span class="line">  List&lt;Depart&gt; childrenList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  <span class="keyword">while</span> (queues.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// 弹出队列</span></span><br><span class="line">    Depart poll = queues.poll();</span><br><span class="line">    childrenList.add(poll);</span><br><span class="line">    <span class="keyword">for</span> (Depart depart : departs) &#123;</span><br><span class="line">      <span class="keyword">if</span> (Objects.equals(depart.getParentId(), poll.getId())) &#123;</span><br><span class="line">        <span class="comment">// 加入队列</span></span><br><span class="line">        queues.offer(depart);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> childrenList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>倒序迭代</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = departs.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">  Depart depart = departs.get(i);</span><br><span class="line">  log.info(<span class="string">"部门 ---&gt; depart: &#123;&#125;"</span>, depart);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="树结构数据"><a href="#树结构数据" class="headerlink" title="树结构数据"></a>树结构数据</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.ObjectUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 树结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">3083223582409151873L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String label;</span><br><span class="line">    <span class="keyword">private</span> String parentId;</span><br><span class="line">    <span class="keyword">private</span> List&lt;TreeNode&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据列表，构建树结构</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list   列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rootId 根节点 Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 树结构数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;TreeNode&gt; <span class="title">convert</span><span class="params">(List&lt;TreeNode&gt; list, String rootId)</span> </span>&#123;</span><br><span class="line">        List&lt;TreeNode&gt; tree = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Iterator&lt;TreeNode&gt; iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            TreeNode node = iterator.next();</span><br><span class="line">            String parentId = node.getParentId();</span><br><span class="line">            <span class="comment">// 根节点</span></span><br><span class="line">            <span class="keyword">if</span> (ObjectUtils.isEmpty(parentId) || rootId.equals(parentId)) &#123;</span><br><span class="line">                tree.add(node);</span><br><span class="line">                iterator.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (TreeNode node : tree) &#123;</span><br><span class="line">            List&lt;TreeNode&gt; children = TreeNode.getChildren(node, list);</span><br><span class="line">            node.getChildren().addAll(children);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取子节点数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parentNode 父节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list       所有节点集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回子节点列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;TreeNode&gt; <span class="title">getChildren</span><span class="params">(TreeNode parentNode, List&lt;TreeNode&gt; list)</span> </span>&#123;</span><br><span class="line">        List&lt;TreeNode&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Iterator&lt;TreeNode&gt; iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            TreeNode node = iterator.next();</span><br><span class="line">            <span class="comment">// 如果当前节点 ID 与父节点 ID 一致，表示当前数据是该节点的子节点</span></span><br><span class="line">            <span class="keyword">if</span> (parentNode.getId().equals(node.getParentId())) &#123;</span><br><span class="line">                children.add(node);</span><br><span class="line">                iterator.remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 递归调用</span></span><br><span class="line">        <span class="keyword">for</span> (TreeNode node : children) &#123;</span><br><span class="line">            <span class="comment">// 调用自身方法，依次添加子节点数据</span></span><br><span class="line">            node.getChildren().addAll(getChildren(node, list));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>sort</tag>
      </tags>
  </entry>
  <entry>
    <title>身份证号验证</title>
    <url>/posts/1af78879.html</url>
    <content><![CDATA[<p>java 身份证校验，代码中年份判断不够完善，其他编程方式不做考究</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdUtils</span> </span>&#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] weight = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span> &#125;; <span class="comment">// 十七位数字本体码权重</span></span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span>[] verify = <span class="keyword">new</span> <span class="keyword">char</span>[] &#123; <span class="string">'1'</span>, <span class="string">'0'</span>, <span class="string">'X'</span>, <span class="string">'9'</span>, <span class="string">'8'</span>, <span class="string">'7'</span>, <span class="string">'6'</span>, <span class="string">'5'</span>, <span class="string">'4'</span>, <span class="string">'3'</span>, <span class="string">'2'</span> &#125;; <span class="comment">// mod11,对应校验码字符值</span></span><br><span class="line">     <span class="comment">// /**</span></span><br><span class="line">     <span class="comment">// * 保存地区编码</span></span><br><span class="line">     <span class="comment">// */</span></span><br><span class="line">     <span class="comment">// private static final Map&lt;String, String&gt; map = new HashMap&lt;String,</span></span><br><span class="line">     <span class="comment">// String&gt;();</span></span><br><span class="line">     <span class="comment">// static &#123;</span></span><br><span class="line">     <span class="comment">// map.put("11", "北京");</span></span><br><span class="line">     <span class="comment">// map.put("12", "天津");</span></span><br><span class="line">     <span class="comment">// map.put("13", "河北");</span></span><br><span class="line">     <span class="comment">// map.put("14", "山西");</span></span><br><span class="line">     <span class="comment">// map.put("15", "内蒙古");</span></span><br><span class="line">     <span class="comment">// map.put("21", "辽宁");</span></span><br><span class="line">     <span class="comment">// map.put("22", "吉林");</span></span><br><span class="line">     <span class="comment">// map.put("23", "黑龙江");</span></span><br><span class="line">     <span class="comment">// map.put("31", "上海");</span></span><br><span class="line">     <span class="comment">// map.put("32", "江苏");</span></span><br><span class="line">     <span class="comment">// map.put("33", "浙江");</span></span><br><span class="line">     <span class="comment">// map.put("34", "安徽");</span></span><br><span class="line">     <span class="comment">// map.put("35", "福建");</span></span><br><span class="line">     <span class="comment">// map.put("36", "江西");</span></span><br><span class="line">     <span class="comment">// map.put("37", "山东");</span></span><br><span class="line">     <span class="comment">// map.put("41", "河南");</span></span><br><span class="line">     <span class="comment">// map.put("42", "湖北");</span></span><br><span class="line">     <span class="comment">// map.put("43", "湖南");</span></span><br><span class="line">     <span class="comment">// map.put("44", "广东");</span></span><br><span class="line">     <span class="comment">// map.put("45", "广西");</span></span><br><span class="line">     <span class="comment">// map.put("46", "海南");</span></span><br><span class="line">     <span class="comment">// map.put("50", "重庆");</span></span><br><span class="line">     <span class="comment">// map.put("51", "四川");</span></span><br><span class="line">     <span class="comment">// map.put("52", "贵州");</span></span><br><span class="line">     <span class="comment">// map.put("53", "云南");</span></span><br><span class="line">     <span class="comment">// map.put("54", "西藏");</span></span><br><span class="line">     <span class="comment">// map.put("61", "陕西");</span></span><br><span class="line">     <span class="comment">// map.put("62", "甘肃");</span></span><br><span class="line">     <span class="comment">// map.put("63", "青海");</span></span><br><span class="line">     <span class="comment">// map.put("64", "宁夏");</span></span><br><span class="line">     <span class="comment">// map.put("65", "新疆");</span></span><br><span class="line">     <span class="comment">// map.put("71", "台湾");</span></span><br><span class="line">     <span class="comment">// map.put("81", "香港");</span></span><br><span class="line">     <span class="comment">// map.put("82", "澳门");</span></span><br><span class="line">     <span class="comment">// map.put("91", "国外");</span></span><br><span class="line">     <span class="comment">// &#125;</span></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 验证身份证</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MyObj <span class="title">verifyIdcard</span><span class="params">(String idstr)</span> </span>&#123;</span><br><span class="line">           MyObj rt = <span class="keyword">new</span> MyObj();</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 1、校验是否为空</span></span><br><span class="line">                <span class="keyword">if</span> (idstr == <span class="keyword">null</span> || idstr == <span class="string">""</span>) &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="number">50001</span>, <span class="string">"校验的身份证不能为空！"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 2、校验长度</span></span><br><span class="line">                String idstr17 = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">int</span> length = idstr.length();</span><br><span class="line">                <span class="keyword">if</span> (length == <span class="number">15</span>) &#123;</span><br><span class="line">                     idstr17 = idstr.substring(<span class="number">0</span>, <span class="number">6</span>) + <span class="string">"19"</span> + idstr.substring(<span class="number">6</span>, length);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (length == <span class="number">18</span>) &#123;</span><br><span class="line">                     idstr17 = idstr.substring(<span class="number">0</span>, <span class="number">17</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="number">50002</span>, <span class="string">"校验的身份证长度不符合，校验的身份证长度只能是15位或者18位"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 3、校验地区编码</span></span><br><span class="line">                <span class="comment">// verifyAreacode(idstr17);</span></span><br><span class="line">                <span class="comment">// 4、校验数字</span></span><br><span class="line">                verifyNumeric(idstr17);</span><br><span class="line">                <span class="comment">// 5、校验日期有效性</span></span><br><span class="line">                verifyDate(idstr17);</span><br><span class="line">                <span class="comment">// 6、获取身份证校验码，比较2个身份证号码是否一致</span></span><br><span class="line">                <span class="keyword">char</span> verifyCode = getVerifyCode(idstr17);</span><br><span class="line">                String verifyStr = idstr17 + verifyCode; <span class="comment">// 通过校验得到的身份证号码</span></span><br><span class="line">                <span class="keyword">if</span> (!verifyStr.equals(idstr)) &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="number">50006</span>, <span class="string">"身份证无效，不是合法的身份证号码"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (MyException e) &#123;</span><br><span class="line">                rt.setErrcode(e.getErrcode());</span><br><span class="line">                rt.setErrmsg(e.getErrmsg());</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> rt;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">// /**</span></span><br><span class="line">     <span class="comment">// * 校验地区编码：身份证前2位</span></span><br><span class="line">     <span class="comment">// *</span></span><br><span class="line">     <span class="comment">// * @param idstr17</span></span><br><span class="line">     <span class="comment">// * 身份证前17位</span></span><br><span class="line">     <span class="comment">// */</span></span><br><span class="line">     <span class="comment">// private static void verifyAreacode(String idstr17)</span></span><br><span class="line">     <span class="comment">// throws ErrException &#123;</span></span><br><span class="line">     <span class="comment">// String acode = idstr17.substring(6, 10);// 年份</span></span><br><span class="line">     <span class="comment">// if (map.get(acode) == null) &#123;</span></span><br><span class="line">     <span class="comment">// throw new ErrException(50003, "身份证地区编码错误（" + acode + "）");</span></span><br><span class="line">     <span class="comment">// &#125;</span></span><br><span class="line">     <span class="comment">// &#125;</span></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 校验身份证前17位是否有效数字</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> idtstr17</span></span><br><span class="line"><span class="comment">      *            身份证前17位</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> 数字-true，非数字-false</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">verifyNumeric</span><span class="params">(String idtstr17)</span> <span class="keyword">throws</span> MyException </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (!idtstr17.matches(<span class="string">"^\\d&#123;17&#125;$"</span>)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="number">50004</span>, <span class="string">"身份证15位号码，18位号码除最后一位外，都应为数字。"</span>);</span><br><span class="line">           &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 身份证校验码</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> idstr17</span></span><br><span class="line"><span class="comment">      *            身份证前17位</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> 返回最后一位效验码</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span> <span class="title">getVerifyCode</span><span class="params">(String idstr17)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">int</span> mode = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; idstr17.length(); i++) &#123;</span><br><span class="line">                sum += ((<span class="keyword">int</span>) (idstr17.charAt(i) - <span class="number">0x30</span>)) * weight[i]; <span class="comment">// 0x30：16进制的0</span></span><br><span class="line">           &#125;</span><br><span class="line">           mode = sum % <span class="number">11</span>;</span><br><span class="line">           <span class="keyword">return</span> verify[mode];</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 校验生日日期是否正确</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> idstr17</span></span><br><span class="line"><span class="comment">      *            身份证前17位</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> 返回最后一位效验码</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">verifyDate</span><span class="params">(String idstr17)</span> <span class="keyword">throws</span> MyException </span>&#123;</span><br><span class="line">           String year = idstr17.substring(<span class="number">6</span>, <span class="number">10</span>);<span class="comment">// 年份</span></span><br><span class="line">           String month = idstr17.substring(<span class="number">10</span>, <span class="number">12</span>);<span class="comment">// 月份</span></span><br><span class="line">           String day = idstr17.substring(<span class="number">12</span>, <span class="number">14</span>);<span class="comment">// 月份</span></span><br><span class="line">           String str = year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + day;</span><br><span class="line">           <span class="comment">// TODO 用“(19|2\\d)\\d&#123;2&#125;”来验证年份，有欠完善性</span></span><br><span class="line">           <span class="keyword">if</span> (!str.matches(<span class="string">"^(19|2\\d)\\d&#123;2&#125;-((0[1-9])|(1[012]))-((0[1-9])|(1\\d)|(2\\d)|(3[01]))$"</span>)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="number">50005</span>, <span class="string">"身份证生日无效（"</span> + str + <span class="string">"）！"</span>);</span><br><span class="line">           &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">           String str = <span class="string">""</span>;</span><br><span class="line">           <span class="comment">// System.out.println("身份证校验码：" + IdUtils.getVerifyCode(str.substring(0,</span></span><br><span class="line">           <span class="comment">// 17)));</span></span><br><span class="line">           System.out.println(<span class="string">"身份证校验："</span> + IdUtils.verifyIdcard(str));</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObj</span> </span>&#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">int</span> errcode = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">private</span> String errmsg = <span class="string">"ok"</span>;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyObj</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyObj</span><span class="params">(<span class="keyword">int</span> errcode, String errmsg)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.errcode = errcode;</span><br><span class="line">           <span class="keyword">this</span>.errmsg = errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getErrcode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> errcode;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrcode</span><span class="params">(<span class="keyword">int</span> errcode)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.errcode = errcode;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> String <span class="title">getErrmsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrmsg</span><span class="params">(String errmsg)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.errmsg = errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">"MyObj [errcode="</span> + errcode + <span class="string">", errmsg="</span> + errmsg + <span class="string">"]"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span> </span>&#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1756360434352093459L</span>;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">int</span> errcode = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">private</span> String errmsg = <span class="string">"ok"</span>;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>(cause);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(<span class="keyword">int</span> errcode, String errmsg)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>(errmsg);</span><br><span class="line">           <span class="keyword">this</span>.errcode = errcode;</span><br><span class="line">           <span class="keyword">this</span>.errmsg = errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(<span class="keyword">int</span> errcode, Throwable cause)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>(cause);</span><br><span class="line">           <span class="keyword">this</span>.errcode = errcode;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String errmsg, Throwable cause)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>(errmsg, cause);</span><br><span class="line">           <span class="keyword">this</span>.errmsg = errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(<span class="keyword">int</span> errcode, String errmsg, Throwable cause)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>(errmsg, cause);</span><br><span class="line">           <span class="keyword">this</span>.errcode = errcode;</span><br><span class="line">           <span class="keyword">this</span>.errmsg = errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getErrcode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> errcode;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrcode</span><span class="params">(<span class="keyword">int</span> errcode)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.errcode = errcode;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> String <span class="title">getErrmsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrmsg</span><span class="params">(String errmsg)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.errmsg = errmsg;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">"MyException [errcode="</span> + errcode + <span class="string">", errmsg="</span> + errmsg + <span class="string">"]"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>jQuery 扩展新函数，增强ajax、post等方法</title>
    <url>/posts/66aefafa.html</url>
    <content><![CDATA[<p>实现<code>$.ajax</code>、<code>$.post</code>的拦截器方法来统一操作一些加解密逻辑</p>
<ul>
<li>重写<code>$.ajax</code>、<code>$.post</code></li>
<li>扩展新函数<code>$.ajaxEx</code>、<code>$.postEx</code></li>
</ul>
<p>明显这里扩展新函数更加合理。<code>$.get</code>、<code>$.load</code>等扩展也是一样</p>
<a id="more"></a>
<blockquote>
<p>扩展新函数<code>$.ajaxEx</code>、<code>$.postEx</code></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!(<span class="function"><span class="keyword">function</span> (<span class="params">$, json, Ts</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 构建 AES 密钥</span></span><br><span class="line">    <span class="keyword">var</span> aesKey = Ts.AES.randomKey();</span><br><span class="line">    <span class="comment">// 使用 RSA 公钥加密 AES 密钥</span></span><br><span class="line">    <span class="keyword">var</span> ak = Ts.RSA.encrypt(publicExponent, modulus, aesKey);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为 jQuery 添加新函数</span></span><br><span class="line">    $.extend(&#123;</span><br><span class="line">        ajaxEx: <span class="function"><span class="keyword">function</span> (<span class="params">url, options</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// If url is an object, simulate pre-1.5 signature</span></span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">typeof</span> url === <span class="string">"object"</span> ) &#123;</span><br><span class="line">                options = url;</span><br><span class="line">                url = <span class="literal">undefined</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Force options to be an object</span></span><br><span class="line">            options = options || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> data = options[<span class="string">'data'</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> data === <span class="string">'string'</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'opt.data parameter can not be a string!'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Force options to be an object</span></span><br><span class="line">            data = data || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用 AES 加密数据</span></span><br><span class="line">            <span class="keyword">var</span> enc = Ts.AES.encrypt(aesKey, json.stringify(data));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fn = &#123;</span><br><span class="line">                success: <span class="literal">null</span>,</span><br><span class="line">                complete: <span class="literal">null</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">if</span> (options.success) &#123;</span><br><span class="line">                fn.success = options.success;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (options.complete) &#123;</span><br><span class="line">                fn.complete = options.complete;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> opts = &#123;&#125;;</span><br><span class="line">            opts[<span class="string">'data'</span>] = &#123;&#125;;</span><br><span class="line">            opts[<span class="string">'data'</span>][<span class="string">'ak'</span>] = ak;</span><br><span class="line">            opts[<span class="string">'data'</span>][<span class="string">'encrypt'</span>] = enc;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fn.success !== <span class="literal">null</span>) &#123;</span><br><span class="line">                opts[<span class="string">'success'</span>] = <span class="function"><span class="keyword">function</span> (<span class="params">data, ts, xhr</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (data[<span class="string">'errcode'</span>] === <span class="string">'0'</span> &amp;&amp; data &amp;&amp; data[<span class="string">'data'</span>] &amp;&amp; data[<span class="string">'data'</span>][<span class="string">'encrypt'</span>]) &#123;</span><br><span class="line">                        <span class="keyword">var</span> _encrypt = data[<span class="string">'data'</span>][<span class="string">'encrypt'</span>];</span><br><span class="line">                        <span class="comment">// 使用 RSA 解密 AES 密钥，再使用解密出来的密钥解密数据</span></span><br><span class="line">                        <span class="keyword">var</span> _decrypt = Ts.AES.decrypt(Ts.AES.getKey(), _encrypt);</span><br><span class="line">                        <span class="keyword">var</span> _data = $.extend(&#123;&#125;, data);</span><br><span class="line">                        _data[<span class="string">'data'</span>] = <span class="built_in">eval</span>(<span class="string">'('</span> + _decrypt + <span class="string">')'</span>);</span><br><span class="line">                        <span class="keyword">var</span> _xhr = $.extend(&#123;&#125;, xhr);</span><br><span class="line">                        _xhr[<span class="string">'responseJSON'</span>] = _data;</span><br><span class="line">                        _xhr[<span class="string">'responseText'</span>] = json.stringify(_data);</span><br><span class="line">                        fn.success(_data, ts, _xhr);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        fn.success(data, ts, xhr);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fn.complete !== <span class="literal">null</span>) &#123;</span><br><span class="line">                opts[<span class="string">'complete'</span>] = <span class="function"><span class="keyword">function</span> (<span class="params">xhr, ts</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> data = json.parse(xhr.responseText);</span><br><span class="line">                    <span class="keyword">if</span> (data[<span class="string">'errcode'</span>] === <span class="string">'0'</span> &amp;&amp; data &amp;&amp; data[<span class="string">'data'</span>] &amp;&amp; data[<span class="string">'data'</span>][<span class="string">'encrypt'</span>]) &#123;</span><br><span class="line">                        <span class="keyword">var</span> _encrypt = data[<span class="string">'data'</span>][<span class="string">'encrypt'</span>];</span><br><span class="line">                        <span class="comment">// 使用 RSA 解密 AES 密钥，再使用解密出来的密钥解密数据</span></span><br><span class="line">                        data[<span class="string">'data'</span>] = json.parse(Ts.AES.decrypt(Ts.AES.getKey(), _encrypt));</span><br><span class="line">                        <span class="keyword">var</span> _xhr = $.extend(&#123;&#125;, xhr);</span><br><span class="line">                        _xhr[<span class="string">'responseJSON'</span>] = data;</span><br><span class="line">                        _xhr[<span class="string">'responseText'</span>] = json.stringify(data);</span><br><span class="line">                        fn.complete(_xhr, ts);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        fn.complete(xhr, ts);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> _opt = $.extend(options, opts);</span><br><span class="line">            <span class="keyword">return</span> $.ajax(url, _opt);</span><br><span class="line">        &#125;,</span><br><span class="line">        postEx: <span class="function"><span class="keyword">function</span> (<span class="params">url, data, callback, type</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// Shift arguments if data argument was omitted</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">'function'</span>) &#123;</span><br><span class="line">                type = type || callback;</span><br><span class="line">                callback = data;</span><br><span class="line">                data = <span class="literal">undefined</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> data === <span class="string">'string'</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'opt.data parameter can not be a string!'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Force options to be an object</span></span><br><span class="line">            data = data || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用 AES 加密数据</span></span><br><span class="line">            <span class="keyword">var</span> enc = Ts.AES.encrypt(aesKey, json.stringify(data));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fn = &#123;</span><br><span class="line">                callback: <span class="literal">null</span></span><br><span class="line">            &#125;;</span><br><span class="line">            fn.callback = callback;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> _data = &#123;&#125;;</span><br><span class="line">            _data[<span class="string">'ak'</span>] = ak;</span><br><span class="line">            _data[<span class="string">'encrypt'</span>] = enc;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fn.callback !== <span class="literal">null</span>) &#123;</span><br><span class="line">                callback = <span class="function"><span class="keyword">function</span> (<span class="params">data, ts, xhr</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (data[<span class="string">'errcode'</span>] === <span class="string">'0'</span> &amp;&amp; data &amp;&amp; data[<span class="string">'data'</span>] &amp;&amp; data[<span class="string">'data'</span>][<span class="string">'encrypt'</span>]) &#123;</span><br><span class="line">                        <span class="keyword">var</span> _encrypt = data[<span class="string">'data'</span>][<span class="string">'encrypt'</span>];</span><br><span class="line">                        <span class="comment">// 使用 RSA 解密 AES 密钥，再使用解密出来的密钥解密数据</span></span><br><span class="line">                        <span class="keyword">var</span> _decrypt = Ts.AES.decrypt(Ts.AES.getKey(), _encrypt);</span><br><span class="line">                        <span class="keyword">var</span> _data = $.extend(&#123;&#125;, data);</span><br><span class="line">                        _data[<span class="string">'data'</span>] = <span class="built_in">eval</span>(<span class="string">'('</span> + _decrypt + <span class="string">')'</span>);</span><br><span class="line">                        <span class="keyword">var</span> _xhr = $.extend(&#123;&#125;, xhr);</span><br><span class="line">                        _xhr[<span class="string">'responseJSON'</span>] = _data;</span><br><span class="line">                        _xhr[<span class="string">'responseText'</span>] = json.stringify(_data);</span><br><span class="line">                        fn.callback(_data, ts, _xhr);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        fn.callback(data, ts, xhr);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $.post(url, _data, callback, type);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)(jQuery, <span class="built_in">JSON</span>, Ts);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>测试</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.ajaxEx(&#123;</span><br><span class="line">  url: <span class="string">'http://localhost:8080/test'</span>,</span><br><span class="line">  type: <span class="string">'post'</span>,</span><br><span class="line">  dataType: <span class="string">'json'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'123'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'test'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span>(<span class="params">data, ts, xhr</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data: %o'</span>, data);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ts: %o'</span>, ts);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'xhr: %o'</span>, xhr);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$.ajaxEx(&#123;</span><br><span class="line">  url: <span class="string">'http://localhost:8080/test'</span>,</span><br><span class="line">  type: <span class="string">'post'</span>,</span><br><span class="line">  dataType: <span class="string">'json'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'123'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'test'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  complete: <span class="function"><span class="keyword">function</span>(<span class="params">xhr, ts</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'xhr: %o'</span>, xhr);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ts: %o'</span>, ts);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$.postEx(<span class="string">'http://localhost:8080/test'</span>, &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'123'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'test'</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">data, ts, xhr</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data: %o'</span>, data);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ts: %o'</span>, ts);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'xhr: %o'</span>, xhr);</span><br><span class="line">&#125;, <span class="string">'json'</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
        <tag>ajax</tag>
      </tags>
  </entry>
  <entry>
    <title>jquery.form.js 使用</title>
    <url>/posts/e1e0747e.html</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">	<span class="comment">// 把服务器返回的内容放入id为output的元素中</span></span><br><span class="line">	target : <span class="string">'#output'</span>,</span><br><span class="line">	<span class="comment">// 提交前的回调函数</span></span><br><span class="line">	beforeSubmit : showRequest,</span><br><span class="line">	<span class="comment">// 提交后的回调函数</span></span><br><span class="line">	success : showResponse,</span><br><span class="line">	<span class="comment">// 默认是form的action， 如果申明，则会覆盖</span></span><br><span class="line">	url : url,</span><br><span class="line">	<span class="comment">// 默认是form的method（get or post），如果申明，则会覆盖</span></span><br><span class="line">	type : type,</span><br><span class="line">	<span class="comment">// json...接受服务端返回的类型</span></span><br><span class="line">	dataType : <span class="literal">null</span>, <span class="comment">// html(默认), xml, script,</span></span><br><span class="line">	<span class="comment">// 成功提交后，清除所有表单元素的值</span></span><br><span class="line">	clearForm : <span class="literal">true</span>,</span><br><span class="line">	<span class="comment">// 成功提交后，重置所有表单元素的值</span></span><br><span class="line">	resetForm : <span class="literal">true</span>,</span><br><span class="line">	<span class="comment">// 限制请求的时间，当请求大于3秒后，跳出请求</span></span><br><span class="line">	timeout : <span class="number">3000</span></span><br><span class="line">&#125;;</span><br><span class="line">jqform.ajaxSubmit(&#123;</span><br><span class="line">	resetForm : <span class="literal">true</span>,</span><br><span class="line">	beforeSubmit : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> ($.trim(vue.dxno) == <span class="string">''</span>) &#123;</span><br><span class="line">			alert(<span class="string">'请您输入的手机号码、固话或者宽带帐号'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> ($.trim(vue.dxpw) == <span class="string">''</span>) &#123;</span><br><span class="line">			alert(vue.isrd == <span class="string">'N'</span> ? <span class="string">'请您输入客户密码'</span> : <span class="string">'请您输入随机码'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>store.js的使用</title>
    <url>/posts/78a81828.html</url>
    <content><![CDATA[<p>基于<a href="https://github.com/marcuswestin/store.js" target="_blank" rel="noopener">store.js</a>实现<code>localStorage</code>缓存过期策略</p>
<a id="more"></a>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否支持localStorage本地存储</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (!s.enabled) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'localStorage is not supported by your browser.'</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 规定日期格式</span></span><br><span class="line"><span class="comment">     * 比如：yyyy年MM月dd日 HH:mm:ss S、yyyy-MM-dd HH:mm:ss S......</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_checkFormat</span>(<span class="params">fmt</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="regexp">/^y+[\u5e74-]?M+[\u6708-]?(d+)[\u65e5]? H+[\u65f6:]?m+[\u5206:]?s+[\u79d2]?(( S)?)$/</span>.test(fmt)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'"'</span> + fmt + <span class="string">'" is not supported by the format.'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间格式化：时间毫秒数、Date对象 ---&gt; 时间字符串 默认格式化格式：yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_date2str</span>(<span class="params">str, fmt</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (fmt === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            fmt = <span class="string">'yyyy-MM-dd HH:mm:ss'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        _checkFormat(fmt);</span><br><span class="line">        <span class="keyword">var</span> date;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> str === <span class="string">'number'</span>) &#123;</span><br><span class="line">            date = <span class="keyword">new</span> <span class="built_in">Date</span>(str);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (_isValidDate(str)) &#123;</span><br><span class="line">            date = str;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> o = &#123;</span><br><span class="line">            <span class="string">'M+'</span> : date.getMonth() + <span class="number">1</span>, <span class="comment">// 月</span></span><br><span class="line">            <span class="string">'d+'</span> : date.getDate(), <span class="comment">// 日</span></span><br><span class="line">            <span class="string">'H+'</span> : date.getHours(), <span class="comment">// 小时（24小时制）</span></span><br><span class="line">            <span class="string">'m+'</span> : date.getMinutes(), <span class="comment">// 分</span></span><br><span class="line">            <span class="string">'s+'</span> : date.getSeconds(), <span class="comment">// 秒</span></span><br><span class="line">            <span class="string">'S'</span> : date.getMilliseconds() <span class="comment">// 毫秒</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) &#123;</span><br><span class="line">            fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (date.getFullYear() + <span class="string">''</span>)</span><br><span class="line">                    .substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'('</span> + k + <span class="string">')'</span>).test(fmt)) &#123;</span><br><span class="line">                fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k])</span><br><span class="line">                        : ((<span class="string">'00'</span> + o[k]).substr((<span class="string">''</span> + o[k]).length)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间格式化：将时间字符串 ---&gt; Date对象 默认格式化格式：yyyy-MM-dd HH:mm:ss，使用中文不能格式化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_str2date</span>(<span class="params">str, fmt</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (fmt === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            fmt = <span class="string">'yyyy-MM-dd HH:mm:ss'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        _checkFormat(fmt);</span><br><span class="line">        <span class="keyword">var</span> o = [</span><br><span class="line">            <span class="string">'y+'</span>, <span class="comment">// 年</span></span><br><span class="line">            <span class="string">'M+'</span>, <span class="comment">// 月</span></span><br><span class="line">            <span class="string">'d+'</span>, <span class="comment">// 日</span></span><br><span class="line">            <span class="string">'H+'</span>, <span class="comment">// 小时（24小时制）</span></span><br><span class="line">            <span class="string">'m+'</span>, <span class="comment">// 分</span></span><br><span class="line">            <span class="string">'s+'</span>, <span class="comment">// 秒</span></span><br><span class="line">            <span class="string">'S'</span> <span class="comment">// 毫秒</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; o.length; k++) &#123;</span><br><span class="line">            <span class="keyword">var</span> s = o[k];</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'('</span> + s + <span class="string">')'</span>).test(fmt)) &#123;</span><br><span class="line">                <span class="keyword">var</span> r = <span class="built_in">RegExp</span>.$<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">var</span> rl = <span class="built_in">RegExp</span>.$<span class="number">1.</span>length;</span><br><span class="line">                <span class="keyword">var</span> si = fmt.indexOf(<span class="built_in">RegExp</span>.$<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">var</span> ei = si + rl;</span><br><span class="line">                <span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (r.indexOf(<span class="string">'S'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                    n = <span class="built_in">parseInt</span>(str.substr(si));</span><br><span class="line">                    date.setMilliseconds(n); <span class="comment">// 设置 Date 对象中的毫秒 (0 ~ 999)。</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    n = <span class="built_in">parseInt</span>(str.substring(si, ei));</span><br><span class="line">                    <span class="keyword">if</span> (r.indexOf(<span class="string">'y'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                        date.setFullYear(n); <span class="comment">// 设置 Date 对象中的年份（四位数字）。</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r.indexOf(<span class="string">'M'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                        date.setMonth(n - <span class="number">1</span>); <span class="comment">// 设置 Date 对象中月份 (0 ~ 11)。</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r.indexOf(<span class="string">'d'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                        date.setDate(n); <span class="comment">// 设置 Date 对象中月的某一天 (1 ~ 31)。</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r.indexOf(<span class="string">'H'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                        date.setHours(n); <span class="comment">// 设置 Date 对象中的小时 (0 ~ 23)。</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r.indexOf(<span class="string">'m'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                        date.setMinutes(n); <span class="comment">// 设置 Date 对象中的分钟 (0 ~ 59)。</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r.indexOf(<span class="string">'s'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                        date.setSeconds(n); <span class="comment">// 设置 Date 对象中的秒钟 (0 ~ 59)。</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换：毫秒 ---&gt; 天时分秒毫秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_ms2s</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> s = <span class="built_in">parseInt</span>(ms / <span class="number">1000</span>);<span class="comment">// 秒</span></span><br><span class="line">        <span class="keyword">var</span> m = <span class="number">0</span>;<span class="comment">// 分</span></span><br><span class="line">        <span class="keyword">var</span> h = <span class="number">0</span>;<span class="comment">// 小时</span></span><br><span class="line">        <span class="keyword">var</span> d = <span class="number">0</span>;<span class="comment">// 天</span></span><br><span class="line">        <span class="keyword">if</span> (s &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            m = <span class="built_in">parseInt</span>(s / <span class="number">60</span>);</span><br><span class="line">            s = <span class="built_in">parseInt</span>(s % <span class="number">60</span>);</span><br><span class="line">            <span class="keyword">if</span> (m &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">                h = <span class="built_in">parseInt</span>(m / <span class="number">60</span>);</span><br><span class="line">                m = <span class="built_in">parseInt</span>(m % <span class="number">60</span>);</span><br><span class="line">                <span class="keyword">if</span> (h &gt;= <span class="number">24</span>) &#123;</span><br><span class="line">                    d = <span class="built_in">parseInt</span>(h / <span class="number">24</span>);</span><br><span class="line">                    h = <span class="built_in">parseInt</span>(h % <span class="number">24</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> (s &gt; <span class="number">0</span>)</span><br><span class="line">            str = <span class="string">''</span> + <span class="built_in">parseInt</span>(s) + <span class="string">'\u79d2'</span> + str;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; <span class="number">0</span>)</span><br><span class="line">            str = <span class="string">''</span> + <span class="built_in">parseInt</span>(m) + <span class="string">'\u5206'</span> + str;</span><br><span class="line">        <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span><br><span class="line">            str = <span class="string">''</span> + <span class="built_in">parseInt</span>(h) + <span class="string">'\u5c0f\u65f6'</span> + str;</span><br><span class="line">        <span class="keyword">if</span> (d &gt; <span class="number">0</span>)</span><br><span class="line">            str = <span class="string">''</span> + <span class="built_in">parseInt</span>(d) + <span class="string">'\u5929'</span> + str;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置有效时间，返回对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">VConstructor</span>(<span class="params">val, exp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> item = &#123;&#125;;</span><br><span class="line">        <span class="comment">// 创建时间、有效时间</span></span><br><span class="line">        <span class="keyword">var</span> createTime = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime(), effectiveTime;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> exp === <span class="string">'number'</span>) &#123;</span><br><span class="line">            effectiveTime = <span class="keyword">new</span> <span class="built_in">Date</span>(createTime + exp * <span class="number">60000</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> exp === <span class="string">'string'</span>) &#123;</span><br><span class="line">            effectiveTime = _str2date(exp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (effectiveTime &amp;&amp; !_isValidDate(effectiveTime)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'effectiveTime cannot be converted to a valid Date instance'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        effectiveTime = effectiveTime.getTime();</span><br><span class="line">        item[<span class="string">'c'</span>] = _date2str(createTime);</span><br><span class="line">        item[<span class="string">'e'</span>] = _date2str(effectiveTime);</span><br><span class="line">        item[<span class="string">'t'</span>] = _ms2s(effectiveTime - createTime);</span><br><span class="line">        item[<span class="string">'v'</span>] = val;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否是Date对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_isValidDate</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(date) === <span class="string">'[object Date]'</span></span><br><span class="line">                &amp;&amp; !<span class="built_in">isNaN</span>(date.getTime());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否设置了有效时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_hasEffective</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (item) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> item === <span class="string">'object'</span> &amp;&amp; <span class="string">'c'</span> <span class="keyword">in</span> item &amp;&amp; <span class="string">'e'</span> <span class="keyword">in</span> item</span><br><span class="line">                    &amp;&amp; <span class="string">'v'</span> <span class="keyword">in</span> item) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否是有效</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_isEffective</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ntime = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime();</span><br><span class="line">        <span class="keyword">return</span> ntime &lt; _str2date(item.e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断key是否是字符串，如果不是，则转换成字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_keyAsString</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> key !== <span class="string">'string'</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.warn(key + <span class="string">' used as a key, but it is not a string.'</span>);</span><br><span class="line">            key = <span class="built_in">String</span>(key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * exp 失效时间：默认为0（单位：分钟）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    s.setExp = <span class="function"><span class="keyword">function</span>(<span class="params">key, val, exp</span>) </span>&#123;</span><br><span class="line">        key = _keyAsString(key);</span><br><span class="line">        <span class="keyword">if</span> (exp === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            exp = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        s.set(key, <span class="keyword">new</span> VConstructor(val, exp));</span><br><span class="line">    &#125;;</span><br><span class="line">    s.getExp = <span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">        key = _keyAsString(key);</span><br><span class="line">        <span class="keyword">var</span> item = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            item = s.get(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (_hasEffective(item)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (_isEffective(item)) &#123;</span><br><span class="line">                <span class="keyword">return</span> item.v;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                s.remove(key);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    s.getAllExp = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ret = &#123;&#125;;</span><br><span class="line">        s.forEachExp(<span class="function"><span class="keyword">function</span>(<span class="params">key, val</span>) </span>&#123;</span><br><span class="line">            ret[key] = val;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;;</span><br><span class="line">    s.forEachExp = <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> storage = s.getAll();</span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">var</span> key <span class="keyword">in</span> storage) &#123;</span><br><span class="line">            callback(key, s.getExp(key));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(store);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>localStorage</tag>
        <tag>store.js</tag>
      </tags>
  </entry>
  <entry>
    <title>读取 js 链接后面的参数</title>
    <url>/posts/e053978f.html</url>
    <content><![CDATA[<h1 id="读取-js-链接后面参数的逻辑"><a href="#读取-js-链接后面参数的逻辑" class="headerlink" title="读取 js 链接后面参数的逻辑"></a>读取 js 链接后面参数的逻辑</h1><blockquote>
<p>js/log.js</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 当前 script src 中的 js url</span></span><br><span class="line"><span class="keyword">var</span> jsUrl = <span class="built_in">document</span>.scripts[<span class="built_in">document</span>.scripts.length - <span class="number">1</span>].src;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"url: %o"</span>, jsUrl);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> paramArr = jsUrl.split(<span class="string">'\?'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'paramArr: %o'</span>, paramArr);</span><br><span class="line"><span class="keyword">if</span> (paramArr.length === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 所有参数放到这个变量中</span></span><br><span class="line"><span class="keyword">var</span> map = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> keyValueStrArr = paramArr[<span class="number">1</span>].split(<span class="string">'\&amp;'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'keyValueStrArr: %o'</span>, keyValueStrArr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; keyValueStrArr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> keyValueArr = keyValueStrArr[i].split(<span class="string">'\='</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'keyValueArr: %o'</span>, keyValueArr);</span><br><span class="line">    map[keyValueArr[<span class="number">0</span>]] = keyValueArr[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'map: %o'</span>, map);</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="在页面中引入js"><a href="#在页面中引入js" class="headerlink" title="在页面中引入js"></a>在页面中引入js</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=GBK"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> <span class="attr">name</span>=<span class="string">"viewport"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"yes"</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"black"</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span> <span class="attr">name</span>=<span class="string">"format-detection"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"email=no"</span> <span class="attr">name</span>=<span class="string">"format-detection"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>在用产品功能<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/log.js?v=20190124&amp;timestamp=1234567"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="控制台打印"><a href="#控制台打印" class="headerlink" title="控制台打印"></a>控制台打印</h1><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">url: js/log.js?v=20190124&amp;timestamp=1234567</span><br><span class="line">paramArr: ["js/log.js", "v=20190124&amp;timestamp=1234567"]</span><br><span class="line">keyValueStrArr: ["v=20190124", "timestamp=1234567"]</span><br><span class="line">keyValueArr: ["v", "20190124"]</span><br><span class="line">keyValueArr: ["timestamp", "1234567"]</span><br><span class="line">map: &#123;"v": "20190124", "timestamp": "1234567"&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Kettle-Java代码：分布式Id生成器</title>
    <url>/posts/4f2ec68b.html</url>
    <content><![CDATA[<p>当使用Kettle导入数据到数据表时，由于使用的是Oracle，所以自然而然想到使用<code>增加序列</code>对象去获取一个Id，但是经过测试这种方式非常慢。</p>
<p>以下对比2种不同方式的导入速度：</p>
<ul>
<li>序列生成Id</li>
<li>分布式Id生成器</li>
</ul>
<a id="more"></a>
<h1 id="速度比较"><a href="#速度比较" class="headerlink" title="速度比较"></a>速度比较</h1><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><blockquote>
<p>转换</p>
</blockquote>
<p><img src="/posts/4f2ec68b/seq_0.jpg" alt="转换"></p>
<blockquote>
<p>执行结果</p>
</blockquote>
<p><img src="/posts/4f2ec68b/seq_1.png" alt="执行结果"></p>
<p>从图片可以看出来，使用序列生成Id的方式，导入数据是会非常慢。10分钟才导入2w多条记录。</p>
<h2 id="分布式Id生成器"><a href="#分布式Id生成器" class="headerlink" title="分布式Id生成器"></a>分布式Id生成器</h2><p>请参考：<a href="/posts/f9490f40.html" title="分布式Id生成器">分布式Id生成器</a></p>
<blockquote>
<p>使用</p>
</blockquote>
<p>将以上 <a href="/posts/f9490f40.html" title="分布式Id生成器">分布式Id生成器</a> 文章的代码打包成<code>jar</code>包，放到<code>kettle/lib</code>文件夹下。假设包名、类名：<code>top.ylonline.common.keygen.SnowflakeKeyGenerator.java</code></p>
<blockquote>
<p>转换</p>
</blockquote>
<p><img src="/posts/4f2ec68b/snowflake_id_0.jpg" alt="转换"></p>
<blockquote>
<p>Java代码对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.*;</span><br><span class="line"><span class="comment">// 一定要在这里初始化，不能在函数体里面，否则导致每处理一行记录，都会初始化一次生成器，从而导致会出现重复Id</span></span><br><span class="line">top.ylonline.common.keygen.SnowflakeKeyGenerator snowflake = <span class="keyword">new</span> top.ylonline.common.keygen.SnowflakeKeyGenerator();</span><br><span class="line">String snowFlowIdFeild;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processRow</span><span class="params">(StepMetaInterface smi, StepDataInterface sdi)</span> <span class="keyword">throws</span> KettleException</span>&#123;</span><br><span class="line">    <span class="comment">// First, get a row from the default input hop</span></span><br><span class="line">    Object[] r = getRow();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the row object is null, we are done processing.</span></span><br><span class="line">    <span class="keyword">if</span> (r == <span class="keyword">null</span>) &#123;</span><br><span class="line">        setOutputDone();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Let's look up parameters only once for performance reason.</span></span><br><span class="line">    <span class="keyword">if</span> (first) &#123;</span><br><span class="line">        snowFlowIdFeild = getParameter(<span class="string">"SNOWFLOW_ID_FEILD"</span>);</span><br><span class="line">        first=<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// It is always safest to call createOutputRow() to ensure that your output row's Object[] is large</span></span><br><span class="line">    <span class="comment">// enough to handle any new fields you are creating in this step.</span></span><br><span class="line">    Object[] outputRow = createOutputRow(r, data.outputRowMeta.size());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取分布式 Id</span></span><br><span class="line">    String id = String.valueOf(snowflake.generateKey());</span><br><span class="line">    <span class="comment">// logBasic("id: " + id);</span></span><br><span class="line"></span><br><span class="line">    get(Fields.Out, snowFlowIdFeild).setValue(outputRow, id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// putRow will send the row on to the default output hop.</span></span><br><span class="line">    putRow(data.outputRowMeta, outputRow);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/posts/4f2ec68b/java_code.jpg" alt="Java代码"></p>
<ul>
<li><p>字段配置</p>
<p>字段名：snowflake_id</p>
<p>类型：String</p>
</li>
<li><p>参数配置</p>
<p>标签：SNOWFLOW_ID_FEILD</p>
<p>值：snowflake_id</p>
</li>
</ul>
<blockquote>
<p>执行结果</p>
</blockquote>
<p><img src="/posts/4f2ec68b/snowflake_id_1.png" alt="执行结果"></p>
]]></content>
      <categories>
        <category>kettle</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Snowflake</tag>
        <tag>kettle</tag>
      </tags>
  </entry>
  <entry>
    <title>Kettle 配置及问题汇总</title>
    <url>/posts/a426a84b.html</url>
    <content><![CDATA[<h1 id="共享配置"><a href="#共享配置" class="headerlink" title="共享配置"></a>共享配置</h1><p>默认共享数据保存在用户目录的<code>share.xml</code>文件。可以通过修改<code>kettle.properties</code>来修改保存位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Custom Setting</span><br><span class="line"># 会在kettle安装目录生成一个share.cache文件，并把共享数据保存到该文件</span><br><span class="line">KETTLE_SHARED_OBJECTS=share.cache</span><br></pre></td></tr></table></figure>
<h1 id="共享-step-后出现异常"><a href="#共享-step-后出现异常" class="headerlink" title="共享 step 后出现异常"></a>共享 step 后出现异常</h1><p>共享DB连接无此问题。</p>
<p><code>share.xml</code>默认<code>utf-8</code>是编码，当共享step后编码变了<code>ANSI</code>，导致读取共享数据出错。将<code>share.xml</code>手动<code>utf-8</code>编码可以解决问题。</p>
]]></content>
      <categories>
        <category>kettle</category>
      </categories>
      <tags>
        <tag>kettle</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac Kettle 安装</title>
    <url>/posts/9fd2e395.html</url>
    <content><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://sourceforge.net/projects/pentaho/files/" target="_blank" rel="noopener">https://sourceforge.net/projects/pentaho/files/</a></p>
<blockquote>
<p>版本：9.1</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>下载 zip 包后，解压到相应目录即可</p>
<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p>执行<code>spoon.command</code>启动 <code>kettle</code></p>
<a id="more"></a>
<h2 id="启动异常"><a href="#启动异常" class="headerlink" title="启动异常"></a>启动异常</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.lang.NullPointerException</span><br><span class="line">at org.eclipse.swt.widgets.Control.internal_new_GC(Unknown Source)</span><br><span class="line">at org.eclipse.swt.graphics.GC.&lt;init&gt;(Unknown Source)</span><br><span class="line">at org.eclipse.swt.graphics.GC.&lt;init&gt;(Unknown Source)</span><br><span class="line">at org.eclipse.swt.custom.CTabFolder.updateTabHeight(Unknown Source)</span><br><span class="line">at org.eclipse.swt.custom.CTabFolder.runUpdate(Unknown Source)</span><br><span class="line">at org.eclipse.swt.custom.CTabItem.getBounds(Unknown Source)</span><br><span class="line">at org.eclipse.swt.custom.CTabFolder.onPaint(Unknown Source)</span><br><span class="line">at org.eclipse.swt.custom.CTabFolder$1.handleEvent(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.EventTable.sendEvent(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Display.sendEvent(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Control.drawWidget(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Widget.drawRect(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Display.windowProc(Unknown Source)</span><br><span class="line">at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)</span><br><span class="line">at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Display.applicationProc(Unknown Source)</span><br><span class="line">at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)</span><br><span class="line">at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(Unknown Source)</span><br><span class="line">at org.eclipse.swt.widgets.Display.readAndDispatch(Unknown Source)</span><br><span class="line">at org.pentaho.di.ui.spoon.Spoon.readAndDispatch(Spoon.java:1385)</span><br><span class="line">at org.pentaho.di.ui.spoon.Spoon.waitForDispose(Spoon.java:7968)</span><br><span class="line">at org.pentaho.di.ui.spoon.Spoon.start(Spoon.java:9350)</span><br><span class="line">at org.pentaho.di.ui.spoon.Spoon.main(Spoon.java:711)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.pentaho.commons.launcher.Launcher.main(Launcher.java:92)</span><br><span class="line">2019-12-23 12:31:23 - Spoon - Spoon  已经结束.</span><br><span class="line">stopping</span><br></pre></td></tr></table></figure>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>由于 jdk 版本不兼容导致，不能高于 JAVA 8 242 版本</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>方案一：卸载高版本 jdk，重新下载 jdk 1.8 242或以下版本安装</p>
<p>方案二：从<a href="https://www.azul.com/downloads/zulu-community/?version=java-8-lts&amp;os=macos&amp;architecture=x86-64-bit&amp;package=jdk&amp;show-old-builds=true下载" target="_blank" rel="noopener">https://www.azul.com/downloads/zulu-community/?version=java-8-lts&amp;os=macos&amp;architecture=x86-64-bit&amp;package=jdk&amp;show-old-builds=true下载</a> JAVA 8 242 版本，解压 zip 后，将解压后的文件放到<code>$KETTLE_HOME/java</code>下。参考：<a href="https://jira.pentaho.com/browse/PDI-18866" target="_blank" rel="noopener">https://jira.pentaho.com/browse/PDI-18866</a></p>
]]></content>
      <categories>
        <category>kettle</category>
      </categories>
      <tags>
        <tag>kettle</tag>
      </tags>
  </entry>
  <entry>
    <title>docker pentaho-kettle 安装和配置</title>
    <url>/posts/3e7d19cc.html</url>
    <content><![CDATA[<h1 id="docker配置"><a href="#docker配置" class="headerlink" title="docker配置"></a>docker配置</h1><blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">jenkins_agent:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_kettle</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hiromuhota/webspoon:0.9.0.22</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8081:8080"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./pdi/kettle:/home/tomcat/.kettle"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./pdi/pentaho:/home/tomcat/.pentaho"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./pdi/tomcat/plugins:/usr/local/tomcat/plugins"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./pdi/tomcat/system:/usr/local/tomcat/system"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./pdi/tomcat/simple-jndi:/usr/local/tomcat/simple-jndi"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./pdi/tomcat/webapps/spoon:/usr/local/tomcat/webapps/spoon"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/var/run/docker.sock:/var/run/docker.sock"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/etc/localtime:/etc/localtime"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h1 id="权限配置"><a href="#权限配置" class="headerlink" title="权限配置"></a>权限配置</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chown -R 999:999 pdi/</span><br></pre></td></tr></table></figure>
<h1 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h1><blockquote>
<p>/home/tomcat/.kettle/.languageChoice</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LocaleDefault=zh_CN</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>kettle</category>
      </categories>
      <tags>
        <tag>pentaho-kettle</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS dns 配置</title>
    <url>/posts/b5386f83.html</url>
    <content><![CDATA[<h1 id="查询网卡名"><a href="#查询网卡名" class="headerlink" title="查询网卡名"></a>查询网卡名</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmcli connection show</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出信息</span></span><br><span class="line">名称    UUID                                  类型            设备   </span><br><span class="line">ens192  03da7500-2101-c722-2438-d0d006c28c73  802-3-ethernet  ens192</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看网络配置</span></span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-ens192</span><br><span class="line"><span class="comment"># 查看网络配置</span></span><br><span class="line">nmcli c show ens192</span><br></pre></td></tr></table></figure>
<h1 id="配置-dns"><a href="#配置-dns" class="headerlink" title="配置 dns"></a>配置 dns</h1> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果系统开启了IPv4、IPv6，需要配置这个。参考：http://www.spingdraft.com/article-10081.html</span></span><br><span class="line">sudo nmcli con mod ens192 ipv4.dns-options <span class="string">"timeout:2 attempts:3 rotate single-request-reopen"</span></span><br><span class="line"><span class="comment"># 配置 dns 服务</span></span><br><span class="line">sudo nmcli con mod ens192 ipv4.dns <span class="string">"192.168.2.10"</span></span><br><span class="line">sudo nmcli con up ens192</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># ens192 		是网卡名称</span></span><br><span class="line"><span class="comment"># timeout 	表示查询一个nameserver的超时时间，单位是秒。系统缺省是5，最大可以设为30。</span></span><br><span class="line"><span class="comment"># attempts 	这个是查询的整个都尝试一遍的次数，默认LINUX会发出好几次DNS查询包</span></span><br><span class="line"><span class="comment"># rotate 		这个参数的含义是随机选取一个作为查询的dns server，默认为按照顺序从上往下。</span></span><br></pre></td></tr></table></figure>
<h1 id="取消-dns-配置"><a href="#取消-dns-配置" class="headerlink" title="取消 dns 配置"></a>取消 dns 配置</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nmcli con mod ens192 ipv4.dns-options <span class="string">""</span></span><br><span class="line">sudo nmcli con mod ens192 ipv4.dns <span class="string">""</span></span><br><span class="line">sudo nmcli con up ens192</span><br></pre></td></tr></table></figure>
<h1 id="测试-dns-速度"><a href="#测试-dns-速度" class="headerlink" title="测试 dns 速度"></a>测试 dns 速度</h1><blockquote>
<p>tst.sh</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># by yl 2020-10-30</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">baiduHttps</span></span>()&#123;</span><br><span class="line">    curl <span class="string">"http://www.baidu.com"</span> \</span><br><span class="line">        -so /dev/null \</span><br><span class="line">        -w <span class="string">"%&#123;http_code&#125; %&#123;time_namelookup&#125; %&#123;time_total&#125;"</span> \</span><br><span class="line">    | xargs <span class="built_in">printf</span> <span class="string">" %6s%8s%8s |"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">baiduHttp</span></span>()&#123;</span><br><span class="line">    curl <span class="string">"http://www.baidu.com"</span> \</span><br><span class="line">        -so /dev/null \</span><br><span class="line">        -w <span class="string">"%&#123;http_code&#125; %&#123;time_namelookup&#125; %&#123;time_total&#125;"</span> \</span><br><span class="line">    | xargs <span class="built_in">printf</span> <span class="string">"| %6s%8s%8s |"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"==========================================================\n"</span></span><br><span class="line"><span class="keyword">for</span>((i=0;i&lt;100000;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $((i%20)) -eq <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"| %6s%8s%8s | %6s%8s%8s | %20s\n"</span> <span class="string">"http"</span> <span class="string">"dns"</span> <span class="string">"total"</span> <span class="string">"https"</span> <span class="string">"dns"</span> <span class="string">"total"</span> <span class="string">"timeStamp"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    baiduHttp</span><br><span class="line">    baiduHttps</span><br><span class="line">    date <span class="string">"+ %F %T"</span></span><br><span class="line">    sleep 6</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>执行脚本</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nohup sh tst.sh &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nohup.out</span></span><br><span class="line">|   http     dns   total |  https     dns   total |            timeStamp</span><br><span class="line">|    200   0.012   0.018 |    200   0.012   0.019 | 2020-11-02 18:27:59</span><br><span class="line">|    200   0.012   0.018 |    200   0.012   0.021 | 2020-11-02 18:28:05</span><br><span class="line">|    200   0.012   0.019 |    200   0.012   0.018 | 2020-11-02 18:28:11</span><br><span class="line">|    200   0.012   0.018 |    200   0.012   0.018 | 2020-11-02 18:28:17</span><br><span class="line">|    200   0.012   0.018 |    200   0.012   0.018 | 2020-11-02 18:28:23</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>dns</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 部署 FTP 服务</title>
    <url>/posts/9c4dd72b.html</url>
    <content><![CDATA[<h1 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h1><ul>
<li><p>检测是否已经安装<code>vsftpd</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rpm -qa|grep vsftpd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 有打印信息说明已经安装，信息格式如下：</span></span><br><span class="line">vsftpd-3.0.2-27.el7.x86_64</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果已经安装，则可以更新，或者删除重新安装</p>
</blockquote>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 yum 安装 vsftpd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install vsftpd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置开机启动vsftpd服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chkconfig vsftpd on</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动vsftpd服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service vsftpd start</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置防火墙</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开/etc/sysconfig/iptables文件</span></span><br><span class="line">vi /etc/sysconfig/iptables </span><br><span class="line"><span class="meta">#</span><span class="bash"> 在REJECT行之前添加如下代码</span></span><br><span class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT</span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存和关闭文件，重启防火墙</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>
</li>
<li><p>vsftpd配置</p>
<blockquote>
<p>在/etc/vsftpd/vsftpd.conf文件修改以下配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 禁止匿名用户anonymous登录</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置的文件里，是被chroot的用户(无法向上改变目录)</span></span><br><span class="line">chroot_local_user=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 500 OOPS: vsftpd: refusing to run with writable root inside chroot()错误解决</span></span><br><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建用户</span></span><br><span class="line">sudo useradd test_user -s /sbin/nologin</span><br><span class="line"><span class="meta">#</span><span class="bash"> 为用户配置密码，按提示输入两遍密码即可</span></span><br><span class="line">sudo passwd test_user</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看默认密码过期时间</span></span><br><span class="line">vi /etc/login.defs</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码过期时间</span></span><br><span class="line">sudo chage -M 99999 test_user</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在用户目录下创建目录文件，并赋权给用户</span></span><br><span class="line">sudo mkdir -p /home/test_user/test_dir</span><br><span class="line">sudo chown test_user:test_user /home/test_user/test_dir</span><br></pre></td></tr></table></figure>
<h1 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除用户，会连带/home/test_user目录一起删除</span></span><br><span class="line">userdel -rf test_user</span><br></pre></td></tr></table></figure>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动 ftp 服务</span></span><br><span class="line">sudoservice vsftpd start</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 ftp 服务状态</span></span><br><span class="line">sudoservice vsftpd status </span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 ftp 服务</span></span><br><span class="line">sudoservice vsftpd restart</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 ftp 服务</span></span><br><span class="line">sudoservice vsftpd stop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 CentOS 7.x版本使用以下命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 ftp 服务</span></span><br><span class="line">sudo systemctl start vsftpd.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 ftp 服务状态</span></span><br><span class="line">sudo systemctl status vsftpd.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 ftp 服务</span></span><br><span class="line">sudo systemctl restart vsftpd.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 ftp 服务</span></span><br><span class="line">sudo systemctl stop vsftpd.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机启动</span></span><br><span class="line">sudo systemctl enable vsftpd.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止开机启动</span></span><br><span class="line">sudo systemctl disable vsftpd.service</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>vsftpd</tag>
        <tag>FTP</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7 Firewall防火墙配置</title>
    <url>/posts/9af5b5dc.html</url>
    <content><![CDATA[<h3 id="一、firewall介绍"><a href="#一、firewall介绍" class="headerlink" title="一、firewall介绍"></a>一、firewall介绍</h3><p><code>CentOS 7</code>中防火墙是一个非常的强大的功能，对<code>CentOS 6.5</code>中的<code>iptables</code>防火墙进行了升级了。</p>
<h3 id="二、firewall配置"><a href="#二、firewall配置" class="headerlink" title="二、firewall配置"></a>二、firewall配置</h3><h4 id="1、系统配置目录"><a href="#1、系统配置目录" class="headerlink" title="1、系统配置目录"></a>1、系统配置目录</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/usr/lib/firewalld/services</span><br></pre></td></tr></table></figure>
<p>目录中存放定义好的网络服务和端口参数，系统参数，不能修改。</p>
<h4 id="2、用户配置目录"><a href="#2、用户配置目录" class="headerlink" title="2、用户配置目录"></a>2、用户配置目录</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/etc/firewalld/</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="3、如何自定义添加端口"><a href="#3、如何自定义添加端口" class="headerlink" title="3、如何自定义添加端口"></a>3、如何自定义添加端口</h4><p>用户可以通过修改配置文件的方式添加端口，也可以通过命令的方式添加端口，注意，修改的内容会在<code>/etc/firewalld/</code>目录下的配置文件中还体现。  </p>
<ul>
<li>3.1、命令的方式<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=9527/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=8080-9000/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除规则</span></span><br><span class="line">firewall-cmd --permanent --remove-port=9527/tcp</span><br><span class="line">firewall-cmd --permanent --remove-port=8080-9000/tcp</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>参数介绍：<br>1、firewall-cmd：是Linux提供的操作<code>firewall</code>的一个工具<br>2、–permanent：表示设置为持久<br>3、–add-port：标识添加的端口  </p>
<p>另外，<code>firewall</code> 中有 <code>Zone</code> 的概念，可以将具体的端口制定到具体的 <code>zone</code> 配置文件中。</p>
<p>例如：添加 <code>8010</code> 端口<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --permanent --add-port=8010/tcp</span><br></pre></td></tr></table></figure></p>
<p><code>--zone=public</code>指定的zone为public  </p>
<p>添加规则<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ firewall-cmd --permanent \ </span><br><span class="line">--zone=public \ </span><br><span class="line">--add-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source \ </span></span><br><span class="line"><span class="string">address="</span>192.168.0.4/24<span class="string">" \ </span></span><br><span class="line"><span class="string">service name="</span>http<span class="string">" accept"</span></span><br></pre></td></tr></table></figure></p>
<p>删除上面配置的规则<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ firewall-cmd --permanent \ </span><br><span class="line">--zone=public \ </span><br><span class="line">--remove-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source \ </span></span><br><span class="line"><span class="string">address="</span>192.168.0.4/24<span class="string">" \ </span></span><br><span class="line"><span class="string">service name="</span>http<span class="string">" accept"</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>You can check if the port has actually be opened by running<br>firewall-cmd –zone=<zone> –query-port=80/tcp<br>firewall-cmd –zone=<zone> –query-service=http</zone></zone></p>
</blockquote>
<ul>
<li>3.2、文件的方式<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">zone</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short</span>&gt;</span>Public<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 放通指定ip，指定端口、协议 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rule</span> <span class="attr">family</span>=<span class="string">"ipv4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">address</span>=<span class="string">"192.168.56.101"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"555"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">accept</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rule</span> <span class="attr">family</span>=<span class="string">"ipv4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">address</span>=<span class="string">"192.168.56.101"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"9200-9300"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">accept</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 放通任意ip访问服务器的8081端口 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rule</span> <span class="attr">family</span>=<span class="string">"ipv4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8081"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">accept</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">zone</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>上述的一个配置文件可以很好的看出：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、添加需要的规则，开放通源ip为192.168.56.101，端口555，协议tcp</span><br><span class="line">2、开放通源ip为192.168.56.101，端口9200-9300，协议tcp</span><br><span class="line">3、开放通源ip为任意，端口8081，协议tcp</span><br></pre></td></tr></table></figure></p>
<h3 id="三、firewall常用命令"><a href="#三、firewall常用命令" class="headerlink" title="三、firewall常用命令"></a>三、firewall常用命令</h3><p>常用命令介绍<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state                          <span class="comment">#查看防火墙状态，是否是running</span></span><br><span class="line">firewall-cmd --reload                         <span class="comment">#重新载入配置，比如添加规则之后，需要执行此命令</span></span><br><span class="line">firewall-cmd --get-zones                      <span class="comment">#列出支持的zone</span></span><br><span class="line">firewall-cmd --get-services                   <span class="comment">#列出支持的服务，在列表中的服务是放行的</span></span><br><span class="line">firewall-cmd --query-service ftp              <span class="comment">#查看ftp服务是否支持，返回yes或者no</span></span><br><span class="line">firewall-cmd --add-service=ftp                <span class="comment">#临时开放ftp服务</span></span><br><span class="line">firewall-cmd --add-service=ftp --permanent    <span class="comment">#永久开放ftp服务</span></span><br><span class="line">firewall-cmd --remove-service=ftp --permanent <span class="comment">#永久移除ftp服务</span></span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent    <span class="comment">#永久添加80端口 </span></span><br><span class="line">iptables -L -n                                <span class="comment">#查看规则，这个命令是和iptables的相同的</span></span><br></pre></td></tr></table></figure></p>
<p>重启、关闭、开启<code>firewalld</code>服务<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl start firewalld      <span class="comment"># 启动</span></span><br><span class="line">systemctl stop firewalld       <span class="comment"># 关闭</span></span><br><span class="line">systemctl restart firewalld    <span class="comment"># 重启</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld     <span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld    <span class="comment"># 取消开机启动</span></span><br></pre></td></tr></table></figure></p>
<h3 id="四、CentOS切换为iptables防火墙"><a href="#四、CentOS切换为iptables防火墙" class="headerlink" title="四、CentOS切换为iptables防火墙"></a>四、CentOS切换为iptables防火墙</h3><p>本节略</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Firewall</tag>
        <tag>iptables</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS安装JDK</title>
    <url>/posts/d08f134.html</url>
    <content><![CDATA[<h2 id="1、准备"><a href="#1、准备" class="headerlink" title="1、准备"></a>1、准备</h2><p>创建目录<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ mkdir /usr/java</span><br><span class="line">$ <span class="built_in">cd</span> /usr/java</span><br></pre></td></tr></table></figure></p>
<p>下载 <code>jdk-8u73-linux-x64.tar.gz</code>，解压<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ tar -zxvf jdk-8u73-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></p>
<p>会解压到 <code>/usr/java/jdk1.8.0_73</code> 下<br><a id="more"></a></p>
<h2 id="2、配置环境变量-两种方式二选一配置即可"><a href="#2、配置环境变量-两种方式二选一配置即可" class="headerlink" title="2、配置环境变量(两种方式二选一配置即可)"></a>2、配置环境变量(两种方式二选一配置即可)</h2><h3 id="2-1-编辑-etc-profile-文件"><a href="#2-1-编辑-etc-profile-文件" class="headerlink" title="2.1 编辑 /etc/profile 文件"></a>2.1 编辑 <code>/etc/profile</code> 文件</h3><p>修改 <code>/etc/profile</code> 文件当本机仅仅作为开发使用时推荐使用这种方法，因为此种配置时所有用户的 <code>shell</code> 都有权使用这些环境变量，可能会给系统带来安全性问题。<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/profile</span><br></pre></td></tr></table></figure></p>
<p>增加如下内容<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$CLASSPATH</span></span><br></pre></td></tr></table></figure></p>
<p>保存退出 <code>:wq</code><br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ . /etc/profile</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure></p>
<h3 id="2-2-编辑用户目录下的-bash-profile"><a href="#2-2-编辑用户目录下的-bash-profile" class="headerlink" title="2.2 编辑用户目录下的 .bash_profile"></a>2.2 编辑用户目录下的 <code>.bash_profile</code></h3><p>修改 <code>.bash_profile</code> 文件这种方法更为安全，它可以把使用这些环境变量的权限控制到用户级别，如果需要给某个用户权限使用这些环境变量，只需要修改其个人用户主目录下的 <code>.bash_profile</code> 文件就可以了<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$CLASSPATH</span></span><br></pre></td></tr></table></figure></p>
<p>然后执行使之生效<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure></p>
<p>可以看到 <code>JAVA_HOME</code> 不是指向真实的 <code>jdk</code> 目录 <code>/usr/java/jdk1.8.0_73</code>，而是指向 <code>/usr/java/jdk</code></p>
<h1 id="3、创建软链接"><a href="#3、创建软链接" class="headerlink" title="3、创建软链接"></a>3、创建软链接</h1><p>为jdk真实目录创建一个命名更加间洁快捷方式<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ln -s /usr/java/jdk1.8.0_73 /usr/java/jdk</span><br><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="comment">#$ source .bash_profile</span></span><br></pre></td></tr></table></figure></p>
<p>至此，配置完成</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JDK</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox 虚拟机安装 CentOS</title>
    <url>/posts/a45b124.html</url>
    <content><![CDATA[<h1 id="VirtualBox-安装-CentOS-7"><a href="#VirtualBox-安装-CentOS-7" class="headerlink" title="VirtualBox 安装 CentOS 7"></a>VirtualBox 安装 CentOS 7</h1><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote>
<p>虚拟机安装CentOS步骤省略。推荐安装minimal版本</p>
</blockquote>
<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><blockquote>
<p><strong><em>CentOS7</em></strong> 中已经取消了 <strong><em>ifconfig</em></strong>，用 <strong><em>nmcli</em></strong> 进行了代替，服务管理也升级为 <strong><em>systemd</em></strong>。所以之前在6.x版本上的网络配置操作在7.x上行不通了。<br>下面介绍一下在CentOS7.x上进行网络配置的方法。</p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>getMyIp</title>
    <url>/posts/c4f623bc.html</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function getMyIp() &#123;</span><br><span class="line">    case "`uname`" in</span><br><span class="line">        Darwin)</span><br><span class="line">         myip=`echo "show State:/Network/Global/IPv4" | scutil | grep PrimaryInterface | awk '&#123;print $3&#125;' | xargs ifconfig | grep inet | grep -v inet6 | awk '&#123;print $2&#125;'`</span><br><span class="line">         ;;</span><br><span class="line">        *)</span><br><span class="line">         myip=`ip route get 1 | awk '&#123;print $NF;exit&#125;'`</span><br><span class="line">         ;;</span><br><span class="line">  esac</span><br><span class="line">  echo $myip</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LOCALHOST=`getMyIp`</span><br><span class="line">echo $LOCALHOST</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>IP</tag>
      </tags>
  </entry>
  <entry>
    <title>linux dump内存快照等</title>
    <url>/posts/880a8e7e.html</url>
    <content><![CDATA[<h1 id="kill之前先dump"><a href="#kill之前先dump" class="headerlink" title="kill之前先dump"></a>kill之前先dump</h1><p>每次线上环境一出问题，大家就慌了，</p>
<p>通常最直接的办法回滚重启，以减少故障时间，</p>
<p>这样现场就被破坏了，要想事后查问题就麻烦了，</p>
<p>有些问题必须在线上的大压力下才会发生，</p>
<p>线下测试环境很难重现，</p>
<p>不太可能让开发或Appops在重启前，</p>
<p>先手工将出错现场所有数据备份一下，</p>
<p>所以最好在kill脚本之前调用dump，</p>
<p>进行自动备份，这样就不会有人为疏忽。</p>
<a id="more"></a>
<h1 id="dump脚本示例"><a href="#dump脚本示例" class="headerlink" title="dump脚本示例"></a>dump脚本示例</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/java</span><br><span class="line">OUTPUT_HOME=~/output</span><br><span class="line">DEPLOY_HOME=`dirname <span class="variable">$0</span>`</span><br><span class="line">HOST_NAME=`hostname`</span><br><span class="line"></span><br><span class="line">DUMP_PIDS=`ps  --no-heading -C java -f --width 1000 | grep <span class="string">"<span class="variable">$DEPLOY_HOME</span>"</span> |awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$DUMP_PIDS</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"The server <span class="variable">$HOST_NAME</span> is not started!"</span></span><br><span class="line">    <span class="built_in">exit</span> 1;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">DUMP_ROOT=<span class="variable">$OUTPUT_HOME</span>/dump</span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DUMP_ROOT</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir <span class="variable">$DUMP_ROOT</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">DUMP_DATE=`date +%Y%m%d%H%M%S`</span><br><span class="line">DUMP_DIR=<span class="variable">$DUMP_ROOT</span>/dump-<span class="variable">$DUMP_DATE</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$DUMP_DIR</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir <span class="variable">$DUMP_DIR</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"Dumping the server <span class="variable">$HOST_NAME</span> ...\c"</span></span><br><span class="line"><span class="keyword">for</span> PID <span class="keyword">in</span> <span class="variable">$DUMP_PIDS</span> ; <span class="keyword">do</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jstack <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jstack-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jinfo <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jinfo-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jstat -gcutil <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jstat-gcutil-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jstat -gccapacity <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jstat-gccapacity-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jmap <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jmap-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jmap -heap <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jmap-heap-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="variable">$JAVA_HOME</span>/bin/jmap -histo <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/jmap-histo-<span class="variable">$PID</span>.dump 2&gt;&amp;1</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="keyword">if</span> [ -r /usr/sbin/lsof ]; <span class="keyword">then</span></span><br><span class="line">        /usr/sbin/lsof -p <span class="variable">$PID</span> &gt; <span class="variable">$DUMP_DIR</span>/lsof-<span class="variable">$PID</span>.dump</span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [ -r /usr/bin/sar ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/sar &gt; <span class="variable">$DUMP_DIR</span>/sar.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -r /usr/bin/uptime ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/uptime &gt; <span class="variable">$DUMP_DIR</span>/uptime.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -r /usr/bin/free ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/free -t &gt; <span class="variable">$DUMP_DIR</span>/free.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -r /usr/bin/vmstat ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/vmstat &gt; <span class="variable">$DUMP_DIR</span>/vmstat.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -r /usr/bin/mpstat ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/mpstat &gt; <span class="variable">$DUMP_DIR</span>/mpstat.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -r /usr/bin/iostat ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/iostat &gt; <span class="variable">$DUMP_DIR</span>/iostat.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -r /bin/netstat ]; <span class="keyword">then</span></span><br><span class="line">/bin/netstat &gt; <span class="variable">$DUMP_DIR</span>/netstat.dump</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">".\c"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"OK!"</span></span><br></pre></td></tr></table></figure>
<p>具体语句示例<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">###########################################################################################</span></span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jstack 30965 &gt; /opt/wxOpenServer/jstack-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jinfo 30965 &gt; /opt/wxOpenServer/jinfo-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jstat -gcutil 30965 &gt; /opt/wxOpenServer/jstat-gcutil-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jstat -gccapacity 30965 &gt; /opt/wxOpenServer/jstat-gccapacity-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jmap 30965 &gt; /opt/wxOpenServer/jmap-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jmap -heap 30965 &gt; /opt/wxOpenServer/jmap-heap-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/java/jdk1.6.0_45/bin/jmap -histo 30965 &gt; /opt/wxOpenServer/jmap-histo-30965.dump 2&gt;&amp;1;</span><br><span class="line">/usr/sbin/lsof -p 30965 &gt; /opt/wxOpenServer/lsof-30965.dump;</span><br><span class="line"><span class="comment">###########################################################################################</span></span><br></pre></td></tr></table></figure></p>
<p>lsof输出各列信息的意义如下：<br>COMMAND：进程的名称</p>
<p>PID：进程标识符</p>
<p>USER：进程所有者</p>
<p>FD：文件描述符，应用程序通过文件描述符识别该文件。如cwd、txt等</p>
<p>TYPE：文件类型，如DIR、REG等</p>
<p>DEVICE：指定磁盘的名称</p>
<p>SIZE：文件的大小</p>
<p>NODE：索引节点（文件在磁盘上的标识）</p>
<p>NAME：打开文件的确切名称</p>
<p>lsof <code>which httpd</code> //那个进程在使用apache的可执行文件</p>
<p>lsof /etc/passwd //那个进程在占用/etc/passwd</p>
<p>lsof /dev/hda6 //那个进程在占用hda6</p>
<p>lsof /dev/cdrom //那个进程在占用光驱</p>
<p>lsof -c sendmail //查看sendmail进程的文件使用情况</p>
<p>lsof -c courier -u ^zahn //显示出那些文件被以courier打头的进程打开，但是并不属于用户zahn</p>
<p>lsof -p 30297 //显示那些文件被pid为30297的进程打开</p>
<p>lsof -D /tmp 显示所有在/tmp文件夹中打开的instance和文件的进程。但是symbol文件并不在列</p>
<p>lsof -u1000 //查看uid是100的用户的进程的文件使用情况</p>
<p>lsof -utony //查看用户tony的进程的文件使用情况</p>
<p>lsof -u^tony //查看不是用户tony的进程的文件使用情况(^是取反的意思)</p>
<p>lsof -i //显示所有打开的端口</p>
<p>lsof -i:80 //显示所有打开80端口的进程</p>
<p>lsof -i -U //显示所有打开的端口和UNIX domain文件</p>
<p>lsof -i UDP@[url]<a href="http://www.akadia.com:123" target="_blank" rel="noopener">www.akadia.com:123</a> //显示那些进程打开了到<a href="http://www.akadia.com的UDP的123(ntp)端口的链接" target="_blank" rel="noopener">www.akadia.com的UDP的123(ntp)端口的链接</a></p>
<p>lsof -i <a href="mailto:tcp@ohaha.ks.edu.tw" target="_blank" rel="noopener">tcp@ohaha.ks.edu.tw</a>:ftp -r //不断查看目前ftp连接的情况(-r，lsof会永远不断的执行，直到收到中断信号,+r，lsof会一直执行，直到没有档案被显示,缺省是15s刷新)</p>
<p>lsof -i <a href="mailto:tcp@ohaha.ks.edu.tw" target="_blank" rel="noopener">tcp@ohaha.ks.edu.tw</a>:ftp -n //lsof -n 不将IP转换为hostname，缺省是不加上-n参数</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>linux many open file问题排查</title>
    <url>/posts/5618a78c.html</url>
    <content><![CDATA[<h1 id="lsof查询many-open-file等问题"><a href="#lsof查询many-open-file等问题" class="headerlink" title="lsof查询many open file等问题"></a>lsof查询many open file等问题</h1><h3 id="1、netstat显示的tcp连接数正常"><a href="#1、netstat显示的tcp连接数正常" class="headerlink" title="1、netstat显示的tcp连接数正常"></a>1、netstat显示的tcp连接数正常</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[imhtp@im2-wx-kf2 ~]$ netstat -n | awk <span class="string">'/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state) print key,"\t",state[key]&#125;'</span></span><br><span class="line">TIME_WAIT    8481</span><br><span class="line">CLOSE_WAIT   322</span><br><span class="line">FIN_WAIT2    43</span><br><span class="line">ESTABLISHED      144</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2、ss-s显示大量的closed连接"><a href="#2、ss-s显示大量的closed连接" class="headerlink" title="2、ss -s显示大量的closed连接"></a>2、ss -s显示大量的closed连接</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[imhtp@im2-wx-kf2 ~]$ ss -s</span><br><span class="line">Total: 707 (kernel 766)</span><br><span class="line">TCP:   8483 (estab 130, closed 7910, orphaned 0, synrecv 0, timewait 7896/0), ports 685</span><br><span class="line"></span><br><span class="line">Transport Total     IP        IPv6</span><br><span class="line">*     766       -         -</span><br><span class="line">RAW   0         0         0</span><br><span class="line">UDP   10        6         4</span><br><span class="line">TCP   573       13        560</span><br><span class="line">INET      583       19        564</span><br><span class="line">FRAG      0         0         0</span><br></pre></td></tr></table></figure>
<p>上面信息说明存在socket fd泄漏，那么用lsof命令检查系统sock的文件句柄。closed 7910，很多socket是处于closed状态。</p>
<h3 id="3、lsof-grep-sock"><a href="#3、lsof-grep-sock" class="headerlink" title="3、lsof | grep sock"></a>3、lsof | grep sock</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[imhtp@im2-wx-kf2 ~]$ lsof | grep sock</span><br><span class="line">java       1029   imhtp   36u     sock                0,6        0t0   7121949 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java       1773   imhtp   36u     sock                0,6        0t0     13282 can'</span>t identify protocol</span><br><span class="line">java       2747   imhtp   36u     sock                0,6        0t0 129765023 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java       7070   imhtp   36u     sock                0,6        0t0   9465828 can'</span>t identify protocol</span><br><span class="line">java       7681   imhtp   36u     sock                0,6        0t0 268478565 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java       7681   imhtp  192u     unix 0xffff88004ac89080        0t0 268479492 socket</span></span><br><span class="line"><span class="string">java      12545   imhtp   38u     sock                0,6        0t0 187396984 can'</span>t identify protocol</span><br><span class="line">java      12545   imhtp  190u     unix 0xffff880233f7b3c0        0t0 187400250 socket</span><br><span class="line">java      14216   imhtp   36u     sock                0,6        0t0 106323858 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      14216   imhtp  130u     unix 0xffff880235e539c0        0t0 106324660 socket</span></span><br><span class="line"><span class="string">java      16615   imhtp   36u     sock                0,6        0t0  34219267 can'</span>t identify protocol</span><br><span class="line">java      16615   imhtp  145u     unix 0xffff88023924e080        0t0  34219975 socket</span><br><span class="line">java      16870   imhtp   38u     sock                0,6        0t0 198357475 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      16870   imhtp   56u     unix 0xffff8802392c7c80        0t0 198358088 socket</span></span><br><span class="line"><span class="string">java      16870   imhtp   65u     unix 0xffff8802392c7c80        0t0 198358088 socket</span></span><br><span class="line"><span class="string">java      16870   imhtp   66u     unix 0xffff8802392c7c80        0t0 198358088 socket</span></span><br><span class="line"><span class="string">java      17021   imhtp   36u     sock                0,6        0t0 213679956 can'</span>t identify protocol</span><br><span class="line">java      19405   imhtp   36u     sock                0,6        0t0 177291674 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      22165   imhtp   36u     sock                0,6        0t0 271476844 can'</span>t identify protocol</span><br><span class="line">java      22165   imhtp   40u     unix 0xffff88004aea26c0        0t0 271477354 socket</span><br><span class="line">java      30738   imhtp   36u     sock                0,6        0t0 269955359 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      30738   imhtp   41u     sock                0,6        0t0 271839241 can'</span>t identify protocol</span><br><span class="line">java      30738   imhtp   42u     sock                0,6        0t0 271839255 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      30738   imhtp   43u     sock                0,6        0t0 271839242 can'</span>t identify protocol</span><br><span class="line">java      30738   imhtp   44u     sock                0,6        0t0 271839253 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      30738   imhtp   46u     sock                0,6        0t0 271839257 can'</span>t identify protocol</span><br><span class="line">java      30738   imhtp   47u     sock                0,6        0t0 271839256 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      30738   imhtp   51u     sock                0,6        0t0 271839258 can'</span>t identify protocol</span><br><span class="line">java      30738   imhtp   53u     sock                0,6        0t0 271839259 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      30738   imhtp   60u     sock                0,6        0t0 271839248 can'</span>t identify protocol</span><br><span class="line">java      30738   imhtp   61u     sock                0,6        0t0 271839260 can<span class="string">'t identify protocol</span></span><br><span class="line"><span class="string">java      30738   imhtp  124u     unix 0xffff88004aea2cc0        0t0 270139880 socket</span></span><br><span class="line"><span class="string">java      31781   imhtp   36u     sock                0,6        0t0 207958180 can'</span>t identify protocol</span><br></pre></td></tr></table></figure>
<p>可以发现，Name列的值为“an’t identify protocol”，socket找不到打开的文件。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>ntp 时间同步</title>
    <url>/posts/b3b5b23f.html</url>
    <content><![CDATA[<p>假设有3台服务器</p>
<ol>
<li><p>192.168.1.10（ntp服务端）</p>
</li>
<li><p>192.168.1.11（ntp客户端）</p>
</li>
<li><p>192.168.1.12（ntp客户端）</p>
</li>
</ol>
<a id="more"></a> 
<h1 id="ntp-服务端"><a href="#ntp-服务端" class="headerlink" title="ntp 服务端"></a>ntp 服务端</h1><blockquote>
<p>/etc/ntp.conf</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注释原有的server</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 第一种：读取远端服务器时钟</span></span><br><span class="line">server 远端IP</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 第二种：以本机时钟为准。注意：不是127.0.0.1，而是127.127.1.0</span></span><br><span class="line">server 127.127.1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果启用了chronyd，需要禁用 chronyd 否则 ntpd 配置开机启动会不生效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看是否开机启动</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl is-enabled chronyd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo systemctl <span class="built_in">disable</span> chronyd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机启动</span></span><br><span class="line">sudo systemctl enable ntpd</span><br><span class="line">sudo systemctl start ntpd</span><br><span class="line">sudo systemctl restart ntpd</span><br><span class="line">systemctl status ntpd</span><br><span class="line">ntpq -p</span><br><span class="line">ntpstat</span><br></pre></td></tr></table></figure>
<h1 id="ntp-客户端"><a href="#ntp-客户端" class="headerlink" title="ntp 客户端"></a>ntp 客户端</h1><p>分别在<code>192.168.1.11</code>、<code>192.168.1.12</code>做以下配置</p>
<blockquote>
<p>/etc/ntp.conf</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注释原有的server</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置允许NTP Server时间服务器主动修改本机的时间</span></span><br><span class="line">restrict 192.168.1.10 nomodify notrap noquery</span><br><span class="line"><span class="meta">#</span><span class="bash"> 读取内网ntp服务器时间</span></span><br><span class="line">server 192.168.1.10</span><br><span class="line"></span><br><span class="line">sudo systemctl start ntpd;</span><br><span class="line">sudo systemctl restart ntpd;</span><br><span class="line">sudo systemctl enable ntpd;</span><br><span class="line">systemctl status ntpd;</span><br><span class="line">ntpq -p;</span><br><span class="line">ntpstat;</span><br></pre></td></tr></table></figure>
<p>查看状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[yl@192.168.1.11 home]# ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> 192.168.1.10    LOCAL(0)         6 u   46   64    3    0.622  -158833   0.014</span><br><span class="line"> </span><br><span class="line">[yl@192.168.1.11 home]# ntpstat</span><br><span class="line">synchronised to NTP server (192.168.1.10) at stratum 7</span><br><span class="line">   time correct to within 20 ms</span><br><span class="line">   polling server every 128 s</span><br></pre></td></tr></table></figure>
<p>说明配置成功</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ntp</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh无密码登录</title>
    <url>/posts/6402dc33.html</url>
    <content><![CDATA[<p>主控节点设置<code>ssh</code>无密码跳转到受控节点的信任关系</p>
<p>假设有3台服务器</p>
<ul>
<li><p>主控服务器</p>
<ul>
<li>192.168.123.1</li>
</ul>
</li>
<li><p>受控服务器</p>
<ul>
<li>192.168.123.2</li>
<li>192.168.123.3</li>
</ul>
</li>
</ul>
<p>其中<code>192.168.123.1</code>需要无密码登录到<code>192.168.123.2</code>和<code>192.168.123.3</code></p>
<p>即在<code>192.168.123.1</code>上执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -p22 user@192.168.123.2</span><br></pre></td></tr></table></figure>
<p>可以无密码登录到192.168.123.2</p>
<a id="more"></a>
<h1 id="主控服务器生成密钥"><a href="#主控服务器生成密钥" class="headerlink" title="主控服务器生成密钥"></a>主控服务器生成密钥</h1><blockquote>
<p>192.168.123.1</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>会在用户目录下生成<code>.ssh</code>目录和<code>id_rsa</code>私钥文件、<code>id_rsa.pub</code>公钥文件</p>
<h1 id="拷贝私钥到受控服务器"><a href="#拷贝私钥到受控服务器" class="headerlink" title="拷贝私钥到受控服务器"></a>拷贝私钥到受控服务器</h1><ol>
<li>在不知道受控服务器密码的情况下</li>
</ol>
<blockquote>
<p>在用户目录下新建<code>.ssh/authorized_keys</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果没有.ssh目录，手动创建</span></span><br><span class="line">cd ~</span><br><span class="line">mkdir .ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果没有authorized_keys文件，手动创建一个</span></span><br><span class="line">cd .ssh</span><br><span class="line">touch authorized_keys</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将主控服务器生成的id_rsa.pub公钥追加到authorized_keys</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat -n ~/.ssh/主控_id_rsa.pub authorized_keys</span></span><br></pre></td></tr></table></figure>
<p>注意：这样就将公钥内容追加到authorized_keys中了，然后需要配置权限，否则SSH不会工作的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将.ssh目录的权限为700</span></span><br><span class="line">cd ~</span><br><span class="line">chmod -R 700 .ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将authorized_keys目录的权限为600</span></span><br><span class="line">cd ~/.ssh</span><br><span class="line">chmod -R 600 authorized_keys</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>知道受控服务器密码的情况下</li>
</ol>
<blockquote>
<p>192.168.123.1</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">ssh-copy-id -i .ssh/id_rsa.pub -p22 user@192.168.123.2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 查看端口是否被占用</title>
    <url>/posts/d03adf2b.html</url>
    <content><![CDATA[<p><strong>查询哪个进程在监听端口</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">netstat -anop | grep 8080</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">lsof -i:8080</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>netstat</tag>
        <tag>lsof</tag>
      </tags>
  </entry>
  <entry>
    <title>监控 Java 应用信息</title>
    <url>/posts/8d68f4e0.html</url>
    <content><![CDATA[<h1 id="信息输出"><a href="#信息输出" class="headerlink" title="信息输出"></a>信息输出</h1><blockquote>
<p>主要输出CPU、内存、线程、链接等使用情况</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">[yl@yl-test ~]$ curl http://localhost:8080/moniter-java.sh -s | sh</span></span><br><span class="line">[yl@yl-test ~]$ sh moniter-java.sh</span><br><span class="line"></span><br><span class="line">==================== 2020-06-01 10:57:09 ====================</span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line">     USER STIME | %CPU  %MEM thrd | conn dbLn | lsnPorts:conn:wait   |   PID | path</span><br><span class="line">     root Apr30 |  0.0   1.5   21 |           |                      |  1394 |</span><br><span class="line">    imhtp May28 |  0.0   5.1   38 |           |                      | 14510 | /opt/timer/data-job.jar</span><br><span class="line">    imhtp May08 |  0.0   5.5   36 |   10    3 | 20880:5:0            |  1484 | /opt/ds-service/project/ds-service.jar</span><br><span class="line"></span><br><span class="line">    imhtp May18 |  0.0  11.4   37 |    1    0 | 8021                 |  1171 | /opt/xmt/tomcat/</span><br><span class="line"></span><br><span class="line">    imhtp Apr30 |  0.0   5.4   17 |   19    0 | 2080:19:0 40540      |  2613 | /opt/zookeeper/zookeeper-3.4.10.jar</span><br><span class="line">==================== 2020-06-01 10:57:09 ====================</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="查询脚本"><a href="#查询脚本" class="headerlink" title="查询脚本"></a>查询脚本</h1><blockquote>
<p>moniter-java.sh</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># to moniter the java applications</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"==================== <span class="variable">$(date "+%F %T")</span> ===================="</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#declare -A aPid aUser aCpu aMem aStime aThrd aDbln aConn aPort aJar</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">markTHR</span></span>()&#123;</span><br><span class="line">  <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$2</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$&#123;2%.*&#125;</span>"</span> -ge <span class="string">"<span class="variable">$1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">"\033[1;31m%<span class="variable">$&#123;3&#125;</span>s\033[0m"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">"%<span class="variable">$&#123;3&#125;</span>s"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">markConn</span></span>()&#123;</span><br><span class="line">  awk <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    len=(20&gt;length($0)) ? 20-length($0) : 0;</span></span><br><span class="line"><span class="string">    if(!length($0))</span></span><br><span class="line"><span class="string">      $1="";</span></span><br><span class="line"><span class="string">    for(i=1;i&lt;=NF;i++)&#123;</span></span><br><span class="line"><span class="string">      if($i~/^u/)</span></span><br><span class="line"><span class="string">        printf "\033[1;32m%s\033[0m",$i;</span></span><br><span class="line"><span class="string">      else if($i~/:/)</span></span><br><span class="line"><span class="string">        printf "\033[1;34m%s\033[0m",$i;</span></span><br><span class="line"><span class="string">      else</span></span><br><span class="line"><span class="string">        printf "%s",$i;</span></span><br><span class="line"><span class="string">      printf "%s"," ";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    printf "%"len"s","";</span></span><br><span class="line"><span class="string">  &#125;'</span> &lt;&lt;&lt; <span class="string">"$*"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">myPrtf</span></span>()&#123;</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"%9s "</span> <span class="string">"<span class="variable">$1</span>"</span>                        <span class="comment"># process username</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"%5s |"</span> <span class="string">"<span class="variable">$2</span>"</span>                       <span class="comment"># process start time</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$(markTHR 10 "$3" 5)</span> "</span> <span class="string">"<span class="variable">$3</span>"</span>       <span class="comment"># process cpu usage</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$(markTHR 10 "$4" 5)</span> "</span> <span class="string">"<span class="variable">$4</span>"</span>       <span class="comment"># process memory usage</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$(markTHR 100 "$5" 4)</span> | "</span> <span class="string">"<span class="variable">$5</span>"</span>     <span class="comment"># process threads count</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$(markTHR 100 "$6" 4)</span> "</span>   <span class="string">"<span class="variable">$6</span>"</span>     <span class="comment"># network connections count</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$(markTHR 30  "$7" 4)</span> | "</span> <span class="string">"<span class="variable">$7</span>"</span>     <span class="comment"># database connections count</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$(markConn $8)</span>| "</span>                  <span class="comment"># listen ports</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"%5s | "</span> <span class="string">"<span class="variable">$&#123;9&#125;</span>"</span>                    <span class="comment"># process id</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"%s\n"</span> <span class="string">"<span class="variable">$&#123;10&#125;</span>"</span>                      <span class="comment"># jar file/path</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getBasicCmd=$(/bin/ps -eo pid,user,pcpu,pmem,stime,nlwp,args 2&gt;/dev/null | grep [j]ava | awk <span class="string">'&#123;</span></span><br><span class="line"><span class="string">  print "aPid["NR"]="$1";";</span></span><br><span class="line"><span class="string">  print "aUser["$1"]="$2";";</span></span><br><span class="line"><span class="string">  print "aCpu["$1"]="$3";";</span></span><br><span class="line"><span class="string">  print "aMem["$1"]="$4";";</span></span><br><span class="line"><span class="string">  print "aStime["$1"]="$5";";</span></span><br><span class="line"><span class="string">  print "aThrd["$1"]="$6";";</span></span><br><span class="line"><span class="string">  &#125;'</span> 2&gt;/dev/null)</span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$getBasicCmd</span></span><br><span class="line"></span><br><span class="line">getPortCmd=$(/bin/netstat -natup | grep -E <span class="string">'java|-'</span> | awk <span class="string">'</span></span><br><span class="line"><span class="string">  $1~/^tcp/&#123;</span></span><br><span class="line"><span class="string">    gsub(/[^:]*:/,"",$4);</span></span><br><span class="line"><span class="string">    gsub(/[^:]*:/,"",$5);</span></span><br><span class="line"><span class="string">    gsub(/\/.*$/,"",$7);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $1~/^udp/&#123;</span></span><br><span class="line"><span class="string">    gsub(/[^:]*:/,"",$4);</span></span><br><span class="line"><span class="string">    $4=($1~/^udp/)?"u"$4:$4;</span></span><br><span class="line"><span class="string">    gsub(/[^:]*:/,"",$5);</span></span><br><span class="line"><span class="string">    $7=($5=="*")?$6:$7;</span></span><br><span class="line"><span class="string">    gsub(/\/.*$/,"",$7);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $5=="*" &amp;&amp; $7~/[0-9]+/&#123;</span></span><br><span class="line"><span class="string">    lsnArr[$7,$4]++;</span></span><br><span class="line"><span class="string">    conn[$7]=0;</span></span><br><span class="line"><span class="string">    dblink[$7]=0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $5!="*" &amp;&amp; $7~/[0-9]+/&#123;</span></span><br><span class="line"><span class="string">    conn[$7]++;</span></span><br><span class="line"><span class="string">    if(!dblink[$7])</span></span><br><span class="line"><span class="string">      dblink[$7]=0;</span></span><br><span class="line"><span class="string">    if($5==1521)</span></span><br><span class="line"><span class="string">      dblink[$7]++;</span></span><br><span class="line"><span class="string">    if(lsnArr[$7,$4])</span></span><br><span class="line"><span class="string">      workArr[$7,$4]++;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $7=="-"&#123;</span></span><br><span class="line"><span class="string">    tw[$4]++;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  END&#123;</span></span><br><span class="line"><span class="string">    for(i in lsnArr)&#123;</span></span><br><span class="line"><span class="string">      split(i,lsn,SUBSEP);</span></span><br><span class="line"><span class="string">      if(lsnArr[i])&#123;</span></span><br><span class="line"><span class="string">        workCount = (workArr[i]) ? ":"workArr[i] : ":"0;</span></span><br><span class="line"><span class="string">        waitCount = (tw[lsn[2]]) ? ":"tw[lsn[2]] : ":"0;</span></span><br><span class="line"><span class="string">        if(workCount==":0" &amp;&amp; waitCount==":0")&#123;</span></span><br><span class="line"><span class="string">          workCount="";</span></span><br><span class="line"><span class="string">          waitCount="";</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        workStr[lsn[1]]=workStr[lsn[1]]" "lsn[2] workCount waitCount;</span></span><br><span class="line"><span class="string">        twCount[lsn[1]] += tw[lsn[2]];</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    for(i in conn)&#123;</span></span><br><span class="line"><span class="string">      print "aConn["i"]="conn[i]";";</span></span><br><span class="line"><span class="string">      print "aWait["i"]="twCount[i]";";</span></span><br><span class="line"><span class="string">      print "aDbln["i"]="dblink[i]";";</span></span><br><span class="line"><span class="string">      print "aPort["i"]=\""workStr[i]"\";";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;'</span> 2&gt;/dev/null)</span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$getPortCmd</span></span><br><span class="line"></span><br><span class="line">getJarCmd=$(/usr/sbin/lsof -nc java | grep <span class="string">'.jar$'</span> | grep -v <span class="string">'/jre/lib/'</span> | awk <span class="string">'</span></span><br><span class="line"><span class="string">  /bootstrap.jar/&#123;</span></span><br><span class="line"><span class="string">    gsub(/bin\/bootstrap.jar/,"",$9);</span></span><br><span class="line"><span class="string">    jar[$2]=$9;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  /jetty/ &amp;&amp; /start/&#123;</span></span><br><span class="line"><span class="string">    jar[$2]=$9;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  /knity/&#123;</span></span><br><span class="line"><span class="string">    jar[$2]=$9;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  !/bootstrap.jar/ &amp;&amp; !jar[$2]&#123;</span></span><br><span class="line"><span class="string">    jar[$2]=$9;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  END&#123;</span></span><br><span class="line"><span class="string">    for(i in jar)&#123;</span></span><br><span class="line"><span class="string">      print "aJar["i"]="jar[i]";";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;'</span> 2&gt;/dev/null)</span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$getJarCmd</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"\033[1m%9s %5s |%5s %5s %4s | %4s %4s | %-20s | %5s | %s\033[0m\n"</span> \</span><br><span class="line">       <span class="string">"USER"</span> <span class="string">"STIME"</span> <span class="string">"%CPU"</span> <span class="string">"%MEM"</span> <span class="string">"thrd"</span> <span class="string">"conn"</span> <span class="string">"dbLn"</span> <span class="string">"lsnPorts:conn:wait"</span> <span class="string">"PID"</span> <span class="string">"path"</span></span><br><span class="line"><span class="built_in">unset</span> PID</span><br><span class="line"><span class="built_in">declare</span> -i PID</span><br><span class="line"><span class="keyword">for</span> PID <span class="keyword">in</span> <span class="variable">$&#123;aPid[*]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  myPrtf <span class="string">"<span class="variable">$&#123;aUser[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aStime[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aCpu[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aMem[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aThrd[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aConn[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aDbln[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;aPort[$PID]&#125;</span>"</span> <span class="string">"<span class="variable">$PID</span>"</span> <span class="string">"<span class="variable">$&#123;aJar[$PID]&#125;</span>"</span></span><br><span class="line"><span class="keyword">done</span> | sort -t<span class="string">'|'</span> -k6 | sed <span class="string">'n;n;n;n;G'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"==================== <span class="variable">$(date "+%F %T")</span> ===================="</span></span><br><span class="line"><span class="built_in">echo</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>硬盘挂载和扩容</title>
    <url>/posts/9d08c77f.html</url>
    <content><![CDATA[<h1 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h1><h2 id="查看磁盘列表"><a href="#查看磁盘列表" class="headerlink" title="查看磁盘列表"></a>查看磁盘列表</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo fdisk -l</span><br><span class="line">sudo lsblk -o name,mountpoint,size,uuid</span><br></pre></td></tr></table></figure>
<h2 id="格式化磁盘"><a href="#格式化磁盘" class="headerlink" title="格式化磁盘"></a>格式化磁盘</h2><h3 id="查看系统支持的文件系统格式"><a href="#查看系统支持的文件系统格式" class="headerlink" title="查看系统支持的文件系统格式"></a>查看系统支持的文件系统格式</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo cat /etc/filesystems</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="据结果进行格式化"><a href="#据结果进行格式化" class="headerlink" title="据结果进行格式化"></a>据结果进行格式化</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo mkfs.xfs /dev/sdc</span><br></pre></td></tr></table></figure>
<h2 id="永久挂载磁盘"><a href="#永久挂载磁盘" class="headerlink" title="永久挂载磁盘"></a>永久挂载磁盘</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/fstab</span><br><span class="line"></span><br><span class="line">/dev/sdc /app   xfs     defaults   0 0</span><br></pre></td></tr></table></figure>
<h2 id="即时生效挂载信息"><a href="#即时生效挂载信息" class="headerlink" title="即时生效挂载信息"></a>即时生效挂载信息</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure>
<h2 id="取消挂载"><a href="#取消挂载" class="headerlink" title="取消挂载"></a>取消挂载</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo umount /dev/sdc</span><br></pre></td></tr></table></figure>
<h1 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h1><h2 id="PV-物理卷"><a href="#PV-物理卷" class="headerlink" title="PV 物理卷"></a>PV 物理卷</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[yl@app ~]$ sudo pvs</span><br><span class="line">  PV         VG      Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sda2  centos  lvm2 a--  &lt;48.00g 4.00m</span><br><span class="line">  /dev/sdb   vg_data lvm2 a--  &lt;50.00g    0</span><br></pre></td></tr></table></figure>
<h2 id="VG-卷组：卷组是用来管理物理卷的集合"><a href="#VG-卷组：卷组是用来管理物理卷的集合" class="headerlink" title="VG 卷组：卷组是用来管理物理卷的集合"></a>VG 卷组：卷组是用来管理物理卷的集合</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[yl@app ~]$ sudo vgs</span><br><span class="line">  VG      <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  centos    1   2   0 wz--n- &lt;48.00g 4.00m</span><br><span class="line">  vg_data   1   1   0 wz--n- &lt;50.00g    0</span><br></pre></td></tr></table></figure>
<h2 id="LV-逻辑卷"><a href="#LV-逻辑卷" class="headerlink" title="LV 逻辑卷"></a>LV 逻辑卷</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[yl@app ~]$ sudo lvs</span><br><span class="line">  LV      VG      Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root    centos  -wi-ao----  45.99g</span><br><span class="line">  swap    centos  -wi-ao----   2.00g</span><br><span class="line">  lv_data vg_data -wi-ao---- &lt;50.00g</span><br></pre></td></tr></table></figure>
<h2 id="挂载-LV-逻辑卷"><a href="#挂载-LV-逻辑卷" class="headerlink" title="挂载 LV 逻辑卷"></a>挂载 LV 逻辑卷</h2><h3 id="创建-LV-逻辑卷的文件系统"><a href="#创建-LV-逻辑卷的文件系统" class="headerlink" title="创建 LV 逻辑卷的文件系统"></a>创建 LV 逻辑卷的文件系统</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkfs.xfs /dev/vg_data/lv_data</span><br></pre></td></tr></table></figure>
<h3 id="创建挂载目录"><a href="#创建挂载目录" class="headerlink" title="创建挂载目录"></a>创建挂载目录</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir /data</span><br></pre></td></tr></table></figure>
<h3 id="挂载-1"><a href="#挂载-1" class="headerlink" title="挂载"></a>挂载</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mount /dev/vg_data/lv_data /data</span><br></pre></td></tr></table></figure>
<h3 id="df-h查询是否挂载信息"><a href="#df-h查询是否挂载信息" class="headerlink" title="df -h查询是否挂载信息"></a>df -h查询是否挂载信息</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/dev/mapper/vg_data-lv_data 52399108 31733300 20665808   61% /data</span><br></pre></td></tr></table></figure>
<h3 id="新硬盘，创建-PV-物理卷"><a href="#新硬盘，创建-PV-物理卷" class="headerlink" title="新硬盘，创建 PV 物理卷"></a>新硬盘，创建 PV 物理卷</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo pvcreate /dev/sdc</span><br></pre></td></tr></table></figure>
<h3 id="扩容-VG-卷组"><a href="#扩容-VG-卷组" class="headerlink" title="扩容 VG 卷组"></a>扩容 VG 卷组</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vgextend vg_data /dev/sdc</span><br></pre></td></tr></table></figure>
<h3 id="扩容-LV-卷"><a href="#扩容-LV-卷" class="headerlink" title="扩容 LV 卷"></a>扩容 LV 卷</h3><ul>
<li><p>扩容指定空间到 LV</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -r 选项一定要加，这样可以将逻辑卷和文件系统一起扩容</span></span><br><span class="line">sudo lvextend -r -L +100G /dev/vg_data/lv_data</span><br></pre></td></tr></table></figure>
</li>
<li><p>扩容剩余全部空间</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo lvextend -r -l +100%FREE /dev/vg_data/lv_data</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>挂载</tag>
        <tag>扩容</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat 使用注意事项</title>
    <url>/posts/d13f7d34.html</url>
    <content><![CDATA[<h1 id="setenv-sh"><a href="#setenv-sh" class="headerlink" title="setenv.sh"></a>setenv.sh</h1><p>在<code>Tomcat</code>的<code>bin</code>目录下添加<code>setenv.sh</code>文件，在启动<code>Tomcat</code>的时候，该脚本会被自动执行。一般在该脚本配置一些环境变量、<code>JVM</code>参数等</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2017-12-18 12:15:52</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-12-18 12:16:03</span></span><br><span class="line"><span class="comment"># 本文件放到 Tomcat 的 bin 目录下</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_144</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$CLASSPATH</span></span><br><span class="line"></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">$JAVA_OPT</span> -Xss256k"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="Tomcat-安全配置相关"><a href="#Tomcat-安全配置相关" class="headerlink" title="Tomcat 安全配置相关"></a>Tomcat 安全配置相关</h1><h2 id="删除默认项目"><a href="#删除默认项目" class="headerlink" title="删除默认项目"></a>删除默认项目</h2><p>删除 <code>webapps</code>目录下的 <code>docs</code>、<code>examples</code>、<code>host-manager</code>、<code>manager</code>、<code>ROOT</code>文件夹</p>
<h2 id="tomcat-users-xml"><a href="#tomcat-users-xml" class="headerlink" title="tomcat-users.xml"></a>tomcat-users.xml</h2><p>保持默认，不要添加帐号等信息</p>
<h2 id="server-xml"><a href="#server-xml" class="headerlink" title="server.xml"></a>server.xml</h2><blockquote>
<p>port 改成 -1</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Server</span> <span class="attr">port</span>=<span class="string">"-1"</span> <span class="attr">shutdown</span>=<span class="string">"SHUTDOWN"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置线程池最小、最大值</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">maxThreads=&quot;1024&quot; minSpareThreads=&quot;5&quot;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注释掉 AJP Connector</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /&gt; --&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>autoDeploy 改成 false</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span>  <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"false"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>禁用日志输出</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"</span></span><br><span class="line"><span class="comment">               prefix="localhost_access_log" suffix=".txt"</span></span><br><span class="line"><span class="comment">               pattern="%h %l %u %t &amp;quot;%r&amp;quot; %s %b" /&gt; --&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>context 配置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"localhost"</span>  <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">"/outserver"</span> <span class="attr">docBase</span>=<span class="string">"../../project/outserver.war"</span> <span class="attr">privileged</span>=<span class="string">"true"</span> <span class="attr">reloadable</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样配置，outserver.war会解压到tomcat/webapps下，也就是在webapps下生成outserver文件夹。</p>
<p>docBase应该指定对应的war包全路径，不应该指定路径，比如：../../project/outserver。</p>
<p>如果指定路径，有可以出现war包不会解压，到时项目没有更新的问题</p>
<h1 id="server-xml-1"><a href="#server-xml-1" class="headerlink" title="server.xml"></a>server.xml</h1><p>修改了一个配置名</p>
<p>低版本是compressableMimeType —&gt; 高版本是compressibleMimeType</p>
]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
  </entry>
  <entry>
    <title>Tomcat 启动脚本</title>
    <url>/posts/e22f47ab.html</url>
    <content><![CDATA[<h1 id="Tomcat-启动脚本"><a href="#Tomcat-启动脚本" class="headerlink" title="Tomcat 启动脚本"></a>Tomcat 启动脚本</h1><h2 id="主-Tomcat-应用部署-Tomcat"><a href="#主-Tomcat-应用部署-Tomcat" class="headerlink" title="主 Tomcat + 应用部署 Tomcat"></a>主 Tomcat + 应用部署 Tomcat</h2><blockquote>
<p>应用部署方式</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[txrd@host-148 /data/]$ tree -af </span><br><span class="line">.</span><br><span class="line">├── ./apache-tomcat-8.5.57</span><br><span class="line">│  └── ./bin</span><br><span class="line">│  └── ./conf</span><br><span class="line">│  └── ./lib</span><br><span class="line">│  └── ./temp</span><br><span class="line">│  └── ./webapps</span><br><span class="line">│  └── ./work</span><br><span class="line">├── ./szim</span><br><span class="line">│ └── ./project </span><br><span class="line">│   └── ./szim.war </span><br><span class="line">│ └── ./tomcat </span><br><span class="line">│  └── ./conf</span><br><span class="line">│  └── ./temp</span><br><span class="line">│  └── ./webapps</span><br><span class="line">│  └── ./work</span><br><span class="line">│ └── ./logs.sh </span><br><span class="line">│ └── ./restart.sh</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>restart.sh</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Author: YL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Date:   2020-08-17 09:33:43</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Last Modified by:   YL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @Last Modified time: 2020-08-17 14:50:43</span></span><br><span class="line"></span><br><span class="line">export LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Tomcat 主目录</span></span><br><span class="line">export CATALINA_HOME=/data/apache-tomcat-8.5.57</span><br><span class="line"></span><br><span class="line">cd `dirname $0`</span><br><span class="line">PROJECT_HOME=`pwd`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Tomcat 应用部署目录</span></span><br><span class="line">TC_HOME="$PROJECT_HOME/tomcat"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Tomcat 应用部署目录</span></span><br><span class="line">export CATALINA_BASE=$TC_HOME</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> crontab 检测日记文件</span></span><br><span class="line">TC_STDOUT_FILE="$TC_HOME/logs/stdout.out"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检测 Tomcat 是否启动（进程ID）</span></span><br><span class="line">PIDS=`ps -ef | grep $TC_HOME | grep -v grep | awk '&#123;print $2&#125;'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行检测的用户IP地址</span></span><br><span class="line">WHO_AM_I=`who am i | awk '&#123;print $5&#125;' | sed 's/(//g' | sed 's/)//g'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">===========================================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> JVM Configuration</span></span><br><span class="line"><span class="meta">#</span><span class="bash">===========================================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_251</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$CLASSPATH</span></span></span><br><span class="line">JVM_OPTS="$JVM_OPTS -server -Xms1g -Xmx1g -Xss256k"</span><br><span class="line">JVM_OPTS="$JVM_OPTS -XX:+DisableExplicitGC -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+ParallelRefProcEnabled"</span><br><span class="line">JVM_OPTS="$JVM_OPTS -Xloggc:$TC_HOME/logs/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M"</span><br><span class="line">JVM_OPTS="$JVM_OPTS -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$TC_HOME/logs/dump-`date +"%Y-%m-%d"`.hprof"</span><br><span class="line">JVM_OPTS="$JVM_OPTS -Dspring.profiles.active=pro"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Tomcat 启动参数配置</span></span><br><span class="line">export JAVA_OPTS="$JVM_OPTS"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">===========================================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">log</span> file delete</span></span><br><span class="line"><span class="meta">#</span><span class="bash">===========================================================================================</span></span><br><span class="line">function cleanLog()&#123;</span><br><span class="line">    ls -d -t $TC_HOME/logs/catalina.*.log | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t $TC_HOME/logs/host-manager.*.log | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t $TC_HOME/logs/localhost.*.log | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t $TC_HOME/logs/manager.*.log | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t $TC_HOME/logs/*.hprof | tail -n +3 | xargs rm -rf</span><br><span class="line">&#125;</span><br><span class="line">cleanLog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 优雅停机</span></span><br><span class="line">function gracefulShutdown()&#123;</span><br><span class="line">    if [ -z "$PIDS" ]; then</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME does not started!" | tee -a $STDOUT_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME kill $PIDS begining" | tee -a $STDOUT_FILE</span><br><span class="line">        for PID in $PIDS ; do</span><br><span class="line">            kill $PID &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">            echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME kill $PID success" | tee -a $STDOUT_FILE</span><br><span class="line">        done</span><br><span class="line"></span><br><span class="line">        # 检测是否停机成功</span><br><span class="line">        COUNT=0</span><br><span class="line">        while [ $COUNT -lt 1 ]; do</span><br><span class="line">            sleep 1</span><br><span class="line">            COUNT=1</span><br><span class="line">            for PID in $PIDS ; do</span><br><span class="line">                PID_EXIST=`ps -f -p $PID | grep java`</span><br><span class="line">                if [ -n "$PID_EXIST" ]; then</span><br><span class="line">                    COUNT=0</span><br><span class="line">                    break</span><br><span class="line">                fi</span><br><span class="line">            done</span><br><span class="line">        done</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function operate()&#123;</span><br><span class="line">  if [[ "$1" = "kill" ]] ; then</span><br><span class="line">    gracefulShutdown</span><br><span class="line">  elif [[ "$1" = "start" ]]; then</span><br><span class="line">    cd $CATALINA_HOME/bin</span><br><span class="line">    sh startup.sh</span><br><span class="line">  else</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME is not support $1" | tee -a $TC_STDOUT_FILE</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">if [[ "$1" = "" || "$1" = "restart" || "$1" = "start" ]] ; then</span><br><span class="line">  operate kill</span><br><span class="line">  echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME starting" | tee -a $TC_STDOUT_FILE</span><br><span class="line">  operate start</span><br><span class="line">elif [[ "$1" = "kill" ]] ; then</span><br><span class="line">  operate kill</span><br><span class="line">elif [[ "$1" = "check" ]] ; then</span><br><span class="line">  if [[ "$PIDS" = "" ]] ; then</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME starting" &gt;&gt; $TC_STDOUT_FILE</span><br><span class="line">    operate start</span><br><span class="line">  else</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME pid $PIDS" &gt;&gt; $TC_STDOUT_FILE</span><br><span class="line">  fi</span><br><span class="line">else</span><br><span class="line">  echo "[$(date '+%Y-%m-%d %H:%M:%S')]-[$1]-[$WHO_AM_I] $TC_HOME is not support $1" | tee -a $TC_STDOUT_FILE</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h2 id="单应用部署-Tomcat"><a href="#单应用部署-Tomcat" class="headerlink" title="单应用部署 Tomcat"></a>单应用部署 Tomcat</h2><blockquote>
<p>应用部署方式</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[txrd@host-148 /data/szim]$ tree -af </span><br><span class="line">.</span><br><span class="line">├── ./project </span><br><span class="line">│ └── ./szim.war </span><br><span class="line">└── ./tomcat </span><br><span class="line">│ └── ./bin</span><br><span class="line">│ └── ./conf</span><br><span class="line">│ └── ./lib</span><br><span class="line">│ └── ./temp</span><br><span class="line">│ └── ./webapps</span><br><span class="line">│ └── ./work</span><br><span class="line">├── ./logs.sh </span><br><span class="line">├── ./restart.sh</span><br></pre></td></tr></table></figure>
<blockquote>
<p>restart.sh</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2020-08-17 09:33:43</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-08-17 14:50:43</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tomcat 主目录</span></span><br><span class="line"><span class="built_in">export</span> CATALINA_HOME=/data/apache-tomcat-8.5.57</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line">PROJECT_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tomcat 应用部署目录</span></span><br><span class="line">TC_HOME=<span class="string">"<span class="variable">$PROJECT_HOME</span>/tomcat"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tomcat 应用部署目录</span></span><br><span class="line"><span class="built_in">export</span> CATALINA_BASE=<span class="variable">$TC_HOME</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab 检测日记文件</span></span><br><span class="line">TC_STDOUT_FILE=<span class="string">"<span class="variable">$TC_HOME</span>/logs/stdout.out"</span></span><br><span class="line"><span class="comment"># 检测 Tomcat 是否启动（进程ID）</span></span><br><span class="line">PIDS=`ps -ef | grep <span class="variable">$TC_HOME</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行检测的用户IP地址</span></span><br><span class="line">WHO_AM_I=`who am i | awk <span class="string">'&#123;print $5&#125;'</span> | sed <span class="string">'s/(//g'</span> | sed <span class="string">'s/)//g'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#===========================================================================================</span></span><br><span class="line"><span class="comment"># JVM Configuration</span></span><br><span class="line"><span class="comment">#===========================================================================================</span></span><br><span class="line"><span class="comment"># export JAVA_HOME=/usr/java/jdk1.8.0_251</span></span><br><span class="line"><span class="comment"># export PATH=$JAVA_HOME/bin:$PATH</span></span><br><span class="line"><span class="comment"># export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$CLASSPATH</span></span><br><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -server -Xms1g -Xmx1g -Xss256k"</span></span><br><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -XX:+DisableExplicitGC -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+ParallelRefProcEnabled"</span></span><br><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Xloggc:<span class="variable">$TC_HOME</span>/logs/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M"</span></span><br><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=<span class="variable">$TC_HOME</span>/logs/dump-`date +"</span>%Y-%m-%d<span class="string">"`.hprof"</span></span><br><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Dspring.profiles.active=pro"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tomcat 启动参数配置</span></span><br><span class="line"><span class="built_in">export</span> JAVA_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#===========================================================================================</span></span><br><span class="line"><span class="comment"># log file delete</span></span><br><span class="line"><span class="comment">#===========================================================================================</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">cleanLog</span></span>()&#123;</span><br><span class="line">    ls -d -t <span class="variable">$TC_HOME</span>/logs/catalina.*.<span class="built_in">log</span> | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t <span class="variable">$TC_HOME</span>/logs/host-manager.*.<span class="built_in">log</span> | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t <span class="variable">$TC_HOME</span>/logs/localhost.*.<span class="built_in">log</span> | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t <span class="variable">$TC_HOME</span>/logs/manager.*.<span class="built_in">log</span> | tail -n +3 | xargs rm -rf</span><br><span class="line">    ls -d -t <span class="variable">$TC_HOME</span>/logs/*.hprof | tail -n +3 | xargs rm -rf</span><br><span class="line">&#125;</span><br><span class="line">cleanLog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 优雅停机</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">gracefulShutdown</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$PIDS</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> does not started!"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> kill <span class="variable">$PIDS</span> begining"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br><span class="line">        <span class="keyword">for</span> PID <span class="keyword">in</span> <span class="variable">$PIDS</span> ; <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">kill</span> <span class="variable">$PID</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> kill <span class="variable">$PID</span> success"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检测是否停机成功</span></span><br><span class="line">        COUNT=0</span><br><span class="line">        <span class="keyword">while</span> [ <span class="variable">$COUNT</span> -lt 1 ]; <span class="keyword">do</span></span><br><span class="line">            sleep 1</span><br><span class="line">            COUNT=1</span><br><span class="line">            <span class="keyword">for</span> PID <span class="keyword">in</span> <span class="variable">$PIDS</span> ; <span class="keyword">do</span></span><br><span class="line">                PID_EXIST=`ps -f -p <span class="variable">$PID</span> | grep java`</span><br><span class="line">                <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$PID_EXIST</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                    COUNT=0</span><br><span class="line">                    <span class="built_in">break</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">operate</span></span>()&#123;</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"kill"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">    gracefulShutdown</span><br><span class="line">  <span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"start"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$CATALINA_HOME</span>/bin</span><br><span class="line">    sh startup.sh</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> is not support <span class="variable">$1</span>"</span> | tee -a <span class="variable">$TC_STDOUT_FILE</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">""</span> || <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"restart"</span> || <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"start"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">  operate <span class="built_in">kill</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> starting"</span> | tee -a <span class="variable">$TC_STDOUT_FILE</span></span><br><span class="line">  operate start</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"kill"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">  operate <span class="built_in">kill</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"check"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$PIDS</span>"</span> = <span class="string">""</span> ]] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> starting"</span> &gt;&gt; <span class="variable">$TC_STDOUT_FILE</span></span><br><span class="line">    operate start</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> pid <span class="variable">$PIDS</span>"</span> &gt;&gt; <span class="variable">$TC_STDOUT_FILE</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]-[<span class="variable">$1</span>]-[<span class="variable">$WHO_AM_I</span>] <span class="variable">$TC_HOME</span> is not support <span class="variable">$1</span>"</span> | tee -a <span class="variable">$TC_STDOUT_FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sh restart.sh start <span class="comment"># 重启</span></span><br><span class="line">sh restart.sh <span class="comment"># 重启</span></span><br><span class="line">sh restart.sh restart <span class="comment"># 重启</span></span><br><span class="line">sh restart.sh check <span class="comment"># 检测服务是否启动，没有启动，则启动之，否则不做其他操作</span></span><br><span class="line">sh restart.sh <span class="built_in">kill</span> <span class="comment"># kill掉已启动的服务进程</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
  </entry>
  <entry>
    <title>Windows 默认软件不可用的问题</title>
    <url>/posts/d6d2f549.html</url>
    <content><![CDATA[<p><img src="/posts/d6d2f549/20190522103754.jpg" alt="我是图片"></p>
<a id="more"></a>
<p>在命令行中执行以下命名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Get-AppXPackage -AllUsers | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>要关闭360等软件，开启Windows Defender、防火墙</p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 默认软件不可用的问题</title>
    <url>/posts/d6d2f549.html</url>
    <content><![CDATA[<blockquote>
<p>命令打开服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">services.msc</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>命令行打开网络中心<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ncpa.cpl</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>软链<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立软链接</span></span><br><span class="line">mklink /D <span class="string">"C:\Program Files\VanDyke Software\Clients"</span> <span class="string">"D:\Program Files\SecureCRT"</span></span><br><span class="line"><span class="comment"># 删除软链接</span></span><br><span class="line">rmdir <span class="string">"C:\Program Files\VanDyke Software\Clients"</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>kill 进程</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查询进程号</span></span><br><span class="line">netstat -ano | findstr 8080</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasklist</span></span><br><span class="line">taskkill /pid 12804 -t -f</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper 清理日志文件</title>
    <url>/posts/c0bbcacd.html</url>
    <content><![CDATA[<h1 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2017-11-01 08:59:34</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-11-01 09:36:09</span></span><br><span class="line"><span class="comment"># 此文件放到 zookeeper 的 bin 目录下</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">NODE_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># snapshot</span></span><br><span class="line">NODE_DATA_DIR=<span class="variable">$NODE_HOME</span>/data/version-2</span><br><span class="line"><span class="comment"># snapshot log</span></span><br><span class="line">NODE_LOG_DIR=<span class="variable">$NODE_HOME</span>/logs/version-2</span><br><span class="line"><span class="comment"># zk log</span></span><br><span class="line">NODE_LOGS=<span class="variable">$NODE_HOME</span>/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义了删除对应目录中的文件，保留最新的 count 个文件，可以将他写到 crontab 中</span></span><br><span class="line">count=3</span><br><span class="line">count=$[<span class="variable">$count</span>+1]</span><br><span class="line">ls -t <span class="variable">$NODE_LOG_DIR</span>/<span class="built_in">log</span>.* | tail -n +<span class="variable">$count</span> | xargs rm -f</span><br><span class="line">ls -t <span class="variable">$NODE_DATA_DIR</span>/snapshot.* | tail -n +<span class="variable">$count</span> | xargs rm -f</span><br><span class="line">ls -t <span class="variable">$NODE_LOGS</span>/zookeeper.log.* | tail -n +<span class="variable">$count</span> | xargs rm -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># date pattern</span></span><br><span class="line">DATE_PATTERN=<span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>]"</span></span><br><span class="line">STDOUT_FILE=<span class="variable">$NODE_LOGS</span>/stdout.log</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$DATE_PATTERN</span> clear logs success"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
  </entry>
  <entry>
    <title>zookeeper重启脚本</title>
    <url>/posts/6c1ad93d.html</url>
    <content><![CDATA[<h1 id="restart"><a href="#restart" class="headerlink" title="restart"></a>restart</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2017-06-29 09:00:10</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-11-01 09:37:30</span></span><br><span class="line"><span class="comment"># 此文件放到 zookeeper 的 bin 目录下</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line"></span><br><span class="line">./zkServer.sh stop</span><br><span class="line">sleep 3</span><br><span class="line">./zkServer.sh start</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
  </entry>
  <entry>
    <title>zookeeper 启动脚本</title>
    <url>/posts/af01b9a2.html</url>
    <content><![CDATA[<h1 id="start"><a href="#start" class="headerlink" title="start"></a>start</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2017-06-28 10:23:20</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-11-01 09:37:41</span></span><br><span class="line"><span class="comment"># 此文件放到 zookeeper 的 bin 目录下</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line">NODE_BIN_DIR=`<span class="built_in">pwd</span>`</span><br><span class="line">NODE_LIB_DIR=<span class="variable">$NODE_BIN_DIR</span>/../lib/</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">NODE_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir logs dir</span></span><br><span class="line">NODE_DATA_LOG_DIR=`sed <span class="string">'/dataLogDir/!d;s/.*=//'</span> conf/zoo.cfg | tr -d <span class="string">'\r'</span>`</span><br><span class="line">NODE_LOGS_DIR=<span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$NODE_DATA_LOG_DIR</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  NODE_LOGS_DIR=<span class="variable">$NODE_DATA_LOG_DIR</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  NODE_LOGS_DIR=<span class="variable">$NODE_HOME</span>/logs</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$NODE_LOGS_DIR</span> ]; <span class="keyword">then</span></span><br><span class="line">  mkdir <span class="variable">$NODE_LOGS_DIR</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">STDOUT_FILE=<span class="variable">$NODE_LOGS_DIR</span>/stdout.log</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>] NODE_BIN_DIR: <span class="variable">$NODE_BIN_DIR</span>"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid</span></span><br><span class="line">NODE_PID=`ps -ef | grep <span class="string">"<span class="variable">$NODE_LIB_DIR</span>"</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$NODE_PID</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>] ERROR: The <span class="variable">$NODE_LIB_DIR</span> already started! pid: <span class="variable">$NODE_PID</span>"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port</span></span><br><span class="line">NODE_PORT=`sed <span class="string">'/clientPort/!d;s/.*=//'</span> conf/zoo.cfg | tr -d <span class="string">'\r'</span>`</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$NODE_PORT</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  NODE_PORT_COUNT=`netstat -tln | grep <span class="variable">$NODE_PORT</span> | wc -l`</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$NODE_PORT_COUNT</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>] ERROR: The <span class="variable">$NODE_LIB_DIR</span> port <span class="variable">$NODE_PORT</span> already used!"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># starting</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$NODE_BIN_DIR</span></span><br><span class="line">./zkServer.sh start</span><br><span class="line"></span><br><span class="line">NODE_PID=`ps -ef | grep <span class="string">"<span class="variable">$NODE_LIB_DIR</span>"</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[<span class="variable">$(date '+%Y-%m-%d %H:%M:%S')</span>] The <span class="variable">$NODE_LIB_DIR</span> started OK! pid: <span class="variable">$NODE_PID</span>"</span> | tee -a <span class="variable">$STDOUT_FILE</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
  </entry>
  <entry>
    <title>zookeeper stop脚本</title>
    <url>/posts/7bd064dc.html</url>
    <content><![CDATA[<h1 id="stop"><a href="#stop" class="headerlink" title="stop"></a>stop</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2017-06-29 09:00:00</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-11-01 09:37:49</span></span><br><span class="line"><span class="comment"># 此文件放到 zookeeper 的 bin 目录下</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line">./zkServer.sh stop</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
  </entry>
  <entry>
    <title>zookeeper evn 环境变量配置脚本</title>
    <url>/posts/57428144.html</url>
    <content><![CDATA[<h1 id="zookeeper-env"><a href="#zookeeper-env" class="headerlink" title="zookeeper-env"></a>zookeeper-env</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2017-10-31 10:27:16</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-11-01 09:36:43</span></span><br><span class="line"><span class="comment"># 此文件放到 zookeeper 的 conf 目录下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># java env</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_131</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> JVMFLAGS=<span class="string">"-Xms1536m -Xmx1536m <span class="variable">$JVMFLAGS</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">NODE_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># zookeeper env</span></span><br><span class="line">ZOO_LOG_DIR=<span class="variable">$NODE_HOME</span>/logs</span><br><span class="line">ZOO_LOG4J_PROP=<span class="string">"INFO,ROLLINGFILE"</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
  </entry>
  <entry>
    <title>zookeeper 命令使用</title>
    <url>/posts/56017bc5.html</url>
    <content><![CDATA[<h1 id="zkCli-sh"><a href="#zkCli-sh" class="headerlink" title="zkCli.sh"></a>zkCli.sh</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定ip和端口，zkCli.sh默认进入的是2181端口</span></span><br><span class="line"><span class="comment"># sh zkCli.sh -server localhsot:2170</span></span><br><span class="line">sh zkCli.sh -server ip:port</span><br></pre></td></tr></table></figure>
<h2 id="zkServer-sh"><a href="#zkServer-sh" class="headerlink" title="zkServer.sh"></a>zkServer.sh</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">sh zkServer.sh start</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">sh zkServersh status</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
      <tags>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 部署 apisix 网关</title>
    <url>/posts/1666f2bf.html</url>
    <content><![CDATA[<h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><table>
<thead>
<tr>
<th>服务</th>
<th>路径</th>
<th>ip:port</th>
</tr>
</thead>
<tbody>
<tr>
<td>etcd</td>
<td>/data/docker/etcd</td>
<td>192.123.2.1:2379、2380</td>
</tr>
<tr>
<td>etcd</td>
<td>/data/docker/etcd</td>
<td>192.123.2.2:2379、2380</td>
</tr>
<tr>
<td>etcd</td>
<td>/data/docker/etcd</td>
<td>192.123.2.3:2379、2380</td>
</tr>
<tr>
<td>keepalived</td>
<td>/etc/keepalived</td>
<td>主机IP：192.123.2.1，浮动IP：192.123.2.100</td>
</tr>
<tr>
<td>keepalived</td>
<td>/etc/keepalived</td>
<td>主机IP：192.123.2.2，浮动IP：192.123.2.100</td>
</tr>
<tr>
<td>keepalived</td>
<td>/etc/keepalived</td>
<td>主机IP：192.123.2.3，浮动IP：192.123.2.100</td>
</tr>
<tr>
<td>apisix</td>
<td>/data/docker/apisix</td>
<td>192.123.2.1:9080、9443、3305</td>
</tr>
<tr>
<td>apisix</td>
<td>/data/docker/apisix</td>
<td>192.123.2.1:9080、9443、3305</td>
</tr>
<tr>
<td>apisix</td>
<td>/data/docker/apisix</td>
<td>192.123.2.1:9080、9443、3305</td>
</tr>
<tr>
<td>apisix-dashboard</td>
<td>/data/docker/apisix-dashboard</td>
<td>192.123.2.1:9000</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h1 id="部署-etcd"><a href="#部署-etcd" class="headerlink" title="部署 etcd"></a>部署 etcd</h1><h2 id="单机"><a href="#单机" class="headerlink" title="单机"></a>单机</h2><blockquote>
<p>/data/docker/etcd/docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/coreos/etcd:v3.5.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">etcd</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2379:2379"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/etcd_data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ENABLE_V2=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ALLOW_NONE_AUTHENTICATION=yes</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_DATA_DIR=/etcd_data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h2 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h2><blockquote>
<p>192.123.2.1</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/coreos/etcd:v3.5.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">etcd</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/etcd_data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ENABLE_V2=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ROOT_PASSWORD=etcd-cluster@2021</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_NAME=etcd-01</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_DATA_DIR=/etcd_data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ADVERTISE_CLIENT_URLS=http://192.123.2.1:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.123.2.1:2380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER=etcd-01=http://192.123.2.1:2380,etcd-02=http://192.123.2.2:2380,etcd-03=http://192.123.2.3:2380</span></span><br><span class="line">      <span class="comment"># 如果是第一次初始化集群，需要使用new，否则使用existing</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER_STATE=new</span></span><br><span class="line">      <span class="comment"># - ETCD_INITIAL_CLUSTER_STATE=existing</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2379:2379"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2380:2380"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>192.123.2.2</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/coreos/etcd:v3.5.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">etcd</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/etcd_data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ENABLE_V2=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ROOT_PASSWORD=etcd-cluster@2021</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_NAME=etcd-02</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_DATA_DIR=/etcd_data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ADVERTISE_CLIENT_URLS=http://192.123.2.2:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.123.2.2:2380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER=etcd-01=http://192.123.2.1:2380,etcd-02=http://192.123.2.2:2380,etcd-03=http://192.123.2.3:2380</span></span><br><span class="line">      <span class="comment"># 如果是第一次初始化集群，需要使用new，否则使用existing</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER_STATE=new</span></span><br><span class="line">      <span class="comment"># - ETCD_INITIAL_CLUSTER_STATE=existing</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2379:2379"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2380:2380"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>192.123.2.3</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/coreos/etcd:v3.5.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">etcd</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/etcd_data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ENABLE_V2=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ROOT_PASSWORD=etcd-cluster@2021</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_NAME=etcd-03</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_DATA_DIR=/etcd_data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_ADVERTISE_CLIENT_URLS=http://192.123.2.3:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.123.2.3:2380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER=etcd-01=http://192.123.2.1:2380,etcd-02=http://192.123.2.2:2380,etcd-03=http://192.123.2.3:2380</span></span><br><span class="line">      <span class="comment"># 如果是第一次初始化集群，需要使用new，否则使用existing</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ETCD_INITIAL_CLUSTER_STATE=new</span></span><br><span class="line">      <span class="comment"># - ETCD_INITIAL_CLUSTER_STATE=existing</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2379:2379"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"2380:2380"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h1 id="部署-keepalived"><a href="#部署-keepalived" class="headerlink" title="部署 keepalived"></a>部署 keepalived</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo yum install keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启开机启动</span></span><br><span class="line">sudo systemctl enable keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用开机启动</span></span><br><span class="line">sudo systemctl disable keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line">sudo systemctl start keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启服务</span></span><br><span class="line">sudo systemctl restart keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看状态</span></span><br><span class="line">sudo systemctl status keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止服务</span></span><br><span class="line">sudo systemctl stop keepalived</span><br></pre></td></tr></table></figure>
<h2 id="keepalived-conf-配置"><a href="#keepalived-conf-配置" class="headerlink" title="keepalived.conf 配置"></a>keepalived.conf 配置</h2><p>路径：<code>/etc/keepalived/keepalived.conf</code></p>
<p>配置说明</p>
<ul>
<li>state 取值<ul>
<li>MASTER：master 节点</li>
<li>BACKUP：backup节点</li>
</ul>
</li>
<li>interface：宿主机的网卡名</li>
<li>mcast_src_ip：宿主机的 ip</li>
<li>priority：master 节点的 priority 值需要大于 backup 节点的值</li>
<li>virtual_ipaddress：浮动 IP</li>
</ul>
<blockquote>
<p>192.123.2.1</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    mcast_src_ip 192.123.2.1</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 101</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass keepavlied_apisix</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.123.2.100</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>192.123.2.2</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    mcast_src_ip 192.123.2.2</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass keepavlied_apisix</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.123.2.100</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>192.123.2.3</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    mcast_src_ip 192.123.2.3</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass keepavlied_apisix</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.123.2.100</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="检测脚本"><a href="#检测脚本" class="headerlink" title="检测脚本"></a>检测脚本</h2><blockquote>
<p>/etc/keepalived/alive-check.sh</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 定时检测服务是否启动来判断需要 start keepalived 还是 stop keepalived。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以此来预防服务出现异常，但是浮动 IP 漂移到了异常服务节点的问题。</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置 crontab 定时任务：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> * * * * * /etc/keepalived/alive-check.sh &gt; /dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> * * * * * /etc/keepalived/alive-check.sh &gt;&gt; /etc/keepalived/stdout.log 2&gt;&amp;1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取 openresty 服务第一个进程 Id</span></span><br><span class="line">openresty_pid=`ps aux | grep /usr/local/openresty | grep -v grep | awk 'NR==1&#123;print $2&#125;'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取 keepalived 服务第一个进程 Id</span></span><br><span class="line">keepalived_pid=`ps aux | grep /usr/sbin/keepalived | grep -v grep | awk 'NR==1&#123;print $2&#125;'`</span><br><span class="line"></span><br><span class="line">if [[ "$openresty_pid" == "" ]]; then</span><br><span class="line">    # 如果 openresty 服务未启动，stop keepalived 服务</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')] stop keepalived ---&gt; openresty_pid: $openresty_pid, keepalived_pid: $keepalived_pid"</span><br><span class="line">    /usr/bin/systemctl stop keepalived</span><br><span class="line">else</span><br><span class="line">    # 如果 openresty 已启动，且 keepalived 服务未启动，则 start keepalived 服务</span><br><span class="line">    if [[ "$keepalived_pid" == "" ]]; then</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] start keepalived ---&gt; openresty_pid: $openresty_pid, keepalived_pid: $keepalived_pid"</span><br><span class="line">        /usr/bin/systemctl start keepalived</span><br><span class="line">    fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置定时任务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* * * * * /etc/keepalived/alive-check.sh &gt;&gt; /etc/keepalived/stdout.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h1 id="部署-apisix"><a href="#部署-apisix" class="headerlink" title="部署 apisix"></a>部署 apisix</h1><h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><blockquote>
<p>/data/docker/apisix/docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">apisix:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/apisix:2.9-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">apisix</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9080:9080"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9443:9443"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3305:3305"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/config.yaml:/usr/local/apisix/conf/config.yaml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logs:/usr/local/apisix/logs</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"TZ=Asia/Shanghai"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h2 id="config-yaml"><a href="#config-yaml" class="headerlink" title="config.yaml"></a>config.yaml</h2><blockquote>
<p>/data/docker/apisix/conf/config.yaml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apisix:</span></span><br><span class="line">  <span class="comment"># 这里改成对应宿主机的 IP 即可，也可以不配置，集群中的节点 Id 不能重复</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">"192_123_2_1"</span></span><br><span class="line">  <span class="attr">node_listen:</span> <span class="number">9080</span></span><br><span class="line">  <span class="attr">enable_ipv6:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">stream_proxy:</span></span><br><span class="line">    <span class="attr">only:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">tcp:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx_config:</span></span><br><span class="line">  <span class="attr">stream_configuration_snippet:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">upstream</span> <span class="string">mysqld</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">hash</span> <span class="string">$remote_addr</span> <span class="string">consistent;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">192.123</span><span class="number">.2</span><span class="number">.1</span><span class="string">:9003</span> <span class="string">weight=5</span> <span class="string">max_fails=1</span> <span class="string">fail_timeout=30s</span> <span class="string">max_conns=1000;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">192.123</span><span class="number">.2</span><span class="number">.2</span><span class="string">:9001</span> <span class="string">weight=5</span> <span class="string">max_fails=1</span> <span class="string">fail_timeout=30s</span> <span class="string">max_conns=1000;</span></span><br><span class="line">        <span class="string">server</span> <span class="number">192.123</span><span class="number">.2</span><span class="number">.3</span><span class="string">:9002</span> <span class="string">weight=5</span> <span class="string">max_fails=1</span> <span class="string">fail_timeout=30s</span> <span class="string">max_conns=1000;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">listen</span> <span class="number">3305</span><span class="string">;</span></span><br><span class="line">        <span class="string">proxy_connect_timeout</span> <span class="string">15s;</span></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">mysqld;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"http://192.123.2.1:2379"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"http://192.123.2.2:2379"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"http://192.123.2.3:2379"</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">"/apisix"</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里的 plugins 配置会覆盖 config-default.yml 的 plugins 配置，所以如果在这里配置</span></span><br><span class="line"><span class="comment"># 最好确定使用到的插件都配置了，最好把 default 配置拷贝过来，然后再追加自己需要开启的插件</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">real-ip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">client-control</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ext-plugin-pre-req</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zipkin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">request-id</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">fault-injection</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">serverless-pre-function</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">batch-requests</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cors</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ip-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ua-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">referer-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">uri-blocker</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">request-validation</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">openid-connect</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authz-casbin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">wolf-rbac</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hmac-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">basic-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jwt-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">key-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">consumer-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authz-keycloak</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">error-log-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">proxy-mirror</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">proxy-cache</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">proxy-rewrite</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">api-breaker</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limit-conn</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limit-count</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limit-req</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">node-status</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">gzip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">server-info</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">traffic-split</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">redirect</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">response-rewrite</span></span><br><span class="line">  <span class="comment"># - dubbo-proxy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">grpc-transcode</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sls-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tcp-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kafka-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">syslog</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">udp-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">log-rotate</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">example-plugin</span></span><br><span class="line">  <span class="comment"># - skywalking</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">serverless-post-function</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ext-plugin-post-req</span></span><br><span class="line"></span><br><span class="line"><span class="attr">plugin_attr:</span></span><br><span class="line">  <span class="attr">server-info:</span></span><br><span class="line">    <span class="attr">report_interval:</span> <span class="number">600</span></span><br><span class="line">    <span class="attr">report_ttl:</span> <span class="number">3600</span></span><br><span class="line">  <span class="attr">log-rotate:</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">    <span class="attr">max_kept:</span> <span class="number">7</span></span><br><span class="line">    <span class="attr">enable_compression:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h1 id="部署-apisix-dashboard"><a href="#部署-apisix-dashboard" class="headerlink" title="部署 apisix-dashboard"></a>部署 apisix-dashboard</h1><h2 id="docker-compose-yml-1"><a href="#docker-compose-yml-1" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><blockquote>
<p>/data/docker/apisix-dashboard/docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">apisix-dashboard:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/apisix-dashboard:2.8</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">apisix-dashboard</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./logs:/usr/local/apisix-dashboard/logs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9000:9000"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h2 id="conf-yml"><a href="#conf-yml" class="headerlink" title="conf.yml"></a>conf.yml</h2><blockquote>
<p>/data/docker/apisix-dashboard/conf/conf.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed to the Apache Software Foundation (ASF) under one or more</span></span><br><span class="line"><span class="comment"># contributor license agreements.  See the NOTICE file distributed with</span></span><br><span class="line"><span class="comment"># this work for additional information regarding copyright ownership.</span></span><br><span class="line"><span class="comment"># The ASF licenses this file to You under the Apache License, Version 2.0</span></span><br><span class="line"><span class="comment"># (the "License"); you may not use this file except in compliance with</span></span><br><span class="line"><span class="comment"># the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yamllint disable rule:comments-indentation</span></span><br><span class="line"><span class="attr">conf:</span></span><br><span class="line">  <span class="attr">listen:</span></span><br><span class="line">    <span class="comment"># host: 127.0.0.1     # the address on which the `Manager API` should listen.</span></span><br><span class="line">                          <span class="comment"># The default value is 0.0.0.0, if want to specify, please enable it.</span></span><br><span class="line">                          <span class="comment"># This value accepts IPv4, IPv6, and hostname.</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9000</span>            <span class="comment"># The port on which the `Manager API` should listen.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># ssl:</span></span><br><span class="line">  <span class="comment">#   host: 127.0.0.1     # the address on which the `Manager API` should listen for HTTPS.</span></span><br><span class="line">                          <span class="comment"># The default value is 0.0.0.0, if want to specify, please enable it.</span></span><br><span class="line">  <span class="comment">#   port: 9001            # The port on which the `Manager API` should listen for HTTPS.</span></span><br><span class="line">  <span class="comment">#   cert: "/tmp/cert/example.crt" # Path of your SSL cert.</span></span><br><span class="line">  <span class="comment">#   key:  "/tmp/cert/example.key"  # Path of your SSL key.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#allow_list:             # If we don't set any IP list, then any IP access is allowed by default.</span></span><br><span class="line">  <span class="comment">#  - 127.0.0.1           # The rules are checked in sequence until the first match is found.</span></span><br><span class="line">  <span class="comment">#  - ::1                 # In this example, access is allowed only for IPv4 network 127.0.0.1, and for IPv6 network ::1.</span></span><br><span class="line">                          <span class="comment"># It also support CIDR like 192.168.1.0/24 and 2001:0db8::/32</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">endpoints:</span>            <span class="comment"># supports defining multiple etcd host addresses for an etcd cluster</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http://192.123.2.1:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http://192.123.2.2:2379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">http://192.123.2.3:2379</span></span><br><span class="line">                          <span class="comment"># yamllint disable rule:comments-indentation</span></span><br><span class="line">                          <span class="comment"># etcd basic auth info</span></span><br><span class="line">    <span class="comment"># username: "root"    # ignore etcd username if not enable etcd auth</span></span><br><span class="line">    <span class="comment"># password: "123456"  # ignore etcd password if not enable etcd auth</span></span><br><span class="line">    <span class="attr">mtls:</span></span><br><span class="line">      <span class="attr">key_file:</span> <span class="string">""</span>          <span class="comment"># Path of your self-signed client side key</span></span><br><span class="line">      <span class="attr">cert_file:</span> <span class="string">""</span>         <span class="comment"># Path of your self-signed client side cert</span></span><br><span class="line">      <span class="attr">ca_file:</span> <span class="string">""</span>           <span class="comment"># Path of your self-signed ca cert, the CA is used to sign callers' certificates</span></span><br><span class="line">    <span class="comment"># prefix: /apisix       # apisix config's prefix in etcd, /apisix by default</span></span><br><span class="line">  <span class="attr">log:</span></span><br><span class="line">    <span class="attr">error_log:</span></span><br><span class="line">      <span class="attr">level:</span> <span class="string">warn</span>       <span class="comment"># supports levels, lower to higher: debug, info, warn, error, panic, fatal</span></span><br><span class="line">      <span class="attr">file_path:</span></span><br><span class="line">        <span class="string">logs/error.log</span>  <span class="comment"># supports relative path, absolute path, standard output</span></span><br><span class="line">                        <span class="comment"># such as: logs/error.log, /tmp/logs/error.log, /dev/stdout, /dev/stderr</span></span><br><span class="line">                        <span class="comment"># such as absolute path on Windows: winfile:///C:\error.log</span></span><br><span class="line">    <span class="attr">access_log:</span></span><br><span class="line">      <span class="attr">file_path:</span></span><br><span class="line">        <span class="string">logs/access.log</span>  <span class="comment"># supports relative path, absolute path, standard output</span></span><br><span class="line">                         <span class="comment"># such as: logs/access.log, /tmp/logs/access.log, /dev/stdout, /dev/stderr</span></span><br><span class="line">                         <span class="comment"># such as absolute path on Windows: winfile:///C:\access.log</span></span><br><span class="line">                         <span class="comment"># log example: 2020-12-09T16:38:09.039+0800    INFO    filter/logging.go:46    /apisix/admin/routes/r1 &#123;"status": 401, "host": "127.0.0.1:9000", "query": "asdfsafd=adf&amp;a=a", "requestId": "3d50ecb8-758c-46d1-af5b-cd9d1c820156", "latency": 0, "remoteIP": "127.0.0.1", "method": "PUT", "errs": []&#125;</span></span><br><span class="line">  <span class="attr">max_cpu:</span> <span class="number">0</span>             <span class="comment"># supports tweaking with the number of OS threads are going to be used for parallelism. Default value: 0 [will use max number of available cpu cores considering hyperthreading (if any)]. If the value is negative, is will not touch the existing parallelism profile.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line">  <span class="attr">secret:</span></span><br><span class="line">    <span class="string">secret</span>              <span class="comment"># secret for jwt token generation.</span></span><br><span class="line">                        <span class="comment"># <span class="doctag">NOTE:</span> Highly recommended to modify this value to protect `manager api`.</span></span><br><span class="line">                        <span class="comment"># if it's default value, when `manager api` start, it will generate a random string to replace it.</span></span><br><span class="line">  <span class="attr">expire_time:</span> <span class="number">3600</span>     <span class="comment"># jwt token expire time, in second</span></span><br><span class="line">  <span class="attr">users:</span>                <span class="comment"># yamllint enable rule:comments-indentation</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">username:</span> <span class="string">admin</span>   <span class="comment"># username and password for login `manager api`</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">username:</span> <span class="string">user</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">user</span></span><br><span class="line"></span><br><span class="line"><span class="attr">plugins:</span>                          <span class="comment"># plugin list (sorted in alphabetical order)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">api-breaker</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authz-keycloak</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">basic-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">batch-requests</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">consumer-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cors</span></span><br><span class="line">  <span class="comment"># - dubbo-proxy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">echo</span></span><br><span class="line">  <span class="comment"># - error-log-logger</span></span><br><span class="line">  <span class="comment"># - example-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">fault-injection</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">grpc-transcode</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hmac-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ip-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jwt-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">kafka-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">key-auth</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limit-conn</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limit-count</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">limit-req</span></span><br><span class="line">  <span class="comment"># - log-rotate</span></span><br><span class="line">  <span class="comment"># - node-status</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">openid-connect</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">proxy-cache</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">proxy-mirror</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">proxy-rewrite</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">redirect</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">referer-restriction</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">request-id</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">request-validation</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">response-rewrite</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">serverless-post-function</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">serverless-pre-function</span></span><br><span class="line">  <span class="comment"># - skywalking</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">sls-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">syslog</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tcp-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">udp-logger</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">uri-blocker</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">wolf-rbac</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zipkin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">server-info</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">traffic-split</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>apisix</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>apisix</tag>
        <tag>apisix-dashboard</tag>
        <tag>etcd</tag>
        <tag>keepalived</tag>
      </tags>
  </entry>
  <entry>
    <title>apisix 配置 etcd TLS</title>
    <url>/posts/5396d6c2.html</url>
    <content><![CDATA[<p>镜像：apisix:2.9-alpine</p>
<p>如果使用 etcd TLS，需要自己构建 openresty。</p>
<a id="more"></a>
<h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><p>进入 apisix 容器里面执行<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> alpine 系统</span></span><br><span class="line">apk add git</span><br><span class="line">apk add patch</span><br><span class="line">apk add perl</span><br><span class="line">apk add make</span><br><span class="line">apk add gcc</span><br><span class="line">apk add linux-headers</span><br><span class="line">apk add libc-dev</span><br><span class="line">apk add pcre-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> apk add openssl</span></span><br><span class="line">apk add openssl-dev</span><br><span class="line">apk add zlib-dev</span><br><span class="line">apk add build-base</span><br><span class="line">apk add sudo</span><br></pre></td></tr></table></figure></p>
<h1 id="构建-openresty-脚本"><a href="#构建-openresty-脚本" class="headerlink" title="构建 openresty 脚本"></a>构建 openresty 脚本</h1><p>进入 apisix 容器里面执行<br>使用脚本：<a href="https://github.com/api7/apisix-build-tools/blob/master/build-apisix-openresty.sh" target="_blank" rel="noopener">https://github.com/api7/apisix-build-tools/blob/master/build-apisix-openresty.sh</a></p>
<h1 id="使用-etcd-tls"><a href="#使用-etcd-tls" class="headerlink" title="使用 etcd tls"></a>使用 etcd tls</h1><blockquote>
<p>etcd tls 证书可以自己生成</p>
</blockquote>
<h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">apisix:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">apache/apisix:2.9-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">apisix</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">apisix</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9080:9080"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9443:9443"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/config.yaml/:/usr/local/apisix/conf/config.yaml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./ssl:/usr/local/apisix/ssl</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logs:/usr/local/apisix/logs</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"TZ=Asia/Shanghai"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h2 id="config-yaml"><a href="#config-yaml" class="headerlink" title="config.yaml"></a>config.yaml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apisix:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">"yl-mac"</span></span><br><span class="line">  <span class="attr">node_listen:</span> <span class="number">9080</span></span><br><span class="line">  <span class="attr">enable_ipv6:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="string">....</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">ssl_trusted_certificate:</span> <span class="string">/usr/local/apisix/ssl/etcd-ca.pem</span></span><br><span class="line"></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"https://192.123.2.1:2379"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"https://192.123.2.2:2379"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"https://192.123.2.3:2379"</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">"/apisix"</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">cert:</span> <span class="string">/usr/local/apisix/ssl/etcd.pem</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">/usr/local/apisix/ssl/etcd-key.pem</span></span><br><span class="line">    <span class="attr">verify:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>apisix</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>apisix</tag>
        <tag>etcd</tag>
      </tags>
  </entry>
  <entry>
    <title>apisix 使用</title>
    <url>/posts/cf6abfd1.html</url>
    <content><![CDATA[<h1 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h1><p>apisix：2.11.0</p>
<p>apisix-dashboard：2.10.1</p>
<a id="more"></a>
<h1 id="APISIX"><a href="#APISIX" class="headerlink" title="APISIX"></a>APISIX</h1><h2 id="内外网隔离"><a href="#内外网隔离" class="headerlink" title="内外网隔离"></a>内外网隔离</h2><p>新建一条<code>高级匹配条件</code>，使用<code>server_port</code>内置参数：</p>
<p><img src="/posts/cf6abfd1/Internal_and_external_network_isolation.png" alt></p>
<h2 id="配置-https"><a href="#配置-https" class="headerlink" title="配置 https"></a>配置 https</h2><blockquote>
<p>第一步：conf/config.yaml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apisix:</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">listen:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9443</span></span><br><span class="line">    <span class="attr">enable_http2:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># example.com 为默认证书的 sni</span></span><br><span class="line">    <span class="attr">fallback_sni:</span> <span class="string">example.com</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>第二步：上传 SSL 证书</p>
</blockquote>
<ol>
<li>可以通过接口上传<a href="https://apisix.apache.org/zh/docs/apisix/admin-api#ssl" target="_blank" rel="noopener">https://apisix.apache.org/zh/docs/apisix/admin-api#ssl</a></li>
<li>可以通过 dashboard 上传</li>
</ol>
<p><img src="/posts/cf6abfd1/ssl.png" alt></p>
<h2 id="配置-ETCD-TLS"><a href="#配置-ETCD-TLS" class="headerlink" title="配置 ETCD TLS"></a>配置 ETCD TLS</h2><blockquote>
<p>conf/config.yaml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apisix:</span></span><br><span class="line">  <span class="attr">config_center:</span> <span class="string">etcd</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">ssl_trusted_certificate:</span> <span class="string">/usr/local/apisix/ssl/etcd-ca.pem</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"https://etcd:2379"</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">"/apisix"</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="attr">cert:</span> <span class="string">/usr/local/apisix/ssl/etcd.pem</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">/usr/local/apisix/ssl/etcd-key.pem</span></span><br><span class="line">    <span class="attr">verify:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意</p>
</blockquote>
<ul>
<li><p>如果<code>verify=true</code>，需要自己为 Apache APISIX 构建 OpenResty</p>
<ul>
<li>参考<a href="https://github.com/api7/apisix-build-tools" target="_blank" rel="noopener">https://github.com/api7/apisix-build-tools</a></li>
<li><a href="apisix 配置 etcd TLS.md">apisix 配置 etcd TLS</a></li>
</ul>
</li>
<li><p>如果<code>verify=false</code>，则不需要</p>
</li>
</ul>
<h2 id="配置-gzip"><a href="#配置-gzip" class="headerlink" title="配置 gzip"></a>配置 gzip</h2><ol>
<li>第一种</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nginx_config:</span></span><br><span class="line">  <span class="attr">http_configuration_snippet:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">gzip</span>               <span class="string">on;</span></span><br><span class="line">    <span class="string">gzip_comp_level</span>    <span class="number">6</span><span class="string">;</span></span><br><span class="line">    <span class="string">gzip_min_length</span>    <span class="number">1000</span><span class="string">;</span></span><br><span class="line">    <span class="string">gzip_proxied</span>       <span class="string">expired</span> <span class="literal">no</span><span class="string">-cache</span> <span class="literal">no</span><span class="string">-store</span> <span class="string">private</span> <span class="string">auth;</span></span><br><span class="line">    <span class="string">gzip_types</span>         <span class="string">text/plain</span> <span class="string">text/html</span> <span class="string">text/css</span> <span class="string">text/xml</span> <span class="string">application/javascript</span> <span class="string">application/json;</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>第二种</li>
</ol>
<blockquote>
<p> 可以配置指定路由，也可以配置全局路由级别的。需要自己为 Apache APISIX 构建 OpenResty，参考<a href="https://github.com/api7/apisix-build-tools" target="_blank" rel="noopener">https://github.com/api7/apisix-build-tools</a></p>
</blockquote>
<ul>
<li>指定路由级别</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"gzip"</span>: &#123;</span><br><span class="line">    <span class="attr">"comp_level"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">"disable"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"min_length"</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="attr">"types"</span>: [</span><br><span class="line">      <span class="string">"text/css"</span>,</span><br><span class="line">      <span class="string">"text/html"</span>,</span><br><span class="line">      <span class="string">"text/plain"</span>,</span><br><span class="line">      <span class="string">"text/xml"</span>,</span><br><span class="line">      <span class="string">"application/json"</span>,</span><br><span class="line">      <span class="string">"application/javascript"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/posts/cf6abfd1/rule-gzip.png" alt></p>
<ul>
<li>全局路由级别</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"comp_level"</span>: <span class="number">6</span>,</span><br><span class="line">  <span class="attr">"disable"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"min_length"</span>: <span class="number">1000</span>,</span><br><span class="line">  <span class="attr">"types"</span>: [</span><br><span class="line">    <span class="string">"text/css"</span>,</span><br><span class="line">    <span class="string">"text/html"</span>,</span><br><span class="line">    <span class="string">"text/plain"</span>,</span><br><span class="line">    <span class="string">"text/xml"</span>,</span><br><span class="line">    <span class="string">"application/json"</span>,</span><br><span class="line">    <span class="string">"application/javascript"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/posts/cf6abfd1/global_rules_gzip.png" alt></p>
<h2 id="response-rewrite"><a href="#response-rewrite" class="headerlink" title="response-rewrite"></a>response-rewrite</h2><blockquote>
<p>配置全局插件，修改<code>server</code>响应头，避免暴露 apisix 服务版本</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;</span></span><br><span class="line">  <span class="attr">"disable":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line">  <span class="attr">"headers":</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">"server":</span> <span class="string">"20.21.0"</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p><img src="/posts/cf6abfd1/global_rules_response-rewrite.png" alt></p>
<blockquote>
<p>配置路由级别</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"response-rewrite": &#123;</span><br><span class="line">  "disable": false,</span><br><span class="line">  "headers": &#123;</span><br><span class="line">    "server": "20.21.0"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="禁用-node-status"><a href="#禁用-node-status" class="headerlink" title="禁用 node-status"></a>禁用 node-status</h2><blockquote>
<p>conf/config.yaml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="comment"># 注释掉改插件，或者删除</span></span><br><span class="line">  <span class="comment"># - node-status</span></span><br></pre></td></tr></table></figure>
<p>这样就不能通过 http(s)://example.com/apisix/status 查询 apisix 的状态信息了，或者通过<a href="https://apisix.apache.org/zh/docs/apisix/plugin-interceptors/" target="_blank" rel="noopener">interceptors</a>保护该接口。</p>
<h2 id="配置日志格式"><a href="#配置日志格式" class="headerlink" title="配置日志格式"></a>配置日志格式</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nginx_config:</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">access_log_format:</span> <span class="string">'&#123;"@timestamp":"$time_iso8601","host":"$hostname","server_ip":"$server_addr","client_ip":"$remote_addr","xff":"$http_x_forwarded_for","domain":"$host","url":"$uri","referer":"$http_referer","args":"$args","upstreamtime":"$upstream_response_time","responsetime":"$request_time","request_method":"$request_method","status":"$status","size":"$body_bytes_sent","request_length":"$request_length","protocol":"$server_protocol","upstreamhost":"$upstream_addr","http_user_agent":"$http_user_agent"&#125;'</span></span><br><span class="line">    <span class="attr">access_log_format_escape:</span> <span class="string">json</span></span><br></pre></td></tr></table></figure>
<h2 id="配置日志滚动"><a href="#配置日志滚动" class="headerlink" title="配置日志滚动"></a>配置日志滚动</h2><blockquote>
<p>conf/config.yaml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">log-rotate</span></span><br><span class="line"><span class="attr">plugin_attr:</span></span><br><span class="line">  <span class="attr">log-rotate:</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">    <span class="attr">max_kept:</span> <span class="number">7</span></span><br><span class="line">    <span class="attr">enable_compression:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="配置防爬虫策略"><a href="#配置防爬虫策略" class="headerlink" title="配置防爬虫策略"></a>配置防爬虫策略</h2><p>可以配置指定路由，也可以配置全局路由级别。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"denylist"</span>: [</span><br><span class="line">    <span class="string">"(?i)spider"</span>,</span><br><span class="line">    <span class="string">"(?i)bot"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"disable"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/posts/cf6abfd1/global_rules_ua-restriction.png" alt></p>
<p>表示拦截 ua 包含 spider 或者 bot 的请求。<code>(?i)</code>表示不区分大小写。</p>
<h1 id="apish-dashboard"><a href="#apish-dashboard" class="headerlink" title="apish-dashboard"></a>apish-dashboard</h1><h2 id="配置-https-1"><a href="#配置-https-1" class="headerlink" title="配置 https"></a>配置 https</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">conf:</span></span><br><span class="line">  <span class="attr">listen:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9001</span></span><br><span class="line">    <span class="attr">cert:</span> <span class="string">/usr/local/apisix-dashboard/ssl/example.com.crt</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">/usr/local/apisix-dashboard/ssl/example.com.key</span></span><br></pre></td></tr></table></figure>
<h2 id="配置-ETCD-TLS-1"><a href="#配置-ETCD-TLS-1" class="headerlink" title="配置 ETCD TLS"></a>配置 ETCD TLS</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">conf:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">endpoints:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"https://etcd:2379"</span></span><br><span class="line">    <span class="comment"># username: "root"    # ignore etcd username if not enable etcd auth</span></span><br><span class="line">    <span class="comment"># password: "123456"  # ignore etcd password if not enable etcd auth</span></span><br><span class="line">    <span class="attr">mtls:</span></span><br><span class="line">      <span class="comment"># Path of your self-signed client side key</span></span><br><span class="line">      <span class="attr">key_file:</span> <span class="string">"/usr/local/apisix-dashboard/ssl/etcd-key.pem"</span></span><br><span class="line">      <span class="comment"># Path of your self-signed client side cert</span></span><br><span class="line">      <span class="attr">cert_file:</span> <span class="string">"/usr/local/apisix-dashboard/ssl/etcd.pem"</span></span><br><span class="line">      <span class="comment"># Path of your self-signed ca cert, the CA is used to sign callers' certificates</span></span><br><span class="line">      <span class="attr">ca_file:</span> <span class="string">"/usr/local/apisix-dashboard/ssl/etcd-ca.pem"</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>apisix</category>
      </categories>
      <tags>
        <tag>apisix</tag>
        <tag>apisix-dashboard</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 命令</title>
    <url>/posts/71631b3f.html</url>
    <content><![CDATA[<h1 id="docker-container-ls"><a href="#docker-container-ls" class="headerlink" title="docker container ls"></a>docker container ls</h1><blockquote>
<p>列出所有容器</p>
</blockquote>
<ul>
<li><p>用法</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker container ls [options]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>选项</p>
<p>| 参数           | 默认值 | 描述                             |<br>| ————– | —— | ——————————– |<br>| <code>-all, -a</code>     | false  | 显示所有容器(默认只显示运行的)   |<br>| <code>--filter, -f</code> |        | 根据提供的条件过滤输出           |<br>| <code>--format</code>     |        | 使用Go模板打印容器               |<br>| <code>-last, -n</code>    | <code>-1</code>   | 显示最后创建的容器(包括所有状态) |<br>| <code>--latest, -l</code> | false  | 显示最新创建的容器(包括所有状态) |<br>| <code>-no-trunc</code>    | false  | 不要截断输出                     |<br>| <code>--quiet, -q</code>  | false  | 只显示数字ID                     |<br>| <code>-size, -s</code>    | false  | 显示文件大小                     |</p>
</li>
</ul>
<h1 id="docker-container-rm"><a href="#docker-container-rm" class="headerlink" title="docker container rm"></a>docker container rm</h1><blockquote>
<p>删除一个或多个容器</p>
</blockquote>
<ul>
<li><p>用法</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker container rm [options] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure>
</li>
<li><p>选项</p>
<p>| 参数            | 默认值 | 描述                                |<br>| ————— | —— | ———————————– |<br>| <code>--force, -f</code>   | false  | 强制移走正在运行的容器(使用SIGKILL) |<br>| <code>--link, -l</code>    | false  | 删除指定的链接                      |<br>| <code>--volumes, -v</code> | false  | 删除与容器关联的卷                  |</p>
</li>
</ul>
<h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>docker container attach</td>
<td>附加到正在运行的容器</td>
</tr>
<tr>
<td>docker container commit</td>
<td>从容器的更改创建一个新的映像</td>
</tr>
<tr>
<td>docker container cp</td>
<td>在容器和本地文件系统之间复制文件/文件夹</td>
</tr>
<tr>
<td>docker container create</td>
<td>创建一个新的容器</td>
</tr>
<tr>
<td>docker container diff</td>
<td>检查容器文件系统上文件或目录的更改</td>
</tr>
<tr>
<td>docker container exec</td>
<td>在运行容器中运行命令</td>
</tr>
<tr>
<td>docker container export</td>
<td>将容器的文件系统导出为tar存档</td>
</tr>
<tr>
<td>docker container inspect</td>
<td>显示一个或多个容器的详细信息</td>
</tr>
<tr>
<td>docker container kill</td>
<td>杀死一个或多个运行容器</td>
</tr>
<tr>
<td>docker container logs</td>
<td>获取容器的日志</td>
</tr>
<tr>
<td>docker container ls</td>
<td>列出容器</td>
</tr>
<tr>
<td>docker container pause</td>
<td>暂停一个或多个容器内的所有进程</td>
</tr>
<tr>
<td>docker container port</td>
<td>列出端口映射或容器的特定映射</td>
</tr>
<tr>
<td>docker container prune</td>
<td>取出所有停止的容器</td>
</tr>
<tr>
<td>docker container rename</td>
<td>重命名容器</td>
</tr>
<tr>
<td>docker container restart</td>
<td>重新启动一个或多个容器</td>
</tr>
<tr>
<td>docker container rm</td>
<td>删除(移除)一个或多个容器</td>
</tr>
<tr>
<td>docker container run</td>
<td>在新容器中运行命令</td>
</tr>
<tr>
<td>docker container start</td>
<td>启动一个或多个停止的容器</td>
</tr>
<tr>
<td>docker container stats</td>
<td>显示容器的实时流资源使用统计信息</td>
</tr>
<tr>
<td>docker container stop</td>
<td>停止一个或多个运行容器</td>
</tr>
<tr>
<td>docker container top</td>
<td>显示容器的正在运行的进程</td>
</tr>
<tr>
<td>docker container unpause</td>
<td>取消暂停一个或多个容器内的所有流程</td>
</tr>
<tr>
<td>docker container update</td>
<td>更新一个或多个容器的配置</td>
</tr>
<tr>
<td>docker container wait</td>
<td>阻止一个或多个容器停止，然后打印退出代码</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>container</tag>
      </tags>
  </entry>
  <entry>
    <title>docker kafka 安装和配置</title>
    <url>/posts/212ff189.html</url>
    <content><![CDATA[<p>scala版本2.13</p>
<p>kafka版本2.6.0</p>
<p>docker pull wurstmeister/kafka:2.13-2.6.0</p>
<blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">kafka:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_kafka</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wurstmeister/kafka:2.13-2.6.0</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9092:9092"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"KAFKA_ADVERTISED_HOST_NAME=172.54.102.25"</span></span><br><span class="line">      <span class="comment"># 在 kafka 集群中，每个 kafka 都有一个 BROKER_ID 来区分自己</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"KAFKA_BROKER_ID=0"</span></span><br><span class="line">      <span class="comment"># 配置 kafka 的监听端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"KAFKA_LISTENERS=PLAINTEXT://9092"</span></span><br><span class="line">      <span class="comment"># 把 kafka 的地址端口注册给 zookeeper</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://9092"</span></span><br><span class="line">      <span class="comment">#  配置 zookeeper</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"KAFKA_ZOOKEEPER_CONNECT=zookeeper01:2181,zookeeper02:2181/kafka"</span></span><br><span class="line">      <span class="comment"># 关闭 Topic 自动创建</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"KAFKA_AUTO_CREATE_TOPICS_ENABLE=false"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./logs:/tmp/kafka-logs"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/var/run/docker.sock:/var/run/docker.sock"</span></span><br><span class="line">      <span class="comment"># 容器时间同步虚拟机的时间</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/etc/localtime:/etc/localtime"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<p>/var/run/docker.sock挂载了之后，在容器内就可以执行”docker ps”、”docker port”这些命令了，这是docker官方提供的能力。假设kafka容器的9092映射到宿主机的30001端口，那么kafka注册到ZK的时候，要注册的IP应该是宿主机的IP，端口应该是30001，这样才能保证外部可访问，所以kafka容器启动时会执行一个名为start-kafka.sh的脚本，里面用docker port命令来获取宿主机的端口，因此必须要挂载/var/run/docker.sock才能执行docker port命令</p>
]]></content>
      <categories>
        <category>kafka</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>docker mysql安装和配置</title>
    <url>/posts/1299dfc1.html</url>
    <content><![CDATA[<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7.31</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3306:3306"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./data/:/var/lib/mysql"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./logs/:/var/log/mysql"</span></span><br><span class="line">      <span class="comment"># - "./conf/conf.d:/etc/mysql/conf.d"</span></span><br><span class="line">      <span class="comment"># - "./conf/mysql.conf.d:/etc/mysql/mysql.conf.d"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./conf/my.cnf:/etc/mysql/conf.d/my.cnf"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/etc/localtime:/etc/localtime"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">"test123456"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>my.cnf</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">#</span><br><span class="line"># This program is free software; you can redistribute it and/or modify</span><br><span class="line"># it under the terms of the GNU General Public License, version 2.0,</span><br><span class="line"># as published by the Free Software Foundation.</span><br><span class="line">#</span><br><span class="line"># This program is also distributed with certain software (including</span><br><span class="line"># but not limited to OpenSSL) that is licensed under separate terms,</span><br><span class="line"># as designated in a particular file or component or in included license</span><br><span class="line"># documentation.  The authors of MySQL hereby grant you an additional</span><br><span class="line"># permission to link the program and your derivative works with the</span><br><span class="line"># separately licensed software that they have included with MySQL.</span><br><span class="line">#</span><br><span class="line"># This program is distributed in the hope that it will be useful,</span><br><span class="line"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line"># GNU General Public License, version 2.0, for more details.</span><br><span class="line">#</span><br><span class="line"># You should have received a copy of the GNU General Public License</span><br><span class="line"># along with this program; if not, write to the Free Software</span><br><span class="line"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line">!includedir /etc/mysql/mysql.conf.d/</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>docker nexus3安装和配置</title>
    <url>/posts/5ed27d2e.html</url>
    <content><![CDATA[<h1 id="nexus3"><a href="#nexus3" class="headerlink" title="nexus3"></a>nexus3</h1><blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nexus3:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_nexus3</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sonatype/nexus3:3.26.1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8081:8081"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./data:/nexus-data"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/etc/localtime:/etc/localtime"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<p>问题：Error creating bundle cache.<br>Unable to update instance pid: Unable to create directory /nexus-data/instances</p>
<p>解决：sudo chmod -R 775 data/</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>nexus3</tag>
      </tags>
  </entry>
  <entry>
    <title>docker nginx-1.18.0-alpine 配置</title>
    <url>/posts/8b6eb00b.html</url>
    <content><![CDATA[<h1 id="nginx-自定义证书"><a href="#nginx-自定义证书" class="headerlink" title="nginx 自定义证书"></a>nginx 自定义证书</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> create self-signed server certificate:</span></span><br><span class="line">read -p "Enter your domain [www.example.com]: " DOMAIN</span><br><span class="line"></span><br><span class="line">echo "Create server key..."</span><br><span class="line">openssl genrsa -des3 -out $DOMAIN.key 1024</span><br><span class="line"></span><br><span class="line">echo "Create server certificate signing request..."</span><br><span class="line">SUBJECT="/C=US/ST=Mars/L=iTranswarp/O=iTranswarp/OU=iTranswarp/CN=$DOMAIN"</span><br><span class="line">openssl req -new -subj $SUBJECT -key $DOMAIN.key -out $DOMAIN.csr</span><br><span class="line"></span><br><span class="line">echo "Remove password..."</span><br><span class="line">mv $DOMAIN.key $DOMAIN.origin.key</span><br><span class="line">openssl rsa -in $DOMAIN.origin.key -out $DOMAIN.key</span><br><span class="line"></span><br><span class="line">echo "Sign SSL certificate..."</span><br><span class="line"><span class="meta">#</span><span class="bash"> 36500 天过期</span></span><br><span class="line">openssl x509 -req -days 36500 -in $DOMAIN.csr -signkey $DOMAIN.key -out $DOMAIN.crt</span><br><span class="line"></span><br><span class="line">echo "TODO:"</span><br><span class="line">echo "cp $DOMAIN.crt to /etc/nginx/ssl/$DOMAIN.crt"</span><br><span class="line">echo "cp $DOMAIN.key to /etc/nginx/ssl/$DOMAIN.key"</span><br><span class="line">echo "Add configuration in nginx:"</span><br><span class="line">echo "server &#123;"</span><br><span class="line">echo "    ..."</span><br><span class="line">echo "    listen 443 ssl;"</span><br><span class="line">echo "    ssl_certificate     /etc/nginx/ssl/$DOMAIN.crt;"</span><br><span class="line">echo "    ssl_certificate_key /etc/nginx/ssl/$DOMAIN.key;"</span><br><span class="line">echo "&#125;"</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h1 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:1.18.0-alpine</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8810:8810"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8820:8820"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./config/nginx.conf:/etc/nginx/nginx.conf"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./config/conf.d/:/etc/nginx/conf.d/"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./ssl:/etc/nginx/ssl"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./html:/usr/share/nginx/html"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/etc/localtime:/etc/localtime"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：其中<code>nginx.conf</code>、<code>default.conf</code>、<code>server_*.conf</code>、<code>upstream_*.conf</code>等是文件，要提前在宿主机建好</p>
</blockquote>
<blockquote>
<p>/etc/nginx/nginx.conf</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  auto;</span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log error;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  65535;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # ngx_http_core_module</span><br><span class="line">    server_tokens off;</span><br><span class="line">    client_max_body_size 50m;</span><br><span class="line">    underscores_in_headers on;</span><br><span class="line">    open_file_cache      max=65535 inactive=60s;</span><br><span class="line">    open_file_cache_errors   on;</span><br><span class="line">    open_file_cache_min_uses 2;</span><br><span class="line">    open_file_cache_valid    60s;</span><br><span class="line">    # ngx_http_core_module</span><br><span class="line"></span><br><span class="line">    # ngx_http_proxy_module</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_cache_path /dev/shm/nginx_cache levels=1:2 keys_zone=shmCache:10m max_size=1g inactive=180m use_temp_path=off;</span><br><span class="line">    # ngx_http_proxy_module</span><br><span class="line"></span><br><span class="line">    # ngx_http_limit_conn_module</span><br><span class="line">    limit_conn_status 444;</span><br><span class="line">    limit_conn_zone $binary_remote_addr zone=perip:32m;</span><br><span class="line">    limit_conn_zone $server_name zone=perserver:10m;</span><br><span class="line">    # ngx_http_limit_conn_module</span><br><span class="line"></span><br><span class="line">    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">    #                   '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">    #                   '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line">    #</span><br><span class="line">    # access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    log_format logJson  '&#123;'</span><br><span class="line">                        '"accessTime": "$time_local", '</span><br><span class="line">                        '"remote_addr": "$remote_addr", '</span><br><span class="line">                        '"referer": "$http_referer", '</span><br><span class="line">                        '"request": "$request", '</span><br><span class="line">                        '"status": $status, '</span><br><span class="line">                        '"bytes": $body_bytes_sent, '</span><br><span class="line">                        '"agent": "$http_user_agent", '</span><br><span class="line">                        '"x_forwarded": "$http_x_forwarded_for", '</span><br><span class="line">                        '"up_addr": "$upstream_addr",'</span><br><span class="line">                        '"up_host": "$upstream_http_host",'</span><br><span class="line">                        '"up_resp_time": "$upstream_response_time",'</span><br><span class="line">                        '"request_time": "$request_time"'</span><br><span class="line">                        '&#125;';</span><br><span class="line">    access_log  /var/log/nginx/access.log  logJson;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    # ngx_http_gzip_module</span><br><span class="line">    gzip               on;</span><br><span class="line">    gzip_comp_level    2;</span><br><span class="line">    gzip_min_length    1000;</span><br><span class="line">    gzip_proxied       expired no-cache no-store private auth;</span><br><span class="line">    gzip_types         text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;</span><br><span class="line">    # ngx_http_gzip_module</span><br><span class="line"></span><br><span class="line">    # include /usr/local/nginx/conf/objects/server0_default.conf;</span><br><span class="line">    # include /usr/local/nginx/conf/objects/server_*.conf;</span><br><span class="line">    # include /usr/local/nginx/conf/objects/server6_*.conf;</span><br><span class="line">    # include /usr/local/nginx/conf/objects/upstreams_*.conf;</span><br><span class="line">    # include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    #include /etc/nginx/conf.d/default.conf;</span><br><span class="line">    include /etc/nginx/conf.d/server_*.conf;</span><br><span class="line">    include /etc/nginx/conf.d/upstreams_*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen unix:/tmp/nginx.sock; ##以下配置为符合基线合规化处理</span><br><span class="line">        location = /50x.html &#123;     # 返回错误页面</span><br><span class="line">            limit_conn perip 32;       # 每个IP并发连接数为32</span><br><span class="line">            limit_conn perserver 32;   # 每个主机的最大并发数为32</span><br><span class="line">            limit_rate 1024k;          # 下载速率为1024k</span><br><span class="line">            client_body_timeout 10;    #指定客户端与服务端建立连接后发送 request body 的超时时间</span><br><span class="line">            send_timeout 10;           #服务端向客户端传输数据的超时时间</span><br><span class="line">            return 444;</span><br><span class="line">        &#125;</span><br><span class="line">        client_header_timeout 10;  #客户端向服务端发送一个完整的 request header 的超时时间</span><br><span class="line">        error_page 400 401 402 403 404 413 500 502 503 504 /50x.html;   #自定义nginx返回的错误信息</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>/etc/nginx/conf.d/server_0_433.conf</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       8810;</span><br><span class="line">    listen  [::]:8810;</span><br><span class="line"></span><br><span class="line">    # ssl_certificate         /usr/local/nginx/ssl/4113665.pem;</span><br><span class="line">    # ssl_certificate_key     /usr/local/nginx/ssl/4113665.key;</span><br><span class="line">    # ssl_session_timeout 5m;</span><br><span class="line">    # ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";</span><br><span class="line">    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    # ssl_session_cache shared:SSL:10m;</span><br><span class="line">    # ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">    limit_conn perip 50;</span><br><span class="line">    limit_rate 15000k;</span><br><span class="line"></span><br><span class="line">    # 添加几条有关安全的响应头；与 Google+ 的配置类似，详情参见文末。</span><br><span class="line">    add_header X-Frame-Options "SAMEORIGIN";</span><br><span class="line">    add_header X-XSS-Protection "1; mode=block";</span><br><span class="line">    add_header X-Content-Type-Options "nosniff";</span><br><span class="line"></span><br><span class="line">    # 指定字符集为 UTF-8</span><br><span class="line">    charset utf-8;</span><br><span class="line"></span><br><span class="line">    # 关闭 [/favicon.ico] 和 [/robots.txt] 的访问日志，即使它们不存在，也不写入错误日志。</span><br><span class="line">    location = /favicon.ico &#123; access_log off; log_not_found off; &#125;</span><br><span class="line">    location = /robots.txt  &#123; access_log off; log_not_found off; &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /xmt/ &#123; </span><br><span class="line">        proxy_store off;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        # 注意：这里最好不要使用下划线，upstream 最好改成 xmt-srv，具体查看RFC1-1034规范</span><br><span class="line">        proxy_pass http://xmt_srv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 引入公共配置，包括错误页面、维护通知、图标、反爬虫协议等</span><br><span class="line">    include /etc/nginx/conf.d/agent_deny.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>/etc/nginx/conf.d/upstream_0_433.conf</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注意：这里最好不要使用下划线，最好改成 xmt-srv，具体查看RFC1-1034规范</span></span><br><span class="line">upstream xmt_srv &#123;</span><br><span class="line">    server 192.168.123.1:8015;</span><br><span class="line">    server 192.168.123.2:8015;</span><br><span class="line">    server 192.168.123.3:8015;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>/etc/nginx/conf.d/agent_deny.conf</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if ($http_user_agent ~* &quot;qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|Catall Spider|AcoiRobot|Yisou|bingbot|360Spider&quot;) &#123;</span><br><span class="line">    return 403;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($http_user_agent ~* &quot;WinHttp|WebZIP|FetchURL|node-superagent|FeedDemon|Jullo|JikeSpider|Indy Library|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|Feedly|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|MJ12bot|heritrix|EasouSpider|Ezooms|BOT/0.1|YandexBot|FlightDeckReports|Linguee Bot|iaskspider|^$&quot;) &#123;</span><br><span class="line">    return 403;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($request_method !~ ^(GET|POST)$) &#123;</span><br><span class="line">    return 403;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($http_user_agent ~* (Python|Wget|Scrapy|Spider)) &#123;</span><br><span class="line">    return 403;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="系统参数优化"><a href="#系统参数优化" class="headerlink" title="系统参数优化"></a>系统参数优化</h1><blockquote>
<p>修改/etc/sysctl.conf</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#每个网络接口接收数据包速度比内核处理速度快的时候，允许发送队列数目数据包的最大数</span><br><span class="line">net.core.netdev_max_backlog = 102400</span><br><span class="line"></span><br><span class="line">#调节系统同时发起的tcp连接数，不应该超过 65535</span><br><span class="line">net.core.somaxconn = 65535</span><br><span class="line"></span><br><span class="line">#该参数用于设定系统中最多允许存在多少TCP套接字不被关联到任何一个用户文件句柄上，主要目的为防止Ddos攻击</span><br><span class="line">net.ipv4.tcp_max_orphans = 102400</span><br><span class="line"></span><br><span class="line">#该参数用于记录尚未收到客户端确认信息的连接请求的最大值</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 102400</span><br><span class="line"></span><br><span class="line">#nginx服务上建议关闭（既为0）</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line"></span><br><span class="line">#该参数用于设置内核放弃TCP连接之前向客户端发送SYN+ACK包的数量，为了建立对端的连接服务，服务器和客户端需要进行三次握手，第二次握手期间，内核需要发送SYN并附带一个回应前一个SYN的ACK，这个参</span><br><span class="line">数主要影响这个过程，一般赋予值为1，即内核放弃连接之前发送一次SYN＋ACK包。</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">net.ipv4.tcp_syn_retries = 1</span><br></pre></td></tr></table></figure>
<blockquote>
<p> 执行生效</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>
<p>net.core.netdev_max_backlog = 102400<br>net.core.somaxconn = 65535<br>net.ipv4.tcp_max_orphans = 102400<br>net.ipv4.tcp_max_syn_backlog = 102400<br>net.ipv4.tcp_timestamps = 0<br>net.ipv4.tcp_synack_retries = 1<br>net.ipv4.tcp_syn_retries = 1</p>
<h1 id="reload"><a href="#reload" class="headerlink" title="reload"></a>reload</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec ts_nginx nginx -s reload</span><br></pre></td></tr></table></figure>
<h1 id="sub-filter"><a href="#sub-filter" class="headerlink" title="sub_filter"></a>sub_filter</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location /test/ &#123;</span><br><span class="line">  sub_filter &apos;src=&quot;js/&apos; &apos;src=&quot;/test/js&apos;;</span><br><span class="line">  sub_filter_types text/html application/json;</span><br><span class="line">  sub_filter_once off;</span><br><span class="line">  proxy_pass http://localhsot:9090/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul>
<li>使用<code>nginx -s reload</code>时，不能删除<code>nginx.conf</code>，<code>conf.d</code>，可以删除<code>conf.d</code>下的配置，不然会导致nginx reload异常。由于删除文件后，导致链接失效。</li>
</ul>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>docker redis集群安装和配置</title>
    <url>/posts/7515690f.html</url>
    <content><![CDATA[<h1 id="Redis-集群配置"><a href="#Redis-集群配置" class="headerlink" title="Redis 集群配置"></a>Redis 集群配置</h1><p>密码：redis123456</p>
<p>备份：未开启</p>
<p>保护模式（protected-mode）：未开启。如果开启，需要指定bind: 0.0.0.0，否则应用连接集群会报错</p>
<a id="more"></a>
<h1 id="网络规划"><a href="#网络规划" class="headerlink" title="网络规划"></a>网络规划</h1><table>
<thead>
<tr>
<th>IP</th>
<th>PORT</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.123.2.1</td>
<td>6380、16380</td>
<td>6380端口：用于客户端连接。16380集群总线端口：用于集群进行故障检测、配置更新、故障转移授权等</td>
</tr>
<tr>
<td>192.123.2.1</td>
<td>6381、16381</td>
<td>同上</td>
</tr>
<tr>
<td>192.123.2.2</td>
<td>6380、16380</td>
<td>同上</td>
</tr>
<tr>
<td>192.123.2.2</td>
<td>6381、16381</td>
<td>同上</td>
</tr>
<tr>
<td>192.123.2.3</td>
<td>6380、16380</td>
<td>同上</td>
</tr>
<tr>
<td>192.123.2.3</td>
<td>6381、16381</td>
<td>同上</td>
</tr>
</tbody>
</table>
<h1 id="搭建Redis节点服务"><a href="#搭建Redis节点服务" class="headerlink" title="搭建Redis节点服务"></a>搭建Redis节点服务</h1><p>以下操作分别在192.123.2.1、192.123.2.2、192.123.2.3机器上都操作一遍。</p>
<p>注意： cluster-announce-ip需要改成对应机器的IP</p>
<h2 id="redis-cluster-tmpl"><a href="#redis-cluster-tmpl" class="headerlink" title="redis-cluster.tmpl"></a>redis-cluster.tmpl</h2><p>用于自动生成redis.conf配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 节点端口</span><br><span class="line">port $&#123;PORT&#125;</span><br><span class="line">###############################################################</span><br><span class="line"># 集群相关配置</span><br><span class="line">###############################################################</span><br><span class="line"># 是否开启集群模式，默认 no</span><br><span class="line">cluster-enabled yes</span><br><span class="line"># 集群节点信息文件</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line"># 集群节点连接超时时间</span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line"># 集群节点 IP，填写宿主机的 IP，防止NAT。不指定的话，cluster nodes查询节点信息有时候会看到映射到了容器IP</span><br><span class="line">cluster-announce-ip 192.123.2.1</span><br><span class="line"># 集群节点映射端口</span><br><span class="line">cluster-announce-port $&#123;PORT&#125;</span><br><span class="line"># 集群节点总线端口，默认：1$&#123;PORT&#125;</span><br><span class="line">cluster-announce-bus-port 1$&#123;PORT&#125;</span><br><span class="line"></span><br><span class="line"># 是否以守护线程的方式启动（后台启动），默认 no</span><br><span class="line">daemonize no</span><br><span class="line"># 保护模式，默认值 yes。开启保护模式以后，需配置 bind ip 或者设置访问密码；关闭保护模式，外部网络可以直接访问</span><br><span class="line">protected-mode no</span><br><span class="line"># 添加访问认证：访问密码</span><br><span class="line"># requirepass 1234</span><br><span class="line"># 如果主节点开启了访问认证，从节点访问主节点需要认证</span><br><span class="line"># masterauth 1234</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###############################################################</span><br><span class="line"># 备份相关配置</span><br><span class="line">###############################################################</span><br><span class="line"># 是否开启 AOF 持久化模式，默认 no</span><br><span class="line">appendonly no</span><br><span class="line"># 每秒钟备份</span><br><span class="line">#appendfsync everysec</span><br><span class="line"># 对aof文件进行压缩时，是否执行同步操作</span><br><span class="line">#no-appendfsync-on-rewrite no</span><br><span class="line"># 当目前aof文件大小超过上一次重写时的aof文件大小的100%时会再次进行重写</span><br><span class="line">#auto-aof-rewrite-percentage 100</span><br><span class="line"># 重写前AOF文件的大小最小值 默认 64mb</span><br><span class="line">#auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># 开启键空间通知</span><br><span class="line">notify-keyspace-events KEA</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果需要监听 session 销毁事件，需要开启 notify-keyspace-events 值为 KEA，否则 HttpSessionListener 收不到销毁事件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">notify-keyspace-events 的参数可以是以下字符的任意组合，它指定了服务器该发送哪些类型的通知：</span><br><span class="line">##K 键空间通知，所有通知以 __keyspace@__ 为前缀</span><br><span class="line">##E 键事件通知，所有通知以 __keyevent@__ 为前缀</span><br><span class="line">##g DEL 、 EXPIRE 、 RENAME 等类型无关的通用命令的通知</span><br><span class="line">##$ 字符串命令的通知</span><br><span class="line">##l 列表命令的通知</span><br><span class="line">##s 集合命令的通知</span><br><span class="line">##h 哈希命令的通知</span><br><span class="line">##z 有序集合命令的通知</span><br><span class="line">##x 过期事件：每当有过期键被删除时发送</span><br><span class="line">##e 驱逐(evict)事件：每当有键因为 maxmemory 政策而被删除时发送</span><br><span class="line">##m     Key miss events (events generated when a key that doesn&apos;t exist is accessed)</span><br><span class="line">##n     New key events (Note: not included in the &apos;A&apos; class)</span><br><span class="line">##A 参数 g$lshzxe 的别名</span><br><span class="line">#输入的参数中至少要有一个 K 或者 E，否则的话，不管其余的参数是什么，都不会有任何 通知被分发。详细使用可以参考</span><br></pre></td></tr></table></figure>
<h2 id="redids-cluster-sh"><a href="#redids-cluster-sh" class="headerlink" title="redids-cluster.sh"></a>redids-cluster.sh</h2><p>还行本脚本，会自动根据redis-cluster.tmpl模板文件生产Redis集群节点的redis.conf文件。其中6380 6381为redis节点的端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for port in `seq 6380 6381`; do \</span><br><span class="line">  mkdir -p ./$&#123;port&#125;/conf \</span><br><span class="line">  &amp;&amp; PORT=$&#123;port&#125; envsubst &lt; ./redis-cluster.tmpl &gt; ./$&#123;port&#125;/conf/redis.conf \</span><br><span class="line">  &amp;&amp; mkdir -p ./$&#123;port&#125;/data \</span><br><span class="line">  &amp;&amp; chmod -R 777 ./$&#123;port&#125;/</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>执行redis-cluster.sh脚本，生成文件树如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[grg@i-8A5B7366 redis-cluster]$ tree</span><br><span class="line">.</span><br><span class="line">├── 6380</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">├── 6381</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── redis.conf</span><br><span class="line">│   └── data</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">├── redis-cluster.sh</span><br><span class="line">└── redis-cluster.tmpl</span><br><span class="line"></span><br><span class="line">6 directories, 5 files</span><br></pre></td></tr></table></figure>
<h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version: &apos;3.8&apos;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  redis-6380:</span><br><span class="line">    image: redis:6.2.5-alpine</span><br><span class="line">    container_name: redis-6380</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;6380:6380&quot;</span><br><span class="line">      - &quot;16380:16380&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;./6380/conf/redis.conf:/etc/redis/redis.conf&quot;</span><br><span class="line">      - &quot;./6380/data:/data&quot;</span><br><span class="line">    command: [&quot;redis-server&quot;, &quot;/etc/redis/redis.conf&quot;]</span><br><span class="line">    environment:</span><br><span class="line">      - &quot;TZ=Asia/Shanghai&quot;</span><br><span class="line">    restart: always</span><br><span class="line">  redis-6381:</span><br><span class="line">    image: redis:6.2.5-alpine</span><br><span class="line">    container_name: redis-6381</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;6381:6381&quot;</span><br><span class="line">      - &quot;16381:16381&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;./6381/conf/redis.conf:/etc/redis/redis.conf&quot;</span><br><span class="line">      - &quot;./6381/data:/data&quot;</span><br><span class="line">    command: [&quot;redis-server&quot;, &quot;/etc/redis/redis.conf&quot;]</span><br><span class="line">    environment:</span><br><span class="line">      - &quot;TZ=Asia/Shanghai&quot;</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure>
<h2 id="启动节点"><a href="#启动节点" class="headerlink" title="启动节点"></a>启动节点</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<h1 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h1><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><p>在任意一台服务器上执行以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it redis-6380 redis-cli -p 6380 -a redis123456 --cluster create 192.123.2.1:6380 192.123.2.1:6381 192.123.2.2:6380 192.123.2.2:6381 192.123.2.3:6380 192.123.2.3:6381 --cluster-replicas 1</span><br><span class="line"></span><br><span class="line">docker exec -it redis-6381 redis-cli -p 6380 -a redis123456 --cluster create 192.123.39.2:6380 192.123.39.2:6381 192.123.39.2:6382 192.123.39.2:6383 192.123.39.2:6384 192.123.39.2:6385 --cluster-replicas 1</span><br></pre></td></tr></table></figure>
<p>出现以下信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 192.123.2.2:6381 to 192.123.2.1:6380</span><br><span class="line">Adding replica 192.123.2.3:6381 to 192.123.2.2:6380</span><br><span class="line">Adding replica 192.123.2.1:6381 to 192.123.2.3:6380</span><br><span class="line">M: 49c8faffc5613412ccaeb4179467b7051d4884e0 192.123.2.1:6380</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">S: 31c90ce6d3799d1bf03ba66829eeafbb93272afe 192.123.2.1:6381</span><br><span class="line">   replicates 0295ff1c975064083fcb8123f0bb6d7bd5117176</span><br><span class="line">M: 7fb3bb141f217bf3e251d578464b77b1d24ca9b6 192.123.2.2:6380</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">S: 98022bc20d35ad63709ee390d4a46c40ded3f4b3 192.123.2.2:6381</span><br><span class="line">   replicates 49c8faffc5613412ccaeb4179467b7051d4884e0</span><br><span class="line">M: 0295ff1c975064083fcb8123f0bb6d7bd5117176 192.123.2.3:6380</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: 061b969acd227ce48691ea6b5cbb73781e7a232b 192.123.2.3:6381</span><br><span class="line">   replicates 7fb3bb141f217bf3e251d578464b77b1d24ca9b6</span><br><span class="line">Can I set the above configuration? (type &apos;yes&apos; to accept):</span><br></pre></td></tr></table></figure>
<p>输入“yes”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Can I set the above configuration? (type &apos;yes&apos; to accept): yes</span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class="line">Waiting for the cluster to join</span><br><span class="line">.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.123.2.1:6380)</span><br><span class="line">M: 49c8faffc5613412ccaeb4179467b7051d4884e0 192.123.2.1:6380</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 061b969acd227ce48691ea6b5cbb73781e7a232b 192.123.2.3:6381</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 7fb3bb141f217bf3e251d578464b77b1d24ca9b6</span><br><span class="line">M: 7fb3bb141f217bf3e251d578464b77b1d24ca9b6 192.123.2.2:6380</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 98022bc20d35ad63709ee390d4a46c40ded3f4b3 192.123.2.2:6381</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 49c8faffc5613412ccaeb4179467b7051d4884e0</span><br><span class="line">M: 0295ff1c975064083fcb8123f0bb6d7bd5117176 192.123.2.3:6380</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 31c90ce6d3799d1bf03ba66829eeafbb93272afe 192.123.2.1:6381</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 0295ff1c975064083fcb8123f0bb6d7bd5117176</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>
<p>出现本信息说明集群创建成功。</p>
<h1 id="集群验证"><a href="#集群验证" class="headerlink" title="集群验证"></a>集群验证</h1><h2 id="连接至集群任意节点"><a href="#连接至集群任意节点" class="headerlink" title="连接至集群任意节点"></a>连接至集群任意节点</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 登录容器</span><br><span class="line">docker exec -it redis-6380 sh</span><br><span class="line"># 切换目录</span><br><span class="line">cd /usr/local/bin/</span><br><span class="line"># 连接基础任意节点</span><br><span class="line">redis-cli -c -h 192.123.2.1 -p 6380 -a redis123456</span><br></pre></td></tr></table></figure>
<h2 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster info</span><br></pre></td></tr></table></figure>
<h2 id="查看集群节点信息"><a href="#查看集群节点信息" class="headerlink" title="查看集群节点信息"></a>查看集群节点信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster nodes</span><br></pre></td></tr></table></figure>
<h2 id="容灾演练"><a href="#容灾演练" class="headerlink" title="容灾演练"></a>容灾演练</h2><p>原理，根据集群节点信息，docker stop掉任意一个master节点，看看它的slave节点是否会被选举为master节点。然后再重新重启stop掉的节点，看看它是否会变成slave节点。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.123.2.1:6380&gt; cluster nodes</span><br><span class="line">061b969acd227ce48691ea6b5cbb73781e7a232b 192.123.2.3:6381@16381 master - 0 1630306419000 7 connected 5461-10922</span><br><span class="line">7fb3bb141f217bf3e251d578464b77b1d24ca9b6 192.123.2.2:6380@16380 slave 061b969acd227ce48691ea6b5cbb73781e7a232b 0 1630306420000 7 connected</span><br><span class="line">98022bc20d35ad63709ee390d4a46c40ded3f4b3 192.123.2.2:6381@16381 slave 49c8faffc5613412ccaeb4179467b7051d4884e0 0 1630306421000 1 connected</span><br><span class="line">0295ff1c975064083fcb8123f0bb6d7bd5117176 192.123.2.3:6380@16380 slave 31c90ce6d3799d1bf03ba66829eeafbb93272afe 0 1630306422517 8 connected</span><br><span class="line">49c8faffc5613412ccaeb4179467b7051d4884e0 192.123.2.1:6380@16380 myself,master - 0 1630306420000 1 connected 0-5460</span><br><span class="line">31c90ce6d3799d1bf03ba66829eeafbb93272afe 192.123.2.1:6381@16381 master - 0 1630306421513 8 connected 10923-16383</span><br></pre></td></tr></table></figure>
<p>根据以上信息，可以知道192.123.2.3:6381是master节点，192.123.2.2:6380是它的slave节点。</p>
<p>登录192.123.2.3服务器，执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker stop redis-6381</span><br></pre></td></tr></table></figure>
<p>在查询节点信息，可以发现 192.123.2.3:6381已经是fail状态，而 192.123.2.2:6380已经变成master节点。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.123.2.1:6380&gt; cluster nodes</span><br><span class="line">061b969acd227ce48691ea6b5cbb73781e7a232b 192.123.2.3:6381@16381 master,fail - 1630308472995 1630308467000 7 disconnected</span><br><span class="line">7fb3bb141f217bf3e251d578464b77b1d24ca9b6 192.123.2.2:6380@16380 master - 0 1630308503375 9 connected 5461-10922</span><br><span class="line">98022bc20d35ad63709ee390d4a46c40ded3f4b3 192.123.2.2:6381@16381 slave 49c8faffc5613412ccaeb4179467b7051d4884e0 0 1630308503000 1 connected</span><br><span class="line">0295ff1c975064083fcb8123f0bb6d7bd5117176 192.123.2.3:6380@16380 slave 31c90ce6d3799d1bf03ba66829eeafbb93272afe 0 1630308505395 8 connected</span><br><span class="line">49c8faffc5613412ccaeb4179467b7051d4884e0 192.123.2.1:6380@16380 myself,master - 0 1630308505000 1 connected 0-5460</span><br><span class="line">31c90ce6d3799d1bf03ba66829eeafbb93272afe 192.123.2.1:6381@16381 master - 0 1630308504385 8 connected 10923-16383</span><br></pre></td></tr></table></figure>
<p>重启fail节点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start redis-6381</span><br></pre></td></tr></table></figure>
<p>可以发现 192.123.2.3:6381变成了 192.123.2.2:6380 master节点的slave节点。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.123.2.1:6380&gt; cluster nodes</span><br><span class="line">061b969acd227ce48691ea6b5cbb73781e7a232b 192.123.2.3:6381@16381 slave 7fb3bb141f217bf3e251d578464b77b1d24ca9b6 0 1630308672732 9 connected</span><br><span class="line">7fb3bb141f217bf3e251d578464b77b1d24ca9b6 192.123.2.2:6380@16380 master - 0 1630308673000 9 connected 5461-10922</span><br><span class="line">98022bc20d35ad63709ee390d4a46c40ded3f4b3 192.123.2.2:6381@16381 slave 49c8faffc5613412ccaeb4179467b7051d4884e0 0 1630308670721 1 connected</span><br><span class="line">0295ff1c975064083fcb8123f0bb6d7bd5117176 192.123.2.3:6380@16380 slave 31c90ce6d3799d1bf03ba66829eeafbb93272afe 0 1630308673737 8 connected</span><br><span class="line">49c8faffc5613412ccaeb4179467b7051d4884e0 192.123.2.1:6380@16380 myself,master - 0 1630308670000 1 connected 0-5460</span><br><span class="line">31c90ce6d3799d1bf03ba66829eeafbb93272afe 192.123.2.1:6381@16381 master - 0 1630308671726 8 connected 10923-16383</span><br></pre></td></tr></table></figure>
<h1 id="简单压测"><a href="#简单压测" class="headerlink" title="简单压测"></a>简单压测</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-benchmark -h 192.123.2.1 -p 6380 -t <span class="built_in">set</span> -c 100 -n 50000 -d 20</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 使用</title>
    <url>/posts/deb080b.html</url>
    <content><![CDATA[<h1 id="打包镜像"><a href="#打包镜像" class="headerlink" title="打包镜像"></a>打包镜像</h1><ul>
<li><p>save</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker save -o nginx.tar nginx:1.18.0-alpine-perl</span><br></pre></td></tr></table></figure>
</li>
<li><p>load</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load --input nginx.tar</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="删除none镜像"><a href="#删除none镜像" class="headerlink" title="删除none镜像"></a>删除none镜像</h1><p>在docker反复build后，会存留很多none镜像，下面命令一键删除所有none镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rmi `docker images | grep  '&lt;none&gt;' | awk '&#123;print $3&#125;'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更简单方法</span></span><br><span class="line">docker rmi `docker images -q -f dangling=true`</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或</span></span><br><span class="line">docker rmi $(docker images -q -f dangling=true)</span><br></pre></td></tr></table></figure>
<h1 id="更新已启动的容器的参数"><a href="#更新已启动的容器的参数" class="headerlink" title="更新已启动的容器的参数"></a>更新已启动的容器的参数</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker update --restart=always &lt;container&gt;</span><br></pre></td></tr></table></figure>
<h1 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h1><p>删除所有停止的容器，运行中的容器不会被删除</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-compose 安装和使用</title>
    <url>/posts/9bc29391.html</url>
    <content><![CDATA[<ol>
<li><p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意 docker-compose 版本和 docker 版本有兼容要求</span></span><br><span class="line">$ sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ sudo curl --proxy 192.168.123.1:1234 -L <span class="string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure>
</li>
<li><p>可执行权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure>
</li>
<li><p>验证安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.22.0, build 1719ceb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装后，如果提示 bash: docker-compose: command not found...，则执行一下命令</span></span><br><span class="line">$ sudo ln -s /usr/<span class="built_in">local</span>/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose -f grafana/docker-compose.yml up</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>如果Dockerfile中使用ENTRYPOINT执行启动应用命令，则docker-compose可以使用command和environment指定环境变量</p>
<p>如果Dockerfile中使用CMD执行启动应用命令，则docker-compose不能使用command，需要使用environment指定环境变量</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>安装 docker 环境</title>
    <url>/posts/2fff8f5e.html</url>
    <content><![CDATA[<h1 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h1><ul>
<li><p>删除旧版本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">sudo yum remove flannel docker* -y</span><br><span class="line">sudo yum -y remove docker docker-common docker-selinux docker-engine docker-engine-selinux container-selinux docker-ce</span><br><span class="line">sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>配置  repo</p>
<blockquote>
<p>yum-config-manager</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line">  </span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用阿里云</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># Optional</span></span><br><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> docker-ce-edge</span><br><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> docker-ce-test</span><br><span class="line">sudo yum-config-manager --<span class="built_in">disable</span> docker-ce-edge</span><br></pre></td></tr></table></figure>
<blockquote>
<p>yum 加速和代理</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加速配置（阿里云加速）</span></span><br><span class="line"><span class="comment">## 备份原来的yum源</span></span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line">sudo mv CentOS-Base.repo CentOS-Base.repo_bak</span><br><span class="line"><span class="comment">## 获取阿里云yum源</span></span><br><span class="line">sudo wget -O  /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="comment"># sudo wget -e "http_proxy=192.168.123.1:1234" -O  /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理配置</span></span><br><span class="line">sudo sed -i <span class="string">'/^proxy=/d'</span>  /etc/yum.conf</span><br><span class="line">sudo sh -c <span class="string">"echo proxy=http://192.168.123.1:1234 &gt;&gt; /etc/yum.conf"</span></span><br><span class="line">sudo cat /etc/yum.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除原有 yum 源缓存</span></span><br><span class="line">sudo yum clean all</span><br><span class="line"><span class="comment">## 生成 yum 源缓存</span></span><br><span class="line">sudo yum makecache</span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line">sudo rm -f /var/lib/rpm/__*</span><br><span class="line">sudo rpm --rebuilddb -v -v</span><br><span class="line">sudo yum clean dbcache</span><br><span class="line">sudo yum clean metadata</span><br><span class="line">sudo yum clean rpmdb</span><br><span class="line">sudo yum clean headers</span><br><span class="line">sudo yum clean all</span><br><span class="line">sudo rm -rf /var/cache/yum/timedhosts.txt</span><br><span class="line">sudo rm -rf /var/cache/yum/*</span><br><span class="line">sudo yum makecache</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>安装 docker</p>
<blockquote>
<p>创建 docker 和 data 目录（可不创建，使用默认路径）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker 默认下载目录 /var/lib/docker/</span></span><br><span class="line">sudo mkdir -p /data/docker/lib/docker</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软连接</span></span><br><span class="line">sudo ln -s /data/docker/lib/docker /var/lib/docker</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除软连接（注意：最后没有/，否则会把/var/lib/docker下的内容全部删除）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm /var/lib/docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo chmod 770 -R /var/lib/docker/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo chmod 777 -R /data/docker</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在线安装</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line">sudo yum install docker-ce</span><br><span class="line"><span class="comment">#安装指定版本 docker</span></span><br><span class="line"><span class="comment"># 可以查看所有仓库中所有docker版本，并选择特定版本安装</span></span><br><span class="line">yum list docker-ce --showduplicates | sort -r</span><br><span class="line">docker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable</span><br><span class="line">sudo yum install docker-ce-&lt;VERSION STRING&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">sudo curl https://releases.rancher.com/install-docker/20.10.sh | sh</span><br><span class="line">sudo curl --proxy 192.168.123.1:1234 https://releases.rancher.com/install-docker/20.10.sh | sh</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>离线安装<br>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要按顺序执行</span></span><br><span class="line">sudo yum install -y docker-ce-cli-19.03.12-3.el7.x86_64.rpm</span><br><span class="line"><span class="comment"># 下载路径：http://mirror.centos.org/centos/7/extras/x86_64/Packages/</span></span><br><span class="line">sudo yum install -y container-selinux-2.107-3.el7.noarch.rpm</span><br><span class="line">sudo yum install -y containerd.io-1.3.7-3.1.el7.x86_64.rpm</span><br><span class="line">sudo yum install -y docker-ce-19.03.12-3.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者将以上 rpm 包放到一个文件夹，然后执行一下命令，会自动判断依赖</span></span><br><span class="line">yum localinstall -y *.rpm</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>启动并加入开机启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"><span class="comment"># 停止运行 docker</span></span><br><span class="line">sudo systemctl stop docker</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment"># 禁止开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>版本锁定</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install yum-plugin-versionlock</span><br><span class="line">sudo yum versionlock add docker-ce docker-ce-cli</span><br><span class="line">sudo yum versionlock list</span><br></pre></td></tr></table></figure>
<ul>
<li>将当前用户加入<code>docker</code>组，并重启docker</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<ul>
<li><p>验证安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:           18.06.1-ce</span><br><span class="line"> API version:       1.38</span><br><span class="line"> Go version:        go1.10.3</span><br><span class="line"> Git commit:        e68fc7a</span><br><span class="line"> Built:             Tue Aug 21 17:23:03 2018</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          18.06.1-ce</span><br><span class="line">  API version:      1.38 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.10.3</span><br><span class="line">  Git commit:       e68fc7a</span><br><span class="line">  Built:            Tue Aug 21 17:25:29 2018</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Docker-配置代理"><a href="#Docker-配置代理" class="headerlink" title="Docker 配置代理"></a>Docker 配置代理</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置 docker pull 代理</span></span><br><span class="line"><span class="comment"># sudo rm -rf /etc/systemd/system/docker.service.d</span></span><br><span class="line"><span class="comment"># cat /etc/systemd/system/docker.service.d/http-proxy.conf</span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">"HTTP_PROXY=http://192.168.123.1:1234"</span> <span class="string">"NO_PROXY=localhost,127.0.0.1,172.16.120.0/24"</span></span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<p>其中<code>172.16.120.0/24</code>为宿主机 ip</p>
<h1 id="Docker-配置加速源"><a href="#Docker-配置加速源" class="headerlink" title="Docker 配置加速源"></a>Docker 配置加速源</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sudo rm -rf /etc/docker/daemon.json</span></span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors":["https://docker.mirrors.ustc.edu.cn"],</span><br><span class="line">  "default-address-pools": [</span><br><span class="line">    &#123;</span><br><span class="line">      "base": "192.49.0.0/16",</span><br><span class="line">      "size": 24</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "log-driver":"json-file",</span><br><span class="line">	"log-opts":&#123; "max-size" :"50m","max-file":"10"&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h1 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker-compose"></a>安装 docker-compose</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m`" -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo curl --proxy 192.168.123.1:1234 -L <span class="string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m`"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo curl --proxy 192.168.123.1:1234 -L <span class="string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置权限</span></span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo chmod 755 /usr/<span class="built_in">local</span>/bin/docker-compose</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo ln -s /usr/<span class="built_in">local</span>/bin/docker-compose /usr/bin/docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证是否安装成功</span></span><br><span class="line">docker-compose --version</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装后，如果提示 bash: docker-compose: <span class="built_in">command</span> not found...，则执行一下命令</span></span><br><span class="line">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h1 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h1>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># centos</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;container-name&gt; /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># alpine</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;container-name&gt; sh</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>elastic-job 使用</title>
    <url>/posts/33cc482c.html</url>
    <content><![CDATA[<blockquote>
<p>2.1.5 版本</p>
</blockquote>
<h1 id="context-path配置"><a href="#context-path配置" class="headerlink" title="context-path配置"></a>context-path配置</h1><h2 id="修改-context-path"><a href="#修改-context-path" class="headerlink" title="修改 context-path"></a>修改 context-path</h2><blockquote>
<p>com.dangdang.ddframe.job.restful.RestfulServer</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ServletContextHandler <span class="title">buildServletContextHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ServletContextHandler result = <span class="keyword">new</span> ServletContextHandler(ServletContextHandler.SESSIONS);</span><br><span class="line">    result.setContextPath(<span class="string">"/"</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>修改成</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ServletContextHandler <span class="title">buildServletContextHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletContextHandler result = <span class="keyword">new</span> ServletContextHandler(ServletContextHandler.SESSIONS);</span><br><span class="line">        result.setContextPath(<span class="string">"/elasticjob"</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="修改前端接口地址"><a href="#修改前端接口地址" class="headerlink" title="修改前端接口地址"></a>修改前端接口地址</h2><p>把前端<code>/api</code>的地方改成<code>api</code></p>
<h1 id="默认中文"><a href="#默认中文" class="headerlink" title="默认中文"></a>默认中文</h1><blockquote>
<p>console/index.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">class</span>=<span class="string">"lang-en"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修改成 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">class</span>=<span class="string">"lang-zh"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>elastic-job</category>
      </categories>
      <tags>
        <tag>elastic-job</tag>
      </tags>
  </entry>
  <entry>
    <title>Indices APIs</title>
    <url>/posts/ef78ba07.html</url>
    <content><![CDATA[<h1 id="Defines-a-Template"><a href="#Defines-a-Template" class="headerlink" title="Defines a Template"></a>Defines a Template</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">PUT _template/api-monitor</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"order"</span> : 0,</span><br><span class="line">  <span class="string">"index_patterns"</span>: [</span><br><span class="line">      <span class="string">"api-monitor-*"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"settings"</span>: &#123;</span><br><span class="line">      <span class="string">"index"</span>: &#123;</span><br><span class="line">        <span class="string">"number_of_shards"</span>: 2,</span><br><span class="line">        <span class="string">"number_of_replicas"</span>: 1,</span><br><span class="line">        <span class="string">"refresh_interval"</span>: <span class="string">"5s"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"mappings"</span>: &#123;</span><br><span class="line">      <span class="string">"_default_"</span>: &#123;</span><br><span class="line">        <span class="string">"dynamic_templates"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"message_field"</span>: &#123;</span><br><span class="line">              <span class="string">"path_match"</span>: <span class="string">"message"</span>,</span><br><span class="line">              <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">              <span class="string">"mapping"</span>: &#123;</span><br><span class="line">                <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">                <span class="string">"norms"</span>: <span class="literal">false</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"string_fields"</span>: &#123;</span><br><span class="line">              <span class="string">"match"</span>: <span class="string">"*"</span>,</span><br><span class="line">              <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">              <span class="string">"mapping"</span>: &#123;</span><br><span class="line">                <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">                <span class="string">"norms"</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="string">"fields"</span>: &#123;</span><br><span class="line">                  <span class="string">"keyword"</span>: &#123;</span><br><span class="line">                    <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                    <span class="string">"ignore_above"</span>: 256</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"properties"</span>: &#123;</span><br><span class="line">          <span class="string">"@timestamp"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"date"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"@version"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"geoip"</span>: &#123;</span><br><span class="line">            <span class="string">"dynamic"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"properties"</span>: &#123;</span><br><span class="line">              <span class="string">"ip"</span>: &#123;</span><br><span class="line">                <span class="string">"type"</span>: <span class="string">"ip"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="string">"location"</span>: &#123;</span><br><span class="line">                <span class="string">"type"</span>: <span class="string">"geo_point"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="string">"latitude"</span>: &#123;</span><br><span class="line">                <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="string">"longitude"</span>: &#123;</span><br><span class="line">                <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"aliases"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>order 默认 0</p>
</blockquote>
<a id="more"></a>
<h1 id="Deleting-a-Template"><a href="#Deleting-a-Template" class="headerlink" title="Deleting a Template"></a>Deleting a Template</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">DELETE _template/logstash</span><br></pre></td></tr></table></figure>
<h1 id="Getting-templates"><a href="#Getting-templates" class="headerlink" title="Getting templates"></a>Getting templates</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GET _template/logstash</span><br><span class="line"></span><br><span class="line"><span class="comment"># You can also match several templates by using wildcards like:</span></span><br><span class="line">GET _template/logstash, logstash_1</span><br></pre></td></tr></table></figure>
<h1 id="Template-exists"><a href="#Template-exists" class="headerlink" title="Template exists"></a>Template exists</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">HEAD _template/logstash</span><br></pre></td></tr></table></figure>
<h1 id="Multiple-Templates-Matching"><a href="#Multiple-Templates-Matching" class="headerlink" title="Multiple Templates Matching"></a>Multiple Templates Matching</h1>]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>index</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch踩坑</title>
    <url>/posts/19540ce1.html</url>
    <content><![CDATA[<ul>
<li>问题一 </li>
</ul>
<p>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]<br>配置 <code>/etc/sysctl.conf</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=262144</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>生效</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure>
<p>验证<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sysctl -a|grep vm.max_map_count</span><br></pre></td></tr></table></figure></p>
<ul>
<li>问题二 </li>
</ul>
<p>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]<br>max number of threads [1024] for user [XXX] is too low，increase to least [2048]<br>1、修改 <code>nofile</code> 时候，需要在 <code>/etc/sysctl.conf</code> 和 <code>/etc/security/limits.conf</code> 配置，其中 <code>/etc/sysctl.conf</code> 中配置的值需要比 <code>/etc/security/limits.conf</code> 的值大 。</p>
<p>配置 <code>/etc/sysctl.conf</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/sysctl.conf </span><br><span class="line">fs.file-max = 512000</span><br></pre></td></tr></table></figure>
<p>生效<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure></p>
<p>配置 <code>/etc/security/limits.conf</code><br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/security/limits.conf</span><br><span class="line">elasticsearch - nofile 65536</span><br></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">* - nofile 65536</span><br></pre></td></tr></table></figure></p>
<p>2、修改 <code>nofile</code> 和 <code>nproc</code><br><code>CentOS 7</code> 的 <code>nproc</code> 的修改在 <code>/etc/security/limits.d/20-nproc.conf</code>，为了方便在 <code>/etc/security/limits.conf</code> 和 <code>/etc/security/limits.d/20-nproc.conf</code> 文件里面同时都添加了 。</p>
<p>配置 <code>/etc/security/limits.conf</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/security/limits.conf</span><br><span class="line">* - nproc 65536</span><br></pre></td></tr></table></figure>
<p>配置 <code>/etc/security/limits.d/20-nproc.conf</code><br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/security/limits.d/20-nproc.conf</span><br><span class="line">* - nofile 65536</span><br><span class="line">* - nproc 65536</span><br></pre></td></tr></table></figure></p>
<p>重启系统，验证<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ulimit</span> -Hn</span><br></pre></td></tr></table></figure></p>
<p>总结：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=262144</span><br><span class="line">fs.file-max=512000</span><br><span class="line"></span><br><span class="line">$ vi /etc/security/limits.conf</span><br><span class="line">elasticsearch - nofile 65536</span><br><span class="line">* - nproc 65536</span><br><span class="line"></span><br><span class="line">$ vi /etc/security/limits.d/20-nproc.conf</span><br><span class="line">* - nofile 65536</span><br><span class="line">* - nproc 65536</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 安装 elasticsearch</title>
    <url>/posts/6a0c4822.html</url>
    <content><![CDATA[<h1 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h1><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.6/docker.html#docker-prod-cluster-composefile" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.6/docker.html#docker-prod-cluster-composefile</a></p>
<blockquote>
<p>docker-compose.yml<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:6.6.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_elasticsearch</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9200:9200"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/data/docker/elasticsearch/data:/usr/share/elasticsearch/data"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"bootstrap.memory_lock=true"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"ES_JAVA_OPTS=-Xms1g -Xmx1g"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"discovery.type=single-node"</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elknet</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">elknet:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h1><p><a href="https://www.elastic.co/guide/en/logstash/6.6/docker-config.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/6.6/docker-config.html</a></p>
<blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">logstash:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">logstash:6.6.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_logstash</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"5044:5044"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/data/docker/logstash/pipeline:/usr/share/logstash/pipeline"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/data/docker/logstash/config:/usr/share/logstash/config"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">LS_JAVA_OPTS:</span> <span class="string">"-Xmx512m -Xms512m"</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elknet</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">elknet:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>
<h1 id="kibana"><a href="#kibana" class="headerlink" title="kibana"></a>kibana</h1><p><a href="https://www.elastic.co/guide/en/kibana/6.6/docker.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/kibana/6.6/docker.html</a></p>
<blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">kibana:6.6.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_kibana</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5601</span><span class="string">:5601</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/data/docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml"</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elknet</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">elknet:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 安装 elk 环境</title>
    <url>/posts/6a0c4822.html</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote>
<p>从 Docker 仓库中拉取镜像</p>
</blockquote>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull sebp/elk</span><br></pre></td></tr></table></figure>
<blockquote>
<p>拉取指定版本镜像</p>
</blockquote>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull sebp/elk:671</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h1><h2 id="使用docker-compose"><a href="#使用docker-compose" class="headerlink" title="使用docker-compose"></a>使用docker-compose</h2><blockquote>
<p> docker-compose.yml</p>
</blockquote>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">elk:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">sebp/elk:671</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="comment"># Elasticsearch</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"9200:9200"</span></span><br><span class="line">    <span class="comment"># Logstash</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"5044:5044"</span></span><br><span class="line">  	<span class="comment"># Kibana</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"5601:5601"</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="comment"># elasticsearch</span></span><br><span class="line">    <span class="comment"># 持久日志数据</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"/data/docker/elk/elasticsearch:/var/lib/elasticsearch"</span></span><br><span class="line">    <span class="comment"># logstash</span></span><br><span class="line">    <span class="comment">## config/logstash.yml, config/jvm.options, config/pipelines.yml</span></span><br><span class="line">    <span class="comment">## logstash-plugin：/opt/logstash/bin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"/data/docker/elk/logstash/:/opt/logstash"</span></span><br><span class="line">    <span class="comment">## 01-lumberjack-input.conf, 02-beats-input.conf</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"/data/docker/elk/logstash/conf.d:/etc/logstash/conf.d"</span></span><br><span class="line">    <span class="comment"># kibana</span></span><br><span class="line">    <span class="comment">## kibana-plugin：/opt/kibana/bin</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"/data/docker/elk/kibana/:/opt/kibana"</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"bootstrap.memory_lock=true"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"ES_JAVA_OPTS=-Xss256k"</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<h2 id="启动异常"><a href="#启动异常" class="headerlink" title="启动异常"></a>启动异常</h2><ol>
<li><p>m.max_map_count [65530] is too low</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2020-08-21T04:04:58,114[o.e.b.BootstrapChecks    ] [8pUsAbG] bound or publishing to a non-loopback address, enforcing bootstrap checks</span><br><span class="line">2020-08-21T04:04:58,120[o.e.b.Bootstrap          ] [8pUsAbG] node validation exception</span><br><span class="line">[1] bootstrap checks failed</span><br><span class="line">[1]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>配置 <code>/etc/sysctl.conf</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ vi /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=262144</span><br></pre></td></tr></table></figure>
<!-- more -->
<p>生效</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure>
<p>验证<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sysctl -a|grep vm.max_map_count</span><br></pre></td></tr></table></figure></p>
<h1 id="进入容器命令行"><a href="#进入容器命令行" class="headerlink" title="进入容器命令行"></a>进入容器命令行</h1>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># centos</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;container-name&gt; /bin/bash</span><br><span class="line"><span class="comment"># alpine</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;container-name&gt; sh</span><br></pre></td></tr></table></figure>
<h1 id="Elasticsearch-索引定时清理"><a href="#Elasticsearch-索引定时清理" class="headerlink" title="Elasticsearch 索引定时清理"></a>Elasticsearch 索引定时清理</h1><ul>
<li>elasticsearch-curator 安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装 curator 源</span><br><span class="line">$ rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line"></span><br><span class="line"># 编辑 curator yum 源配置</span><br><span class="line">$ vim /etc/yum.repos.d/curator.repo</span><br><span class="line"></span><br><span class="line">[curator-5]</span><br><span class="line">name=CentOS/RHEL 7 repository for Elasticsearch Curator 5.x packages</span><br><span class="line">baseurl=https://packages.elastic.co/curator/5/centos/7</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line"># 安装 curator</span><br><span class="line">$ yum install elasticsearch-curator -y</span><br></pre></td></tr></table></figure>
<ul>
<li>配置 config.yml</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir -p /data/ELKStack/curator</span><br><span class="line">$ vim /data/ELKStack/curator/config.yml</span><br><span class="line"></span><br><span class="line">lient:</span><br><span class="line">  hosts:</span><br><span class="line">    - 172.16.1.3</span><br><span class="line">  port: 9200</span><br><span class="line">  url_prefix:</span><br><span class="line">  use_ssl: False</span><br><span class="line">  certificate:</span><br><span class="line">  client_cert:</span><br><span class="line">  client_key:</span><br><span class="line">  ssl_no_validate: False</span><br><span class="line">  http_auth:</span><br><span class="line">  timeout: 150</span><br><span class="line">  master_only: False</span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line">  loglevel: INFO</span><br><span class="line">  logfile:</span><br><span class="line">  logformat: default</span><br><span class="line">  blacklist: [&apos;elasticsearch&apos;, &apos;urllib3&apos;]</span><br></pre></td></tr></table></figure>
<ul>
<li>配置 action.yml 清理规则</li>
</ul>
<blockquote>
<p>/data/ELKStack/curator/action.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">actions:</span></span><br><span class="line">  <span class="attr">1:</span></span><br><span class="line">    <span class="attr">action:</span> <span class="string">delete_indices</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">&gt;-</span></span><br><span class="line">      <span class="string">Delete</span> <span class="string">indices</span> <span class="string">older</span> <span class="string">than</span> <span class="number">60</span> <span class="string">days.</span> <span class="string">Ignore</span> <span class="string">the</span> <span class="string">error</span> <span class="string">if</span> <span class="string">the</span>    <span class="string">filter</span> <span class="string">does</span> <span class="string">not</span> <span class="string">result</span> <span class="string">in</span> <span class="string">an</span> <span class="string">actionable</span> <span class="string">list</span> <span class="string">of</span> <span class="string">indices</span>    <span class="string">(ignore_empty_list)</span> <span class="string">and</span> <span class="string">exit</span> <span class="string">cleanly.</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">ignore_empty_list:</span> <span class="literal">True</span></span><br><span class="line">      <span class="attr">disable_action:</span> <span class="literal">False</span></span><br><span class="line">    <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">pattern</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">regex</span></span><br><span class="line">      <span class="comment"># 保留 kibana|json|monitoring|metadata 不被清理</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">'^((?!(kibana|json|monitoring|metadata)).)*$'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">age</span></span><br><span class="line">      <span class="attr">source:</span> <span class="string">creation_date</span></span><br><span class="line">      <span class="attr">direction:</span> <span class="string">older</span></span><br><span class="line">      <span class="comment">#timestring: '%Yi-%m-%d'</span></span><br><span class="line">      <span class="attr">unit:</span> <span class="string">days</span></span><br><span class="line">      <span class="attr">unit_count:</span> <span class="number">60</span></span><br></pre></td></tr></table></figure>
<ul>
<li>设置计划任务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ crontab -e  0 0 * * * /usr/bin/curator --config /data/ELKStack/curator/config.yml /data/ELKStack/curator/action.yml 1&gt;&gt; /tmp/curator.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>filebeat-6.4.0 使用</title>
    <url>/posts/9cf2c75c.html</url>
    <content><![CDATA[<blockquote>
<p>filebeat 版本 6.6.x</p>
</blockquote>
<h1 id="配置输入"><a href="#配置输入" class="headerlink" title="配置输入"></a>配置输入</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="comment"># 输入类型：[log, stdin, redis, udp, docker, tcp, syslog, netflow]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="comment"># Change to true to enable this input configuration.</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Paths that should be crawled and fetched. Glob based paths.</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/logs/*.log</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="动态加载外部配置文件"><a href="#动态加载外部配置文件" class="headerlink" title="动态加载外部配置文件"></a>动态加载外部配置文件</h1><blockquote>
<p>动态配置</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#============================= Filebeat modules ===============================</span></span><br><span class="line"></span><br><span class="line"><span class="attr">filebeat.config:</span></span><br><span class="line">  <span class="attr">modules:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class="line">    <span class="attr">reload.enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">#reload.period: 10s</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 动态加载外部输入配置文件</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/inputs.d/*.yml</span></span><br><span class="line">    <span class="attr">reload.enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">reload.period:</span> <span class="string">10s</span></span><br></pre></td></tr></table></figure>
<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /opt/filebeat/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nohup ./filebeat -e -c filebeat.yml &amp;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>grok patterns</title>
    <url>/posts/a8d0988c.html</url>
    <content><![CDATA[<p><a href="https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns" target="_blank" rel="noopener">官方Grok Pattern源码</a></p>
<h1 id="Custom-Grok-Pattern"><a href="#Custom-Grok-Pattern" class="headerlink" title="Custom Grok Pattern"></a>Custom Grok Pattern</h1><blockquote>
<p>自定义的正则格式</p>
</blockquote>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?&lt;field_name&gt;the pattern here)</span><br></pre></td></tr></table></figure>
<h1 id="General-Grok-Patterns"><a href="#General-Grok-Patterns" class="headerlink" title="General Grok Patterns"></a>General Grok Patterns</h1><blockquote>
<p> USER</p>
</blockquote>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;USERNAME&#125;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p> USERNAME</p>
</blockquote>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[a-zA-Z0-9._-]+</span><br></pre></td></tr></table></figure>
<blockquote>
<p>BASE10NUM<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?&lt;![0-9.+-])(?&gt;[+-]?(?:(?:[0-9]+(?:<span class="tag">\<span class="name">.</span><span class="string">[0-9]</span></span>+)?)|(?:<span class="tag">\<span class="name">.</span><span class="string">[0-9]</span></span>+)))</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>BASE16FLOAT<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">b</span></span>(?&lt;![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa-f]+(?:<span class="tag">\<span class="name">.</span><span class="string">[0-9A-Fa-f]</span></span>*)?)|(?:<span class="tag">\<span class="name">.</span><span class="string">[0-9A-Fa-f]</span></span>+)))<span class="tag">\<span class="name">b</span></span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>INT<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:[+-]?(?:[0-9]+))</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>NONNEGINT<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">b</span></span>(?:[0-9]+)<span class="tag">\<span class="name">b</span></span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>NUMBER<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:<span class="comment">%&#123;BASE10NUM&#125;) BASE16NUM (?&lt;![0-9A-Fa-f])(?:[+-]?(?:0x)?(?:[0-9A-Fa-f]+))</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>POSINT<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">b</span></span>(?:[1-9][0-9]*)<span class="tag">\<span class="name">b</span></span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>WORD<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">b</span></span><span class="tag">\<span class="name">w</span></span>+<span class="tag">\<span class="name">b</span></span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>NOTSPACE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">S</span></span>+</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>SPACE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">s*</span></span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATA<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">.*?</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>GREEDYDATA<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">.*</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>QUOTEDSTRING<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?&gt;(?&lt;!<span class="tag">\<span class="name">\</span></span>)(?&gt;"(?&gt;<span class="tag">\<span class="name">\</span></span>.|[^<span class="tag">\<span class="name">\</span></span>"]+)+"|""|(?&gt;'(?&gt;<span class="tag">\<span class="name">\</span></span>.|[^<span class="tag">\<span class="name">\</span></span>']+)+')|''|(?&gt;`(?&gt;<span class="tag">\<span class="name">\</span></span>.|[^<span class="tag">\<span class="name">\</span></span>`]+)+`)|``))</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>UUID<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[A-Fa-f0-9]&#123;8&#125;-(?:[A-Fa-f0-9]&#123;4&#125;-)&#123;3&#125;[A-Fa-f0-9]&#123;12&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="Date-and-Time-Grok-Patterns"><a href="#Date-and-Time-Grok-Patterns" class="headerlink" title="Date and Time Grok Patterns"></a>Date and Time Grok Patterns</h1><blockquote>
<p>MONTH<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">b</span></span>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)<span class="tag">\<span class="name">b</span></span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>MONTHNUM<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:0?[1-9]|1[0-2])</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>MONTHNUM2<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:0[1-9]|1[0-2])</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>MONTHDAY<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DAY<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>YEAR<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?&gt;<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>)&#123;1,2&#125; HOUR (?:2[0123]|[01]?[0-9]) MINUTE (?:[0-5][0-9])</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>SECOND<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?) TIME (?!&lt;[0-9])<span class="comment">%&#123;HOUR&#125;:%&#123;MINUTE&#125;(?::%&#123;SECOND&#125;)(?![0-9])</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>Note: 60 is a leap second in most time standards.</p>
<blockquote>
<p>DATE_US<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;MONTHNUM&#125;[/-]%&#123;MONTHDAY&#125;[/-]%&#123;YEAR&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATE_EU<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;MONTHDAY&#125;[./-]%&#123;MONTHNUM&#125;[./-]%&#123;YEAR&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>ISO8601_TIMEZONE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:Z|[+-]<span class="comment">%&#123;HOUR&#125;(?::?%&#123;MINUTE&#125;))</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>ISO8601_SECOND<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:<span class="comment">%&#123;SECOND&#125;|60)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>TIMESTAMP_ISO8601<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;YEAR&#125;-%&#123;MONTHNUM&#125;-%&#123;MONTHDAY&#125;[T ]%&#123;HOUR&#125;:?%&#123;MINUTE&#125;(?::?%&#123;SECOND&#125;)?%&#123;ISO8601_TIMEZONE&#125;?</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;DATE_US&#125;|%&#123;DATE_EU&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATESTAMP<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;DATE&#125;[- ]%&#123;TIME&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>TZ<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:[PMCE][SD]T|UTC)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATESTAMP_RFC822<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;DAY&#125; %&#123;MONTH&#125; %&#123;MONTHDAY&#125; %&#123;YEAR&#125; %&#123;TIME&#125; %&#123;TZ&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATESTAMP_RFC2822<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;DAY&#125;, %&#123;MONTHDAY&#125; %&#123;MONTH&#125; %&#123;YEAR&#125; %&#123;TIME&#125; %&#123;ISO8601_TIMEZONE&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATESTAMP_OTHER<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;DAY&#125; %&#123;MONTH&#125; %&#123;MONTHDAY&#125; %&#123;TIME&#125; %&#123;TZ&#125; %&#123;YEAR&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>DATESTAMP_EVENTLOG<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;YEAR&#125;%&#123;MONTHNUM2&#125;%&#123;MONTHDAY&#125;%&#123;HOUR&#125;%&#123;MINUTE&#125;%&#123;SECOND&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="Java-Grok-Patterns"><a href="#Java-Grok-Patterns" class="headerlink" title="Java Grok Patterns"></a>Java Grok Patterns</h1><blockquote>
<p>JAVACLASS<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:[a-zA-Z<span class="formula">$_][a-zA-Z$</span>_0-9]*<span class="tag">\<span class="name">.</span></span>)*[a-zA-Z<span class="formula">$_][a-zA-Z$</span>_0-9]*</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>JAVAFILE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:[A-Za-z0-9_. -]+)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>A space character is allowed to match special cases, such as Native Method or Unknown Source.</p>
<blockquote>
<p>JAVAMETHOD<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:(&lt;init&gt;)|[a-zA-Z<span class="formula">$_][a-zA-Z$</span>_0-9]*)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>JAVASTACKTRACEPART<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;SPACE&#125;at %&#123;JAVACLASS:class&#125;\.%&#123;JAVAMETHOD:method&#125;\(%&#123;JAVAFILE:file&#125;(?::%&#123;NUMBER:line&#125;)?\)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>The line number is optional in special cases, such as Native Method or Unknown Source.</p>
<h1 id="Log-Grok-Patterns"><a href="#Log-Grok-Patterns" class="headerlink" title="Log Grok Patterns"></a>Log Grok Patterns</h1><blockquote>
<p>SYSLOGTIMESTAMP<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;MONTH&#125; +%&#123;MONTHDAY&#125; %&#123;TIME&#125; PROG (?:[\w._/%-]+)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>SYSLOGPROG<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;PROG:program&#125;(?:\[%&#123;POSINT:pid&#125;\])?</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>SYSLOGHOST<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;IPORHOST&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>SYSLOGFACILITY<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">&lt;<span class="comment">%&#123;NONNEGINT:facility&#125;.%&#123;NONNEGINT:priority&#125;&gt;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>SYSLOGBASE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;SYSLOGTIMESTAMP:timestamp&#125; (?:%&#123;SYSLOGFACILITY&#125; )?%&#123;SYSLOGHOST:logsource&#125; %&#123;SYSLOGPROG&#125;:</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>HTTPDATE<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;MONTHDAY&#125;/%&#123;MONTH&#125;/%&#123;YEAR&#125;:%&#123;TIME&#125; %&#123;INT&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>QS<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;QUOTEDSTRING&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>COMMONAPACHELOG<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;IPORHOST:clientip&#125; %&#123;USER:ident&#125; %&#123;USER:auth&#125; \[%&#123;HTTPDATE:timestamp&#125;\] "(?:%&#123;WORD:verb&#125; %&#123;NOTSPACE:request&#125;(?: HTTP/%&#123;NUMBER:httpversion&#125;)?|%&#123;DATA:rawrequest&#125;)" %&#123;NUMBER:response&#125; (?:%&#123;NUMBER:bytes&#125;|-)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>COMBINEDAPACHELOG<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;COMMONAPACHELOG&#125; %&#123;QS:referrer&#125; %&#123;QS:agent&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>LOGLEVEL<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Ii]nfo|INFO|[Ww]arn?(?:ing)?|WARN?(?:ING)?|[Ee]rr?(?:or)?|ERR?(?:OR)?|[Cc]rit?(?:ical)?|CRIT?(?:ICAL)?|[Ff]atal|FATAL|[Ss]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="Networking-Grok-Patterns"><a href="#Networking-Grok-Patterns" class="headerlink" title="Networking Grok Patterns"></a>Networking Grok Patterns</h1><blockquote>
<p>MAC<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:<span class="comment">%&#123;CISCOMAC&#125;|%&#123;WINDOWSMAC&#125;|%&#123;COMMONMAC&#125;)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>CISCOMAC<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:(?:[A-Fa-f0-9]&#123;4&#125;<span class="tag">\<span class="name">.</span></span>)&#123;2&#125;[A-Fa-f0-9]&#123;4&#125;)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>COMMONMAC<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:(?:[A-Fa-f0-9]&#123;2&#125;:)&#123;5&#125;[A-Fa-f0-9]&#123;2&#125;)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>WINDOWSMAC<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:(?:[A-Fa-f0-9]&#123;2&#125;-)&#123;5&#125;[A-Fa-f0-9]&#123;2&#125;)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>HOST<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;HOSTNAME&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>HOSTNAME<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">b</span></span>(?:[0-9A-Za-z][0-9A-Za-z-]&#123;0,62&#125;)(?:<span class="tag">\<span class="name">.</span></span>(?:[0-9A-Za-z][0-9A-Za-z-]&#123;0,62&#125;))*(<span class="tag">\<span class="name">.</span></span>?|<span class="tag">\<span class="name">b</span></span>)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>HOSTPORT<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;IPORHOST&#125;:%&#123;POSINT&#125;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>IPORHOST<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:<span class="comment">%&#123;HOSTNAME&#125;|%&#123;IP&#125;)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>IP<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:<span class="comment">%&#123;IPV6&#125;|%&#123;IPV4&#125;)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>IPV6<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">((([0-9A-Fa-f]&#123;1,4&#125;:)&#123;7&#125;([0-9A-Fa-f]&#123;1,4&#125;|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;6&#125;(:[0-9A-Fa-f]&#123;1,4&#125;|((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;5&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,2&#125;)|:((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;)|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;4&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,3&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)?:((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;3&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,4&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,2&#125;:((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;2&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,5&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,3&#125;:((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;))|:))|(([0-9A-Fa-f]&#123;1,4&#125;:)&#123;1&#125;(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,6&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,4&#125;:((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;))|:))|(:(((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;1,7&#125;)|((:[0-9A-Fa-f]&#123;1,4&#125;)&#123;0,5&#125;:((25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>)(<span class="tag">\<span class="name">.</span></span>(25[0-5]|2[0-4]<span class="tag">\<span class="name">d</span></span>|1<span class="tag">\<span class="name">d</span></span><span class="tag">\<span class="name">d</span></span>|[1-9]?<span class="tag">\<span class="name">d</span></span>))&#123;3&#125;))|:)))(<span class="comment">%.+)? IPV4 (?&lt;![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]&#123;1,2&#125;)[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]&#123;1,2&#125;)[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]&#123;1,2&#125;)[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]&#123;1,2&#125;))(?![0-9])</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="Path-Grok-Patterns"><a href="#Path-Grok-Patterns" class="headerlink" title="Path Grok Patterns"></a>Path Grok Patterns</h1><blockquote>
<p>PATH<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:<span class="comment">%&#123;UNIXPATH&#125;|%&#123;WINPATH&#125;)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>UNIXPATH<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?&gt;/(?&gt;[<span class="tag">\<span class="name">w</span></span>_<span class="comment">%!$@:.,~-]+|\\.)*)+ TTY (?:/dev/(pts|tty([pq])?)(\w+)?/?(?:[0-9]+))</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>WINPATH<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?&gt;[A-Za-z]+:|<span class="tag">\<span class="name">\</span></span>)(?:<span class="tag">\<span class="name">\</span><span class="string">[^\\?*]</span></span>*)+ URIPROTO [A-Za-z]+(<span class="tag">\<span class="name">+</span><span class="string">[A-Za-z+]</span></span>+)?</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>URIHOST<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;IPORHOST&#125;(?::%&#123;POSINT:port&#125;)?</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>URIPATH<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">(?:/[A-Za-z0-9<span class="formula">$.+!*'()&#123;&#125;,~:;=@#%_<span class="tag">\<span class="name">-</span></span>]*)+ #URIPARAM <span class="tag">\<span class="name">?</span></span>(?:[A-Za-z0-9]+(?:=(?:[^&amp;]*))?(?:&amp;(?:[A-Za-z0-9]+(?:=(?:[^&amp;]*))?)?)*)?</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>URIPARAM<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">?</span><span class="string">[A-Za-z0-9$.+!*'|()&#123;&#125;,~@#%&amp;/=:;_?\-\[\]</span></span>]*</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>URIPATHPARAM<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;URIPATH&#125;(?:%&#123;URIPARAM&#125;)?</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>URI<br><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%&#123;URIPROTO&#125;://(?:%&#123;USER&#125;(?::[^@]*)?@)?(?:%&#123;URIHOST&#125;)?(?:%&#123;URIPATHPARAM&#125;)?</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>grok</tag>
      </tags>
  </entry>
  <entry>
    <title>logstash 使用</title>
    <url>/posts/1e58019c.html</url>
    <content><![CDATA[<h1 id="启动logstash"><a href="#启动logstash" class="headerlink" title="启动logstash"></a>启动logstash</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bin/logstash -f /opt/logstash/conf.d/ -r <span class="literal">true</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>start.sh 启动脚本</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author: YL</span></span><br><span class="line"><span class="comment"># @Date:   2019-03-07 17:19:33</span></span><br><span class="line"><span class="comment"># @Last Modified by:   YL</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2019-03-08 10:31:06</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> `dirname <span class="variable">$0</span>`</span><br><span class="line">LS_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line">LS_CONF=<span class="string">"<span class="variable">$LS_HOME</span>/conf.d/"</span></span><br><span class="line">LS_HOME_CORE_LIB=<span class="string">"<span class="variable">$LS_HOME</span>/logstash-core/lib"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测Tomcat是否启动（进程ID）</span></span><br><span class="line">LS_PID=`ps -ef | grep <span class="variable">$LS_HOME_CORE_LIB</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#==================================================================================</span></span><br><span class="line"><span class="comment"># JVM Configuration</span></span><br><span class="line"><span class="comment">#==================================================================================</span></span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_144</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">operate</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"kill"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$LS_PID</span>"</span> = <span class="string">""</span> ]] ; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"logstash not alive"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">kill</span> -9 <span class="variable">$LS_PID</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"start"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        nohup <span class="variable">$LS_HOME</span>/bin/logstash -f <span class="variable">$LS_CONF</span> -r <span class="literal">true</span> &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"not support: <span class="variable">$1</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">""</span> || <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"restart"</span> || <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"start"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">    operate <span class="built_in">kill</span></span><br><span class="line">    operate start</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"kill"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">    operate <span class="built_in">kill</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"check"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$LS_PID</span>"</span> = <span class="string">""</span> ]] ; <span class="keyword">then</span></span><br><span class="line">        operate start</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"not support: <span class="variable">$1</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>crontab</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">* * * * * /opt/logstash/start.sh check</span><br></pre></td></tr></table></figure>
<h1 id="logstash-config-命名"><a href="#logstash-config-命名" class="headerlink" title="logstash config 命名"></a>logstash config 命名</h1><blockquote>
<p>思考：如果<code>logstash</code>配置了多个<code>config</code>(多个<code>input</code>或多个<code>filter</code>)，怎样来控制它们被执行的顺序呢？</p>
</blockquote>
<p>答案是<code>logstash</code>是按照<code>config</code> <code>file</code>的文件名，按照字母顺序合并了所有的<code>config</code> <code>file</code>，然后才处理的。</p>
<ul>
<li>最佳命名实践</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">00_input.conf</span><br><span class="line"></span><br><span class="line">10_filter_global.conf</span><br><span class="line"></span><br><span class="line">20_filter_nginx.conf</span><br><span class="line">21_filter_vsftpd.conf</span><br><span class="line"></span><br><span class="line">999_output.conf</span><br></pre></td></tr></table></figure>
<h1 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">    if [index_prefix] &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; [ &quot;elasticsearch:9200&quot; ]</span><br><span class="line">            index =&gt; &quot;%&#123;index_prefix&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; [ &quot;elasticsearch:9200&quot; ]</span><br><span class="line">            index =&gt; &quot;logstash-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>比较操作有：</p>
<ul>
<li>相等: <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></li>
<li>正则: <code>=~(匹配正则)</code>, <code>!~(不匹配正则)</code></li>
<li>包含: <code>in(包含)</code>, <code>not in(不包含)</code></li>
</ul>
<p>布尔操作：</p>
<ul>
<li><code>and(与)</code>, <code>or(或)</code>, <code>nand(非与)</code>, <code>xor(非或)</code></li>
</ul>
<p>一元运算符：</p>
<ul>
<li><code>!(取反)</code></li>
<li><code>()</code>(复合表达式), <code>!()</code>(对复合表达式结果取反)</li>
</ul>
<h1 id="remove-field"><a href="#remove-field" class="headerlink" title="remove _field"></a>remove _field</h1><ul>
<li><p>删除字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mutate &#123;</span><br><span class="line">	remove_field =&gt; [ &quot;source&quot; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除嵌套字段（Nested fields）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mutate &#123;</span><br><span class="line">	remove_field =&gt; [ &quot;[host][name]&quot; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：如果没有<code>host</code>字段，<code>[host][name]</code>引用会创建一个空的<code>host</code>字典，为了避免这种情况，可以按以下方式去做：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if [host] and [host][name] == &quot;null&quot; &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ &quot;[host][name]&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="logstash-logback-encoder"><a href="#logstash-logback-encoder" class="headerlink" title="logstash-logback-encoder"></a>logstash-logback-encoder</h1><p><code>logback</code>发送日志到<code>logstash</code></p>
<ul>
<li><p>解决<code>logstash</code>到<code>elasticsearch</code>时区差8小时的问题</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">timestamp</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">timeZone</span>&gt;</span>GMT+8<span class="tag">&lt;/<span class="name">timeZone</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">timestamp</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置过滤器，过滤掉不需要的日志</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.filter.EvaluatorFilter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">evaluator</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.boolex.JaninoEventEvaluator"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">expression</span>&gt;</span>return message.contains("api_monitor");<span class="tag">&lt;/<span class="name">expression</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">evaluator</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>pom.xml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.logstash.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logstash-logback-encoder<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.janino<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>janino<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>logback-spring.xml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"logstash"</span> <span class="attr">class</span>=<span class="string">"net.logstash.logback.appender.LogstashTcpSocketAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">destination</span>&gt;</span>192.168.56.101:5044<span class="tag">&lt;/<span class="name">destination</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">keepAliveDuration</span>&gt;</span>5 minutes<span class="tag">&lt;/<span class="name">keepAliveDuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">reconnectionDelay</span>&gt;</span>1 second<span class="tag">&lt;/<span class="name">reconnectionDelay</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.filter.EvaluatorFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">evaluator</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.boolex.JaninoEventEvaluator"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">expression</span>&gt;</span></span><br><span class="line">                    return message.contains("api_monitor");</span><br><span class="line">                <span class="tag">&lt;/<span class="name">expression</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">evaluator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span> <span class="attr">class</span>=<span class="string">"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">timestamp</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">timeZone</span>&gt;</span>GMT+8<span class="tag">&lt;/<span class="name">timeZone</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">timestamp</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">pattern</span>&gt;</span></span><br><span class="line">                        &#123;</span><br><span class="line">                        "time": "%d&#123;yy-MM-dd HH:mm:ss&#125;",</span><br><span class="line">                        "level": "%p",</span><br><span class="line">                        "thread": "%t",</span><br><span class="line">                        "class": "%c&#123;2&#125;.%M\\(%L\\)",</span><br><span class="line">                        "message": "%m"</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">stackTrace</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">throwableConverter</span> <span class="attr">class</span>=<span class="string">"net.logstash.logback.stacktrace.ShortenedThrowableConverter"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">maxDepthPerThrowable</span>&gt;</span>full<span class="tag">&lt;/<span class="name">maxDepthPerThrowable</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">maxLength</span>&gt;</span>full<span class="tag">&lt;/<span class="name">maxLength</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shortenedClassNameLength</span>&gt;</span>20<span class="tag">&lt;/<span class="name">shortenedClassNameLength</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">rootCauseFirst</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rootCauseFirst</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">inlineHash</span>&gt;</span>true<span class="tag">&lt;/<span class="name">inlineHash</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- generated class names --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>\$\$FastClassByCGLIB\$\$<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>\$\$EnhancerBySpringCGLIB\$\$<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^sun\.reflect\..*\.invoke<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- JDK internals --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^com\.sun\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^sun\.net\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- dynamic invocation --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.cglib\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.transaction\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.validation\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.app\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.aop\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^java\.lang\.reflect\.Method\.invoke<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- Spring plumbing --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.ws\..*\.invoke<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.ws\.transport\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.springframework\.web\.filter\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- Tomcat internals --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.apache\.tomcat\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.apache\.catalina\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^org\.apache\.coyote\.<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>^java\.lang\.Thread\.run$<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">throwableConverter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">stackTrace</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"logstash"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="使用中遇到的问题"><a href="#使用中遇到的问题" class="headerlink" title="使用中遇到的问题"></a>使用中遇到的问题</h1><h2 id="gsub"><a href="#gsub" class="headerlink" title="gsub"></a>gsub</h2><blockquote>
<p>有问题</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mutate &#123;</span><br><span class="line">    gsub =&gt; [</span><br><span class="line">        &quot;city&quot;, &quot;5&quot;, &quot;深圳&quot;,</span><br><span class="line">        &quot;city&quot;, &quot;50&quot;, &quot;东莞&quot;,</span><br><span class="line">        &quot;city&quot;, &quot;51&quot;, &quot;江门&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"># 5进来，替换成“深圳”</span><br><span class="line"># 50进来，会被替换成“深圳0”</span><br><span class="line"># 51进来，会被替换成“深圳1”</span><br></pre></td></tr></table></figure>
<blockquote>
<p>正常</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mutate &#123;</span><br><span class="line">    gsub =&gt; [</span><br><span class="line">        &quot;city&quot;, &quot;^5$&quot;, &quot;深圳&quot;,</span><br><span class="line">        &quot;city&quot;, &quot;^50$&quot;, &quot;东莞&quot;,</span><br><span class="line">        &quot;city&quot;, &quot;^51$&quot;, &quot;江门&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"># 5进来，替换成“深圳”</span><br><span class="line"># 50进来，会被替换成“东莞”</span><br><span class="line"># 51进来，会被替换成“江门”</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mutate &#123;</span><br><span class="line">    gsub =&gt; [</span><br><span class="line">        &quot;city&quot;, &quot;50&quot;, &quot;东莞&quot;,</span><br><span class="line">        &quot;city&quot;, &quot;51&quot;, &quot;江门&quot;,</span><br><span class="line">        &quot;city&quot;, &quot;5&quot;, &quot;深圳&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"># 5进来，替换成“深圳”</span><br><span class="line"># 50进来，会被替换成“东莞”</span><br><span class="line"># 51进来，会被替换成“江门”</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>logback</tag>
        <tag>logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>安装、配置 Elasticsearch</title>
    <url>/posts/4c158d.html</url>
    <content><![CDATA[<h3 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h3><ul>
<li><p>下载并安装 .zip 包</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.cn/downloads/elasticsearch/elasticsearch-5.0.2.zip</span><br><span class="line">sha1sum elasticsearch-5.0.2.zip</span><br><span class="line">unzip elasticsearch-5.0.2.zip</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-5.0.2/</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载并安装 .tar.gz 包</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.cn/downloads/elasticsearch/elasticsearch-5.0.2.tar.gz</span><br><span class="line">sha1sum elasticsearch-5.0.2.tar.gz</span><br><span class="line">tar -zxvf elasticsearch-5.0.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-5.0.2/</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h3 id="运行-Elasticsearch"><a href="#运行-Elasticsearch" class="headerlink" title="运行 Elasticsearch"></a>运行 Elasticsearch</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/elasticsearch</span><br></pre></td></tr></table></figure>
<p>Window 系统也是一样。默认的，Elasticsearch 运行在前台，并且打印日志，可以通过 ctrl+c 来停止它的运行。Windows 系统还可以通过 elasticsearch-service.bat 命令来将 Elasticsearch 注册为一个服务。<br>你可以在浏览器打开 localhost:9200，来查看 Elasticsearch 是否运行。<br>日志输出可以通过 -q 或者 -quiet 选项来禁止。<br>将 Elasticsearch 当做守护进程来运行<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/elasticsearch -d -p pid</span><br></pre></td></tr></table></figure></p>
<p>日志信息记录在 $ES_HOME/logs/，proces id 会记录在 pid 文件。<br>停止 Elasticsearch 使用如下命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill &apos;cat pid&apos;</span><br></pre></td></tr></table></figure></p>
<h3 id="配置-Elasticsearch"><a href="#配置-Elasticsearch" class="headerlink" title="配置 Elasticsearch"></a>配置 Elasticsearch</h3><p>Elasticsearch 默认从 $ES_HOME/config/elasticsearch.yml 加载配置文件。<br>配置文件中的配置都可以通过命令来设定，使用 -E 语法：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/elasticsearch -d -Ecluster.name=my_cluster -Enode.name=node_1</span><br></pre></td></tr></table></figure></p>
<p>如果值中带有空格，在值必须使用””包囊起来。<br>一般，集群层面的配置（例如：cluster.name）应该添加到 elasticsearch.yml 文件，近点层面的设置（例如：node.name）可以通过命令来设置。</p>
<h4 id="3-1-重要的系统配置"><a href="#3-1-重要的系统配置" class="headerlink" title="3.1 重要的系统配置"></a>3.1 重要的系统配置</h4><p>启动 <code>elasticsearch</code> 时候遇到 <code>nofile</code>、<code>nproc</code>、<code>jvm</code> 等报错</p>
<h4 id="3-2-设置-JVM-参数"><a href="#3-2-设置-JVM-参数" class="headerlink" title="3.2 设置 JVM 参数"></a>3.2 设置 JVM 参数</h4><p>首选的设置JVM参数的方法是通过 config/jvm.options 配置文件（使用 .zip 或者 .tar.gz 安装包时），/etc/elasticsearch/jvm.options（当使用 Debian 或者 RPM 安装包时）。JVM 参数必须以 - 开始，你可以添加自定义JVM标识并且把这个配置上传到你的版本控制系统。</p>
<p>默认的 Elasticsearch 设置的 JVM 内存大小为2GB，当向生产环境部署时要确定 Elasticsearch 有足够的内存可用。好的规则是：</p>
<ul>
<li>设置-Xms与-Xmx相等</li>
<li>注意太大的内存容易产生长的垃圾回收停顿</li>
<li>-Xmx不要超过你物理内存的50%</li>
<li>不要设置-Xmx超过JVM用来压缩对象指针的大小，精确的临界值不是固定的，但是接近于32GB。  </li>
</ul>
<p>下面是设置JVM内存大小的例子：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Xms2g </span><br><span class="line">-Xmx2g</span><br></pre></td></tr></table></figure></p>
<h4 id="3-3-禁止内存交换"><a href="#3-3-禁止内存交换" class="headerlink" title="3.3 禁止内存交换"></a>3.3 禁止内存交换</h4><p>大多数操作系统会用尽可能多的内存用于文件系统缓存和及早换出无用的应用内存。这可能导致一部分JVM内存被交换到硬盘上。</p>
<p>这种内存交换非常不利于性能和节点的稳定性。应该竭尽所能来避免这种情况。它能引起垃圾回收持续长达数分钟而不是几毫秒并且能导致节点响应缓慢甚至与集群失去联系。</p>
<p>这里有三种方法来禁止内存交换：  </p>
<h5 id="启用-bootstrap-memory-lock"><a href="#启用-bootstrap-memory-lock" class="headerlink" title="启用 bootstrap.memory_lock"></a>启用 bootstrap.memory_lock</h5><p>通过使用 Linux/Unix 系统的 mlockall 或者 Windows 系统的 VirtualLock 尝试锁定 RAM 中的进程地址空间，防止任何 Elasticsearch 内存被交换。可以通过向 config/elasticsearch.yml 文件中添加以下语句来实现：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bootstrap.memory_lock: true</span><br></pre></td></tr></table></figure></p>
<p>警告：mlockall 如果尝试分配超过了可用的内存，可能会引起 JVM 或者 shell session 退出。在启动E lasticsearch 后，你可以检查下设置是否生效了，可以通过检查下面请求响应中的 mlockall 值：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET _nodes?filter_path=**.mlockall</span><br></pre></td></tr></table></figure></p>
<p>如果你看到 mlockall 是 false，那说明禁止内存交换失败了。并且日志里会看到类似下面的话：Unable to lock JVM Memory.</p>
<p>最可能的原因是，在Linux/Unix操作系统，用户运行的Elasticsearch没有锁定内存的权限。可以通过下面的方法来解决：</p>
<p>使用 .zip 和 .tar.gz 这种安装包时，在 /etc/security/limits.conf 文件中设置 memlock 为 unlimited。</p>
<p>其他方式就不翻译了。</p>
<p>RPM and Debian<br>Set MAX_LOCKED_MEMORY to unlimited in the system configuration file (or see below for systems using systemd).<br>Systems using systemd<br>Set LimitMEMLOCK to infinity in the systemd configuration.</p>
<p>还有一种 mlockall 可能失败的情况是临时文件夹（通常是 /tmp ）挂载时设定了 noexec 选项。这种情况可以通过指定一个新的临时文件夹来解决，使用 ES_JAVA_OPTS 环境变量：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export ES_JAVA_OPTS=&quot;$ES_JAVA_OPTS -Djava.io.tmpdir=/path/to/temp/dir&quot;</span><br><span class="line">./bin/elasticsearch</span><br></pre></td></tr></table></figure></p>
<p>或者在 jvm.options 配置文件里设置。  </p>
<h5 id="禁止所有文件交换"><a href="#禁止所有文件交换" class="headerlink" title="禁止所有文件交换"></a>禁止所有文件交换</h5><p>第二种禁止内存交换的方式是完全禁止交换。通常 Elasticsearch 是一台服务器唯一运行的服务，它的内存使用被JVM控制着，所以没有必要允许交换。</p>
<p>在 Linux 系统你可以通过运行以下代码禁止内存交换：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo swapoff -a</span><br></pre></td></tr></table></figure></p>
<p>如果要永久禁用，则需要编辑 /etc/fstab 文件，然后注释掉所有包含 swap 的行。</p>
<p>在 Windows 系统可以通过系统属性 → 高级系统设置 → 性能 → 高级选项卡 → 虚拟内存 然后设置为无分页文件。（Windows 7）</p>
<h4 id="3-4-文件描述符"><a href="#3-4-文件描述符" class="headerlink" title="3.4 文件描述符"></a>3.4 文件描述符</h4><p>这个设置只针对 Linux 和 macOS 操作系统，如果运行在 Windows 系统则可以安全的被忽略。</p>
<p>Elasticsearch 使用了大量的文件描述符或者文件句柄。文件描述符将要被用完时会导致灾难性的后果，并且非常可能引起数据丢失。确保增加运行 Elasticsearch 的用户打开文件描述符的数量至少为65,536或者更高。</p>
<p>对于 .zip 和 .tar.gz 安装包，在启动 Elasticsearch 前以root身份设置ulimit -n 65536，或者修改 /etc/security/limits.conf 文件，设置 nofile 参数为65536或更高。</p>
<p>RPM 和 Debian 的安装包已经设置了默认最大文件描述符数为65536，不需要额外配置。</p>
<p>你可以检查每个节点的 max_file_descriptors 配置情况：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET _nodes/stats/process?filter_path=**.max_file_descriptors</span><br></pre></td></tr></table></figure></p>
<h4 id="3-5-虚拟内存"><a href="#3-5-虚拟内存" class="headerlink" title="3.5 虚拟内存"></a>3.5 虚拟内存</h4><p>Elasticsearch 默认使用一个 hybrid mmapfs/niofs 来存储它的索引。操作系统默认限制的内存映射数是比较低的，可能会引起内存溢出异常。</p>
<p>在 Linux，你可以用 root 身份通过以下命令来增加这个限制：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure></p>
<p>要想永久的增加 vm.max_map_count 设置，需要编辑 /etc/sysctl.conf 文件。重启后通过：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl vm.max_map_count</span><br></pre></td></tr></table></figure></p>
<p>来检验设置是否生效</p>
<p>RPM 和 Debian安装包将会自动设置这个配置。不需要额外的操作。</p>
<h4 id="3-6-线程数"><a href="#3-6-线程数" class="headerlink" title="3.6 线程数"></a>3.6 线程数</h4><p>Elasticsearch 使用多个线程池来进行不同类型的操作。当需要时能够创建新线程是很重要的。确保 Elasticsearch 用户能创建的线程数最少为2048个。</p>
<p>可以在启动前通过设置 ulimit -u 2048，或者在 /etc/security/limits.conf 文件里设置 nproc 为2048。</p>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>安装、配置 kibana</title>
    <url>/posts/33aa0af8.html</url>
    <content><![CDATA[<p><code>Kibana</code> 是一个基于浏览器页面的 <code>Elasticsearch</code> 前端展示工具。<code>Kibana</code> 全部使用 <code>HTML</code> 语言和 <code>JavaScript</code> 编写的。<br><code>Kibana</code> 是一个为 <code>Logstash</code> 和 <code>ElasticSearch</code> 提供的日志分析的 <code>Web</code> 接口。可使用它对日志进行高效的搜索、可视化、分析等各种操作。</p>
<h3 id="1、配置"><a href="#1、配置" class="headerlink" title="1、配置"></a>1、配置</h3><p>编辑<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vi config/kibana.yml</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>按照要求修改为<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">elasticsearch.url: <span class="string">"http://192.168.56.101:9200"</span></span><br></pre></td></tr></table></figure></p>
<p>其他部分参数不修改</p>
<p>如果只允许本机可以访问，在 <code>kibana.yml</code> 中加入：<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">host: <span class="string">"127.0.0.1"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="2、启动"><a href="#2、启动" class="headerlink" title="2、启动"></a>2、启动</h3><p><code>kibana 5.2.1</code> 可以单独启动，命令<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">bin/kibana</span><br></pre></td></tr></table></figure></p>
<p>后台运行<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nohup bin/kibana &amp;</span><br></pre></td></tr></table></figure></p>
<p>访问<br><a href="http://localhost:5601" target="_blank" rel="noopener">http://localhost:5601</a></p>
]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>kibana</tag>
      </tags>
  </entry>
  <entry>
    <title>etcd 使用</title>
    <url>/posts/a4aedd4.html</url>
    <content><![CDATA[<h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 略</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="空间不足问题"><a href="#空间不足问题" class="headerlink" title="空间不足问题"></a>空间不足问题</h1><p>在使用期间我们也观察到 Load 一直突高不下的情况，经检查发现 etcd 内的数据量已达到 600 多兆，所以我们采取了定期压缩 etcd 的措施，将历史事物数据全部清除。具体代码可参考：</p>
<ul>
<li><p>获取当前的版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rev=$(ETCDCTL_API=3 etcdctl --endpoints=:2379 endpoint status --write-out="json" | egrep -o '"revision":[0-9]*' | egrep -o '[0-9].*')</span><br></pre></td></tr></table></figure>
</li>
<li><p>压缩当前版本之前的所有记录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ETCDCTL_API=3 etcdctl compact $rev</span><br></pre></td></tr></table></figure>
</li>
<li><p>清理多余的碎片空间</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理当前 etcd 节点的碎片空间</span></span><br><span class="line">ETCDCTL_API=3 etcdctl defrag</span><br><span class="line"><span class="meta">#</span><span class="bash"> 清理集群的碎片空间</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ETCDCTL_API=3 etcdctl defrag --cluster</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>解除警告</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 一定要解除警告，否则 etcd 集群还是异常状态</span></span><br><span class="line">ETCDCTL_API=3 etcdctl alarm disarm</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="备份脚本"><a href="#备份脚本" class="headerlink" title="备份脚本"></a>备份脚本</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">ETCD_BACKUP_DIR=/data/etcd/backup</span><br><span class="line">ENDPOINTS="127.0.0.1:2379"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果是配置 crontab 定时执行，这里需要使用 /usr/<span class="built_in">local</span>/bin/etcdctl</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 否则会报 etcdctl: <span class="built_in">command</span> not found</span></span><br><span class="line">ETCDCTL_API=3 /usr/local/bin/etcdctl --endpoints=$&#123;ENDPOINTS&#125; snapshot save $&#123;ETCD_BACKUP_DIR&#125;/etcd-snapshot-`date +%Y%m%d`.db</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份保留30天</span></span><br><span class="line">find $&#123;ETCD_BACKUP_DIR&#125; -name *.db -mtime +30 -exec rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<h1 id="恢复脚本"><a href="#恢复脚本" class="headerlink" title="恢复脚本"></a>恢复脚本</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 略</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>etcd</category>
      </categories>
      <tags>
        <tag>etcd</tag>
      </tags>
  </entry>
  <entry>
    <title>git 使用</title>
    <url>/posts/4896de77.html</url>
    <content><![CDATA[<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git add</span><br><span class="line">git commit</span><br><span class="line">git push</span><br><span class="line">git status</span><br><span class="line">git rm &lt;-f&gt;</span><br><span class="line"></span><br><span class="line">git fetch</span><br><span class="line">git merge</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="fatal-remote-origin-already-exists错误"><a href="#fatal-remote-origin-already-exists错误" class="headerlink" title="fatal: remote origin already exists错误"></a>fatal: remote origin already exists错误</h1><p>先删除远程 Git 仓库<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git remote rm origin</span><br></pre></td></tr></table></figure></p>
<p>再添加远程 Git 仓库<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git remote add origin https://github.com/xxx/xxxx.git</span><br><span class="line"><span class="comment"># git remote remove origin</span></span><br></pre></td></tr></table></figure></p>
<p>简易的命令行入门教程:</p>
<p>Git 全局设置:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"xxxx"</span></span><br><span class="line">git config --global user.email <span class="string">"xxxx@qq.com"</span></span><br></pre></td></tr></table></figure></p>
<p>创建 git 仓库<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir ts</span><br><span class="line"><span class="built_in">cd</span> ts</span><br><span class="line">git init</span><br><span class="line">touch README.md</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">"first commit"</span></span><br><span class="line">git remote add origin https://github.com/xxx/xxxx.git</span><br><span class="line"><span class="comment"># git pull --allow-unrelated-histories</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment"># git push --set-upstream origin master</span></span><br></pre></td></tr></table></figure></p>
<p>已有项目?<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> existing_git_repo</span><br><span class="line">git remote add origin https://github.com/xxx/xxxx.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p>
<h1 id="git-flow"><a href="#git-flow" class="headerlink" title="git flow"></a>git flow</h1><p>分支共有5种类型</p>
<p>　　1) master，最终发布版本，整个项目中有且只有一个</p>
<p>　　2) develop，项目的开发分支，原则上项目中有且只有一个</p>
<p>　　3) feature，功能分支，用于开发一个新的功能</p>
<p>　　4) release，预发布版本，介于develop和master之间的一个版本，主要用于测试</p>
<p>　　5) hotfix，修复补丁，用于修复master上的bug，直接作用于master</p>
<h1 id="回滚操作"><a href="#回滚操作" class="headerlink" title="回滚操作"></a>回滚操作</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看记录</span></span><br><span class="line">git log --oneline</span><br><span class="line"><span class="meta">#</span><span class="bash"> 回滚到上一次提交</span></span><br><span class="line">git reset --soft HEAD^</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者 git reset HEAD^</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 强制提交到远程仓库（会覆盖掉reset前的提交记录）</span></span><br><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure>
<h1 id="fork后同步更新"><a href="#fork后同步更新" class="headerlink" title="fork后同步更新"></a>fork后同步更新</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote -v </span><br><span class="line">git remote add upstream git@github.com:xxx/xxx.git</span><br><span class="line">git fetch upstream/dev</span><br><span class="line">git merge upstream/master</span><br><span class="line"><span class="meta">#</span><span class="bash"> git merge upstream/develop</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 强制同步源仓库（upstream）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git fetch upstream &amp;&amp; git reset --hard upstream/master &amp;&amp; git push -f</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git fetch upstream &amp;&amp; git reset --hard upstream/develop &amp;&amp; git push -f</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<h1 id="大于-50MB-的文件处理"><a href="#大于-50MB-的文件处理" class="headerlink" title="大于 50MB 的文件处理"></a>大于 50MB 的文件处理</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入本地仓库目录初始化LFS</span></span><br><span class="line">git lfs install</span><br><span class="line">git lfs track <span class="string">"*.pdf"</span></span><br><span class="line"><span class="comment"># 或者 git add .gitattributes，类似于.gitignore文件的编写</span></span><br><span class="line"><span class="comment"># 接下来就可以像平时使用git那样正常使用了，可以将大文件提交到GitHub了</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>SSL 的发展历史</title>
    <url>/posts/3d3bd7ca.html</url>
    <content><![CDATA[<p>​        想在网络世界中，让用户无感知地实现安全通讯，最合理的做法就是在传输层之上、应用层之下加入专门的安全层来实现。这样对于上层原本是基于 HTTP 的 Web 应用来说，甚至都察觉不到有什么影响。构建传输安全层这个想法，甚至可以说是和万维网的历史一样长，早在 1994 年，就已经有公司开始着手去实践了：</p>
<a id="more"></a>
<ul>
<li><p>1994 年，网景（Netscape）公司开发了 SSL 协议（Secure Sockets Layer）的 1.0 版，这是构建传输安全层的起源，但是 SSL 1.0 从未正式对外发布过。</p>
</li>
<li><p>1995 年，Netscape 把 SSL 升级到 2.0 版，正式对外发布，但是刚刚发布不久，就被发现有严重漏洞，所以并未大规模使用。</p>
</li>
<li>1996 年，修补好漏洞的 SSL 3.0 对外发布，这个版本得到了广泛的应用，很快成为 Web 网络安全层的事实标准。</li>
<li>1999 年，互联网标准化组织接替网景公司，将 SSL 改名为 TLS（Transport Layer Security），随即就形成了传输安全层的国际标准。第一个正式的版本是RFC 2246定义的 TLS 1.0，该版 TLS 的生命周期极长，直到 2020 年 3 月，主流浏览器（Chrome、Firefox、IE、Safari）才刚刚宣布同时停止 TLS 1.0/1.1 的支持。而讽刺的是，由于停止后许多政府网站被无法被浏览，此时又正值新冠病毒的爆发期，Firefox 紧急发布公告宣布撤回该改动，因此目前 TLS 1.0 的生命还在顽强延续。</li>
<li>2006 年，TLS 的第一个升级版 1.1 发布（RFC 4346），但它除了增加对 CBC 攻击的保护外，几乎没有任何改变，沦为了被遗忘的孩子，当时也很少有人会使用 TLS 1.1，甚至 TLS 1.1 根本都没有被提出过有啥已知的协议漏洞。</li>
<li>2008 年，TLS 1.1 发布 2 年之后，TLS 1.2 标准发布（RFC 5246），迄今超过 90% 的互联网 HTTPS 流量都是由 TLS 1.2 所支持的，现在我们仍在使用的浏览器几乎都完美支持了该协议。</li>
<li>2018 年，最新的 TLS 1.3（RFC 8446）发布，比起前面版本相对温和的升级，TLS 1.3 做出了一些激烈的改动，修改了从 1.0 起一直没有大变化的两轮四次（2-RTT）握手，首次连接仅需一轮（1-RTT）握手即可完成；在有连接复用支持的时候，甚至可以把 TLS 1.2 原本的 1-RTT 下降到 0-RTT，显著提升了访问速度。</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>SSL</tag>
        <tag>TSL</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云仓库 + 自建私库配置</title>
    <url>/posts/746cc841.html</url>
    <content><![CDATA[<h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><blockquote>
<p> pom.xml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.ctim:8081/repository/maven2-weixin-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>fail<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h1 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h1><blockquote>
<p> setting.xml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/Workspace/Maven/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>***<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>***<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>***<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>***<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>***<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>***<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 自建私有库 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mirrorOf 不能配置成 * --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>maven2-weixin-public<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.ctim:8081/repository/maven2-weixin-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>xampp 安装 memcache 监控</title>
    <url>/posts/d01399d3.html</url>
    <content><![CDATA[<h1 id="xampp安装memcache监控"><a href="#xampp安装memcache监控" class="headerlink" title="xampp安装memcache监控"></a>xampp安装memcache监控</h1><h2 id="现在-memadmin"><a href="#现在-memadmin" class="headerlink" title="现在 memadmin"></a>现在 memadmin</h2><p>下载<a href="https://github.com/foreveryang321/memadmin" target="_blank" rel="noopener">memadmin</a>，解压到<code>xampp/htdocs</code>下</p>
<h2 id="查看-php-版本信息"><a href="#查看-php-版本信息" class="headerlink" title="查看 php 版本信息"></a>查看 php 版本信息</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="下载-php-memcache-dll"><a href="#下载-php-memcache-dll" class="headerlink" title="下载 php-memcache.dll"></a>下载 php-memcache.dll</h2><p>根据查看到的<code>php</code>的信息，在<a href="http://pecl.php.net/package/memcache/3.0.8/windows" target="_blank" rel="noopener">php-memcache</a>下载对应本版的<code>Thread Safe</code>，里面包含了<code>php-memcache.dll</code>。</p>
<p>解压下载包，然后把<code>php-memcache.dll</code>拷贝到<code>xampp/php/ext</code>下</p>
<p>在<code>xampp/php/php.ini</code>最后添加以下内容<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;php-memcached</span><br><span class="line">extension=php_memcache.dll</span><br><span class="line"></span><br><span class="line">[Memcache]</span><br><span class="line">memcache.allow_failover = 1</span><br><span class="line">memcache.max_failover_attempts=20</span><br><span class="line">memcache.chunk_size =8192</span><br><span class="line">memcache.default_port = 11211</span><br></pre></td></tr></table></figure></p>
<h2 id="访问-memadmin"><a href="#访问-memadmin" class="headerlink" title="访问 memadmin"></a>访问 memadmin</h2><p><a href="http://host:port/memadmin" target="_blank" rel="noopener">http://host:port/memadmin</a></p>
]]></content>
      <categories>
        <category>memcache</category>
      </categories>
      <tags>
        <tag>xampp</tag>
        <tag>memcache</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 异常处理</title>
    <url>/posts/537b60d6.html</url>
    <content><![CDATA[<h1 id="flush-hosts-异常"><a href="#flush-hosts-异常" class="headerlink" title="flush-hosts 异常"></a>flush-hosts 异常</h1><blockquote>
<p> 错误原因</p>
</blockquote>
<p>​        同一个ip在短时间内产生太多（超过<code>mysql</code>数据库<code>max_connection_errors</code>的最大值）中断的数据库连接而导致的阻塞。<br>​        当客户端连接服务端超时(超过<code>connect_timeout</code>)，服务端就会给这个客户端记录一次error，当出错的次数达到<code>max_connect_errors</code>的时候，这个客户端就会被锁定，从而应用出现异常：<br><code>java.sql.SQLException: null,  message from server: &quot;Host &#39;xxx&#39; is blocked because of many connection errors; unblock with &#39;mysqladmin flush-hosts&#39;&quot;</code>。</p>
<p>参考：<a href="https://www.cnblogs.com/kerrycode/p/8405862.html" target="_blank" rel="noopener">https://www.cnblogs.com/kerrycode/p/8405862.html</a></p>
<blockquote>
<p> 解决办法</p>
</blockquote>
<ul>
<li><p>方法一</p>
<p>进入数据库将<code>max_connection_errors</code>参数调高，也可以在<code>my.cnf</code>文件中修改不过需要重启<code>MySQL</code>。</p>
<p>查看该属性设置为多大</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%max_connect_errors%'</span>;</span><br></pre></td></tr></table></figure>
<p>根据业务尽量把这个值设置大一点，<code>MySQL</code> <code>max_connect_errors</code>默认值为<code>100</code>，我们可以根据具体需要设置大一点，这里设置为<code>500</code>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> max_connect_errors=<span class="number">500</span>;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>  注意：数据库主从或集群模式时，有节点都需要单独设置。</p>
<ul>
<li><p>方法二</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysqladmin -uroot -proot -h192.168.1.1 <span class="keyword">flush</span>-<span class="keyword">hosts</span></span><br><span class="line">或</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">hosts</span>;</span><br></pre></td></tr></table></figure>
<p>注意：数据库主从或集群模式时，要确定是被哪个<code>MySQL</code>服务拒绝了，刷新对应的服务器即可，不确定的话可以所有节点都刷新。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 使用场景</title>
    <url>/posts/c77ba0b2.html</url>
    <content><![CDATA[<h2 id="场景一：取最新N条数据"><a href="#场景一：取最新N条数据" class="headerlink" title="场景一：取最新N条数据"></a>场景一：取最新N条数据</h2><p>网站最新文章、最新评论等。使用 Redis 列表(List)集合，LPUSH 命令向 list 集合头部插入数据，LTRIM 命令对 list 集合进行修剪(trim) </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将一个或多个值插入到列表头部</span></span><br><span class="line"><span class="comment"># LPUSH key value1 [value2] </span></span><br><span class="line">127.0.0.1:6379&gt; LPUSH latest.comments <span class="string">"foo"</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除</span></span><br><span class="line"><span class="comment"># LTRIM key start stop </span></span><br><span class="line">127.0.0.1:6379&gt; LTRIM latest.comments 0 10</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="场景二：排行榜应用，取-TOP-N操作"><a href="#场景二：排行榜应用，取-TOP-N操作" class="headerlink" title="场景二：排行榜应用，取 TOP N操作"></a>场景二：排行榜应用，取 TOP N操作</h2><p>场景二和场景一不同之处在于，场景一操作以时间为权重，场景二是以某一个条件为权重。比如：赞次数、评论次数等。这个时候就需要使用 Redis 有序集合(sorted set)。将需要排序的值设置为有序集合的 score，将具体的数据设置为相应的 value，每次只需要执行 ZDAA 命令即可。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 向有序集合添加一个或多个成员，或者更新已存在成员的分数</span></span><br><span class="line"><span class="comment"># ZADD key score1 value1 [score2 value12] </span></span><br><span class="line">127.0.0.1:6379&gt; ZADD myzset 1 <span class="string">"one"</span></span><br></pre></td></tr></table></figure>
<h2 id="场景三：计数器"><a href="#场景三：计数器" class="headerlink" title="场景三：计数器"></a>场景三：计数器</h2><p>Redis 命令是原子性的，可以利用 INCR、DECR 命令来构建计数器系统，其底层写入是单线程模型，并发写入会按先后顺序执行。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 key 中储存的数字值增一</span></span><br><span class="line"><span class="comment"># INCR key</span></span><br><span class="line">127.0.0.1:6379&gt; INCR KEY_NAME</span><br><span class="line"><span class="comment"># 延伸</span></span><br><span class="line"><span class="comment"># 将 key 所储存的值加上给定的增量值（increment）</span></span><br><span class="line"><span class="comment"># INCRBY key increment</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 key 所储存的值加上给定的浮点增量值（increment）</span></span><br><span class="line"><span class="comment"># INCRBYFLOAT key increment</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 key 中储存的数字值减一</span></span><br><span class="line"><span class="comment"># DECR key</span></span><br><span class="line">127.0.0.1:6379&gt; DECR KEY_NAME </span><br><span class="line"><span class="comment"># 延伸</span></span><br><span class="line"><span class="comment"># key 所储存的值减去给定的减量值（decrement）</span></span><br><span class="line"><span class="comment"># DECRBY key decrement</span></span><br></pre></td></tr></table></figure>
<h2 id="场景四：缓存"><a href="#场景四：缓存" class="headerlink" title="场景四：缓存"></a>场景四：缓存</h2><p>Redis 作为分布式缓存中间件，其性能优于 Memcached，且数据结构更加多样化。</p>
<h2 id="场景五：队列"><a href="#场景五：队列" class="headerlink" title="场景五：队列"></a>场景五：队列</h2><p>使用 Redis 列表(List) 可以构建队列系统，使用 Redis 有序集合(sorted set)甚至可以构建有优先级的队列系统。</p>
<h2 id="场景六：Pub、Sub实时消息系统"><a href="#场景六：Pub、Sub实时消息系统" class="headerlink" title="场景六：Pub、Sub实时消息系统"></a>场景六：Pub、Sub实时消息系统</h2><p>使用 Redis 的 Pub/Sub 可以构建实时的消息系统。</p>
<h2 id="场景七：Unique-操作"><a href="#场景七：Unique-操作" class="headerlink" title="场景七：Unique 操作"></a>场景七：Unique 操作</h2><p>获取所有数据去重。使用 Redis 集合(Set)数据结构最合适不过了，只需要不断将数据往 set 中丢就行了，set 会自动去重。</p>
<h2 id="场景八：精确设置过期时间"><a href="#场景八：精确设置过期时间" class="headerlink" title="场景八：精确设置过期时间"></a>场景八：精确设置过期时间</h2><p>比如场景二中，score 可以设置成过期时间的时间戳，这样就可以简单的通过过期时间排序，定时清除过期数据。</p>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 安装 redis</title>
    <url>/posts/6fffbcc4.html</url>
    <content><![CDATA[<ul>
<li><p>拉取镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认拉取 redis:latest 版本</span></span><br><span class="line">$ docker pull redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取指定版本镜像</span></span><br><span class="line">$ docker pull redis:4.0.11</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>运行 redis 容器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认运行 redis:latest 版本</span></span><br><span class="line">$ docker run -p 6379:6379 --name redis -d redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行指定版本 redis</span></span><br><span class="line">$ docker run -p 6379:6379 --name redis -d redis:4.0.11</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 docker-compose</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认运行 redis:latest 版本</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">'redis'</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6379:6379'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行指定版本 redis</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">'redis:4.0.11'</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6379:6379'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker-compose up -d redis</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>redis</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>restful api 规范</title>
    <url>/posts/fea0c721.html</url>
    <content><![CDATA[<h1 id="RESTful-API-设计规范"><a href="#RESTful-API-设计规范" class="headerlink" title="RESTful API 设计规范"></a>RESTful API 设计规范</h1><blockquote>
<p>原文地址：<a href="https://github.com/godruoyi/restful-api-specification" target="_blank" rel="noopener">https://github.com/godruoyi/restful-api-specification</a></p>
</blockquote>
<h2 id="关于「能愿动词」的使用"><a href="#关于「能愿动词」的使用" class="headerlink" title="关于「能愿动词」的使用"></a>关于「能愿动词」的使用</h2><p>为了避免歧义，文档大量使用了「能愿动词」，对应的解释如下：</p>
<ul>
<li><code>必须 (MUST)</code>：绝对，严格遵循，请照做，无条件遵守；</li>
<li><code>一定不可 (MUST NOT)</code>：禁令，严令禁止；</li>
<li><code>应该 (SHOULD)</code> ：强烈建议这样做，但是不强求；</li>
<li><code>不该 (SHOULD NOT)</code>：强烈不建议这样做，但是不强求；</li>
<li><code>可以 (MAY)</code> 和 <code>可选 (OPTIONAL)</code> ：选择性高一点，在这个文档内，此词语使用较少；</li>
</ul>
<blockquote>
<p>参见：<a href="http://www.ietf.org/rfc/rfc2119.txt" target="_blank" rel="noopener">RFC 2119</a></p>
</blockquote>
<a id="more"></a>
<h2 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h2><p>客户端在通过 <code>API</code> 与后端服务通信的过程中，<code>应该</code> 使用 <code>HTTPS</code> 协议。</p>
<h2 id="API-Root-URL"><a href="#API-Root-URL" class="headerlink" title="API Root URL"></a>API Root URL</h2><p><code>API</code> 的根入口点应尽可能保持足够简单，这里有两个常见的 <code>URL</code> 根例子：</p>
<ul>
<li>api.example.com/*</li>
<li>example.com/api/*</li>
</ul>
<blockquote>
<p>如果你的应用很庞大或者你预计它将会变的很庞大，那 <code>应该</code> 将 <code>API</code> 放到子域下（<code>api.example.com</code>）。这种做法可以保持某些规模化上的灵活性。</p>
</blockquote>
<h2 id="Versioning"><a href="#Versioning" class="headerlink" title="Versioning"></a>Versioning</h2><p>所有的 <code>API</code> 必须保持向后兼容，你 <code>必须</code> 在引入新版本 <code>API</code> 的同时确保旧版本 <code>API</code> 仍然可用。所以 <code>应该</code> 为其提供版本支持。</p>
<p>目前比较常见的两种版本号形式：</p>
<h3 id="在-URL-中嵌入版本编号"><a href="#在-URL-中嵌入版本编号" class="headerlink" title="在 URL 中嵌入版本编号"></a>在 URL 中嵌入版本编号</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">api.example.com/v1/*</span><br></pre></td></tr></table></figure>
<p>这种做法是版本号直观、易于调试；另一种做法是，将版本号放在 <code>HTTP Header</code> 头中：</p>
<h2 id="Endpoints"><a href="#Endpoints" class="headerlink" title="Endpoints"></a>Endpoints</h2><p>端点就是指向特定资源或资源集合的 <code>URL</code>。在端点的设计中，你 <code>必须</code> 遵守下列约定：</p>
<ul>
<li>URL 的命名 <code>必须</code> 全部小写</li>
<li>URL 中资源（<code>resource</code>）的命名 <code>必须</code> 是名词，并且 <code>必须</code> 是复数形式</li>
<li><code>必须</code> 优先使用 <code>Restful</code> 类型的 URL</li>
<li>URL <code>必须</code> 是易读的</li>
<li>URL <code>一定不可</code> 暴露服务器架构</li>
</ul>
<blockquote>
<p>至于 URL 是否必须使用连字符（<code>-</code>） 或下划线（<code>_</code>），不做硬性规定，但 <code>必须</code> 根据团队情况统一一种风格。</p>
</blockquote>
<p>来看一个反例</p>
<ul>
<li><a href="https://api.example.com/getUserInfo?userid=1" target="_blank" rel="noopener">https://api.example.com/getUserInfo?userid=1</a></li>
<li><a href="https://api.example.com/getusers" target="_blank" rel="noopener">https://api.example.com/getusers</a></li>
<li><a href="https://api.example.com/sv/u" target="_blank" rel="noopener">https://api.example.com/sv/u</a></li>
<li><a href="https://api.example.com/cgi-bin/users/get_user.php?userid=1" target="_blank" rel="noopener">https://api.example.com/cgi-bin/users/get_user.php?userid=1</a></li>
</ul>
<p>再来看一个正列</p>
<ul>
<li><a href="https://api.example.com/zoos" target="_blank" rel="noopener">https://api.example.com/zoos</a></li>
<li><a href="https://api.example.com/animals" target="_blank" rel="noopener">https://api.example.com/animals</a></li>
<li><a href="https://api.example.com/zoos/{zoo}/animals" target="_blank" rel="noopener">https://api.example.com/zoos/{zoo}/animals</a></li>
<li><a href="https://api.example.com/animal_types" target="_blank" rel="noopener">https://api.example.com/animal_types</a></li>
<li><a href="https://api.example.com/employees" target="_blank" rel="noopener">https://api.example.com/employees</a></li>
</ul>
<h2 id="HTTP-动词"><a href="#HTTP-动词" class="headerlink" title="HTTP 动词"></a>HTTP 动词</h2><p>对于资源的具体操作类型，由 <code>HTTP</code> 动词表示。常用的 <code>HTTP</code> 动词有下面五个（括号里是对应的 <code>SQL</code> 命令）。</p>
<ul>
<li>GET（SELECT）：从服务器取出资源（一项或多项）。</li>
<li>POST（CREATE）：在服务器新建一个资源。</li>
<li>PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。</li>
<li>PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。</li>
<li>DELETE（DELETE）：从服务器删除资源。</li>
</ul>
<p>其中</p>
<p>1 删除资源 <code>必须</code> 用 <code>DELETE</code> 方法<br>2 创建新的资源 <code>必须</code> 使用 <code>POST</code> 方法<br>3 更新资源 <code>应该</code> 使用 <code>PUT</code> 方法<br>4 获取资源信息 <code>必须</code> 使用 <code>GET</code> 方法</p>
<p>针对每一个端点来说，下面列出所有可行的 <code>HTTP</code> 动词和端点的组合</p>
<table>
<thead>
<tr>
<th>请求方法</th>
<th>URL</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>GET</td>
<td>/zoos</td>
<td>列出所有的动物园(ID和名称，不要太详细)</td>
</tr>
<tr>
<td>POST</td>
<td>/zoos</td>
<td>新增一个新的动物园</td>
</tr>
<tr>
<td>GET</td>
<td>/zoos/{zoo}</td>
<td>获取指定动物园详情</td>
</tr>
<tr>
<td>PUT</td>
<td>/zoos/{zoo}</td>
<td>更新指定动物园(整个对象)</td>
</tr>
<tr>
<td>PATCH</td>
<td>/zoos/{zoo}</td>
<td>更新动物园(部分对象)</td>
</tr>
<tr>
<td>DELETE</td>
<td>/zoos/{zoo}</td>
<td>删除指定动物园</td>
</tr>
<tr>
<td>GET</td>
<td>/zoos/{zoo}/animals</td>
<td>检索指定动物园下的动物列表(ID和名称，不要太详细)</td>
</tr>
<tr>
<td>GET</td>
<td>/animals</td>
<td>列出所有动物(ID和名称)。</td>
</tr>
<tr>
<td>POST</td>
<td>/animals</td>
<td>新增新的动物</td>
</tr>
<tr>
<td>GET</td>
<td>/animals/{animal}</td>
<td>获取指定的动物详情</td>
</tr>
<tr>
<td>PUT</td>
<td>/animals/{animal}</td>
<td>更新指定的动物(整个对象)</td>
</tr>
<tr>
<td>PATCH</td>
<td>/animals/{animal}</td>
<td>更新指定的动物(部分对象)</td>
</tr>
<tr>
<td>GET</td>
<td>/animal_types</td>
<td>获取所有动物类型(ID和名称，不要太详细)</td>
</tr>
<tr>
<td>GET</td>
<td>/animal_types/{type}</td>
<td>获取指定的动物类型详情</td>
</tr>
<tr>
<td>GET</td>
<td>/employees</td>
<td>检索整个雇员列表</td>
</tr>
<tr>
<td>GET</td>
<td>/employees/{employee}</td>
<td>检索指定特定的员工</td>
</tr>
<tr>
<td>GET</td>
<td>/zoos/{zoo}/employees</td>
<td>检索在这个动物园工作的雇员的名单(身份证和姓名)</td>
</tr>
<tr>
<td>POST</td>
<td>/employees</td>
<td>新增指定新员工</td>
</tr>
<tr>
<td>POST</td>
<td>/zoos/{zoo}/employees</td>
<td>在特定的动物园雇佣一名员工</td>
</tr>
<tr>
<td>DELETE</td>
<td>/zoos/{zoo}/employees/{employee}</td>
<td>从某个动物园解雇一名员工</td>
</tr>
</tbody>
</table>
<blockquote>
<p>超出 <code>Restful</code> 端点的，<code>应该</code> 模仿上表的方式来定义端点。</p>
</blockquote>
<h2 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h2><blockquote>
<p>如果记录数量很多，服务器不可能都将它们返回给用户。API <code>应该</code> 提供参数，过滤返回结果。下面是一些常见的参数。</p>
</blockquote>
<ul>
<li>?limit=10：指定返回记录的数量</li>
<li>?offset=10：指定返回记录的开始位置。</li>
<li>?page=2&amp;per_page=100：指定第几页，以及每页的记录数。</li>
<li>?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。</li>
<li>?animal_type_id=1：指定筛选条件</li>
</ul>
<p>所有 <code>URL</code> 参数 <code>必须</code> 是全小写，<code>必须</code> 使用下划线类型的参数形式。</p>
<blockquote>
<p>分页参数 <code>必须</code> 固定为 <code>page</code>、<code>per_page</code></p>
</blockquote>
<p>经常使用的、复杂的查询 <code>应该</code> 标签化，降低维护成本。如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /trades?status=closed&amp;sort=sortby=name&amp;order=asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可为其定制快捷方式</span></span><br><span class="line">GET /trades/recently_closed</span><br></pre></td></tr></table></figure>
<h2 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h2><p><code>应该</code> 使用 <code>OAuth2.0</code> 的方式为 API 调用者提供登录认证。<code>必须</code> 先通过登录接口获取 <code>Access Token</code> 后再通过该 <code>token</code> 调用需要身份认证的 <code>API</code>。</p>
<p>Oauth 的端点设计示列</p>
<ul>
<li>RFC 6749   /token</li>
<li>Twitter    /oauth2/token</li>
<li>Fackbook   /oauth/access_token</li>
<li>Google     /o/oauth2/token</li>
<li>Github     /login/oauth/access_token</li>
<li>Instagram  /oauth/authorize</li>
</ul>
<p>客户端在获得 <code>access token</code> 的同时 <code>必须</code> 在响应中包含一个名为 <code>expires_in</code> 的数据，它表示当前获得的 <code>token</code> 会在多少 <code>秒</code> 后失效。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"access_token"</span>: <span class="string">"token...."</span>,</span><br><span class="line">    <span class="attr">"token_type"</span>: <span class="string">"Bearer"</span>,</span><br><span class="line">    <span class="attr">"expires_in"</span>: <span class="number">3600</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>客户端在请求需要认证的 <code>API</code> 时，<code>必须</code> 在请求头 <code>Authorization</code> 中带上 <code>access_token</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Authorization: Bearer token...</span><br></pre></td></tr></table></figure>
<p>当超过指定的秒数后，<code>access token</code> 就会过期，再次用过期/或无效的 <code>token</code> 访问时，服务端 <code>应该</code> 返回 <code>invalid_token</code> 的错误或 <code>401</code> 错误码。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">401</span> Unauthorized</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-store</span><br><span class="line"><span class="attribute">Pragma</span>: no-cache</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "error": "invalid_token"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Laravel 开发中，<code>应该</code> 使用 <a href="https://github.com/tymondesigns/jwt-auth" target="_blank" rel="noopener">JWT</a> 来为管理你的 Token，并且 <code>一定不可</code> 在 <code>api</code> 中间件中开启请求 <code>session</code>。</p>
</blockquote>
<h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>所有的 <code>API</code> 响应，<code>必须</code> 遵守 <code>HTTP</code> 设计规范，<code>必须</code> 选择合适的 <code>HTTP</code> 状态码。<code>一定不可</code> 所有接口都返回状态码为 <code>200</code> 的 <code>HTTP</code> 响应，如：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> ok</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Server</span>: example.com</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "code": 0,</span><br><span class="line">    "msg": "success",</span><br><span class="line">    "data": &#123;</span><br><span class="line">        "username": "username"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> ok</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Server</span>: example.com</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "code": -1,</span><br><span class="line">    "msg": "该活动不存在",</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下表列举了常见的 <code>HTTP</code> 状态码</p>
<table>
<thead>
<tr>
<th>状态码</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>1xx</td>
<td>代表请求已被接受，需要继续处理</td>
</tr>
<tr>
<td>2xx</td>
<td>请求已成功，请求所希望的响应头或数据体将随此响应返回</td>
</tr>
<tr>
<td>3xx</td>
<td>重定向</td>
</tr>
<tr>
<td>4xx</td>
<td>客户端原因引起的错误</td>
</tr>
<tr>
<td>5xx</td>
<td>服务端原因引起的错误</td>
</tr>
</tbody>
</table>
<blockquote>
<p>只有来自客户端的请求被正确的处理后才能返回 <code>2xx</code> 的响应，所以当 API 返回 <code>2xx</code> 类型的状态码时，前端 <code>必须</code> 认定该请求已处理成功。</p>
</blockquote>
<p>必须强调的是，所有 <code>API</code> <code>一定不可</code> 返回 <code>1xx</code> 类型的状态码。当 <code>API</code> 发生错误时，<code>必须</code> 返回出错时的详细信息。目前常见返回错误信息的方法有两种：</p>
<p>1、将错误详细放入 <code>HTTP</code> 响应首部；</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">X-MYNAME-ERROR-CODE</span>: 4001</span><br><span class="line"><span class="attribute">X-MYNAME-ERROR-MESSAGE</span>: Bad authentication token</span><br><span class="line"><span class="attribute">X-MYNAME-ERROR-INFO</span>: http://docs.example.com/api/v1/authentication</span><br></pre></td></tr></table></figure>
<p>2、直接放入响应实体中；</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">401</span> Unauthorized</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 10:02:59 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40100,"message":"Unauthorized"&#125;</span><br></pre></td></tr></table></figure>
<p>考虑到易读性和客户端的易处理性，我们 <code>必须</code> 把错误信息直接放到响应实体中，并且错误格式 <code>应该</code> 满足如下格式：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"message"</span>: <span class="string">"您查找的资源不存在"</span>,</span><br><span class="line">    <span class="attr">"error_code"</span>: <span class="number">404001</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中错误码（<code>error_code</code>）<code>必须</code> 和 <code>HTTP</code> 状态码对应，也方便错误码归类，如：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">429</span> Too Many Requests</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 10:15:52 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":429001,"message":"你操作太频繁了"&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">403</span> Forbidden</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 10:19:27 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":403002,"message":"用户已禁用"&#125;</span><br></pre></td></tr></table></figure>
<p><code>应该</code> 在返回的错误信息中，同时包含面向开发者和面向用户的提示信息，前者可方便开发人员调试，后者可直接展示给终端用户查看如：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"message"</span>: <span class="string">"直接展示给终端用户的错误信息"</span>,</span><br><span class="line">    <span class="attr">"error_code"</span>: <span class="string">"业务错误码"</span>,</span><br><span class="line">    <span class="attr">"error"</span>: <span class="string">"供开发者查看的错误信息"</span>,</span><br><span class="line">    <span class="attr">"debug"</span>: [</span><br><span class="line">        <span class="string">"错误堆栈，必须开启 debug 才存在"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面详细列举了各种情况 API 的返回说明。</p>
<h3 id="200-ok"><a href="#200-ok" class="headerlink" title="200 ok"></a>200 ok</h3><p><code>200</code> 状态码是最常见的 <code>HTTP</code> 状态码，在所有 <strong>成功</strong> 的 <code>GET</code> 请求中，<code>必须</code> 返回此状态码。<code>HTTP</code> 响应实体部分 <code>必须</code> 直接就是数据，不要做多余的包装。</p>
<p>错误示例：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> ok</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Server</span>: example.com</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "user": &#123;</span><br><span class="line">        "id":1,</span><br><span class="line">        "nickname":"fwest",</span><br><span class="line">        "username": "example"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确示例：</p>
<p>1、获取单个资源详情</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"godruoyi"</span>,</span><br><span class="line">    <span class="attr">"age"</span>: <span class="number">88</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、获取资源集合</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"godruoyi"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">88</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"foo"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">88</span>,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>3、额外的媒体信息</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"avatar"</span>: <span class="string">"https://lorempixel.com/640/480/?32556"</span>,</span><br><span class="line">            <span class="attr">"nickname"</span>: <span class="string">"fwest"</span>,</span><br><span class="line">            <span class="attr">"last_logined_time"</span>: <span class="string">"2018-05-29 04:56:43"</span>,</span><br><span class="line">            <span class="attr">"has_registed"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"avatar"</span>: <span class="string">"https://lorempixel.com/640/480/?86144"</span>,</span><br><span class="line">            <span class="attr">"nickname"</span>: <span class="string">"zschowalter"</span>,</span><br><span class="line">            <span class="attr">"last_logined_time"</span>: <span class="string">"2018-06-16 15:18:34"</span>,</span><br><span class="line">            <span class="attr">"has_registed"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"meta"</span>: &#123;</span><br><span class="line">        <span class="attr">"pagination"</span>: &#123;</span><br><span class="line">            <span class="attr">"total"</span>: <span class="number">101</span>,</span><br><span class="line">            <span class="attr">"count"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"per_page"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"current_page"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"total_pages"</span>: <span class="number">51</span>,</span><br><span class="line">            <span class="attr">"links"</span>: &#123;</span><br><span class="line">                <span class="attr">"next"</span>: <span class="string">"http://api.example.com?page=2"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其中，分页和其他额外的媒体信息，必须放到 <code>meta</code> 字段中。</p>
</blockquote>
<h3 id="201-Created"><a href="#201-Created" class="headerlink" title="201 Created"></a>201 Created</h3><p>当服务器创建数据成功时，<code>应该</code> 返回此状态码。常见的应用场景是使用 <code>POST</code> 提交用户信息，如：</p>
<ul>
<li>添加了新用户</li>
<li>上传了图片</li>
<li>创建了新活动</li>
</ul>
<p>等，都可以返回 <code>201</code> 状态码。需要注意的是，你可以选择在用户创建成功后返回新用户的数据</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">201</span> Created</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:13:40 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    "id": 1,</span><br><span class="line">    "avatar": "https:\/\/lorempixel.com\/640\/480\/?32556",</span><br><span class="line">    "nickname": "fwest",</span><br><span class="line">    "last_logined_time": "2018-05-29 04:56:43",</span><br><span class="line">    "created_at": "2018-06-16 17:55:55",</span><br><span class="line">    "updated_at": "2018-06-16 17:55:55"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也可以返回一个响应实体为空的 <code>HTTP Response</code> 如：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">201</span> Created</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:12:20 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里我们 <code>应该</code> 采用第二种方式，因为大多数情况下，客户端只需要知道该请求操作成功与否，并不需要返回新资源的信息。</p>
</blockquote>
<h3 id="202-Accepted"><a href="#202-Accepted" class="headerlink" title="202 Accepted"></a>202 Accepted</h3><p>该状态码表示服务器已经接受到了来自客户端的请求，但还未开始处理。常用短信发送、邮件通知、模板消息推送等这类很耗时需要队列支持的场景中；</p>
<blockquote>
<p>返回该状态码时，响应实体 <code>必须</code> 为空。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 202 Accepted</span><br><span class="line">Server: nginx/1.11.9</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Date: Sun, 24 Jun 2018 09:25:15 GMT</span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure>
<h3 id="204-No-Content"><a href="#204-No-Content" class="headerlink" title="204 No Content"></a>204 No Content</h3><p>该状态码表示响应实体不包含任何数据，其中：</p>
<ul>
<li>在使用 <code>DELETE</code> 方法删除资源 <strong>成功</strong> 时，<code>必须</code> 返回该状态码</li>
<li>使用 <code>PUT</code>、<code>PATCH</code> 方法更新数据 <strong>成功</strong> 时，也 <code>应该</code> 返回此状态码</li>
</ul>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">204</span> No Content</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:29:12 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>
<h3 id="3xx-重定向"><a href="#3xx-重定向" class="headerlink" title="3xx 重定向"></a>3xx 重定向</h3><p>所有 <code>API</code> <code>不该</code> 返回 <code>3xx</code> 类型的状态码。因为 <code>3xx</code> 类型的响应格式一般为下列格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 302 Found</span><br><span class="line">Server: nginx/1.11.9</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Cache-Control: no-cache, private</span><br><span class="line">Date: Sun, 24 Jun 2018 09:41:50 GMT</span><br><span class="line">Location: https://example.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"0;url=https://example.com"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Redirecting to https://example.com<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        Redirecting to <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://example.com"</span>&gt;</span>https://example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>所有 <code>API</code> <code>一定不可</code> 返回纯 <code>HTML</code> 结构的响应；若一定要使用重定向功能，<code>可以</code> 返回一个响应实体为空的 <code>3xx</code> 响应，并在响应头中加上 <code>Location</code> 字段:</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">302</span> Found</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 09:52:50 GMT</span><br><span class="line"><span class="attribute">Location</span>: https://godruoyi.com</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br></pre></td></tr></table></figure>
<h3 id="400-Bad-Request"><a href="#400-Bad-Request" class="headerlink" title="400 Bad Request"></a>400 Bad Request</h3><p>由于明显的客户端错误（例如，请求语法格式错误、无效的请求、无效的签名等），服务器 <code>应该</code> 放弃该请求。</p>
<blockquote>
<p>当服务器无法从其他 4xx 类型的状态码中找出合适的来表示错误类型时，都 <code>必须</code> 返回该状态码。</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">400</span> Bad Request</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 13:22:36 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40000,"message":"无效的签名"&#125;</span><br></pre></td></tr></table></figure>
<h3 id="401-Unauthorized"><a href="#401-Unauthorized" class="headerlink" title="401 Unauthorized"></a>401 Unauthorized</h3><p>该状态码表示当前请求需要身份认证，以下情况都 <code>必须</code> 返回该状态码。</p>
<ul>
<li>未认证用户访问需要认证的 API</li>
<li>access_token 无效/过期</li>
</ul>
<blockquote>
<p>客户端在收到 <code>401</code> 响应后，都 <code>应该</code> 提示用户进行下一步的登录操作。</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">401</span> Unauthorized</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">WWW-Authenticate</span>: JWTAuth</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 13:17:02 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">"message":"Token Signature could not be verified.","error_code": "40100"&#125;</span><br></pre></td></tr></table></figure>
<h3 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h3><p>该状态码可以简单的理解为没有权限访问该请求，服务器收到请求但拒绝提供服务。</p>
<p>如当普通用户请求操作管理员用户时，<code>必须</code> 返回该状态码。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">403</span> Forbidden</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 13:05:34 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40301,"message":"权限不足"&#125;</span><br></pre></td></tr></table></figure>
<h3 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 Not Found"></a>404 Not Found</h3><p>该状态码表示用户请求的资源不存在，如</p>
<ul>
<li>获取不存在的用户信息 （get /users/9999999）</li>
<li>访问不存在的端点</li>
</ul>
<p>都 <code>必须</code> 返回该状态码，若该资源已永久不存在，则 <code>应该</code> 返回 <code>401</code> 响应。</p>
<h3 id="405-Method-Not-Allowed"><a href="#405-Method-Not-Allowed" class="headerlink" title="405 Method Not Allowed"></a>405 Method Not Allowed</h3><p>当客户端使用的 <code>HTTP</code> 请求方法不被服务器允许时，<code>必须</code> 返回该状态码。</p>
<blockquote>
<p>如客户端调用了 <code>POST</code> 方法来访问只支持 GET 方法的 API</p>
</blockquote>
<p>该响应 <code>必须</code> 返回一个 <code>Allow</code> 头信息用以表示出当前资源能够接受的请求方法的列表。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">405</span> Method Not Allowed</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Allow</span>: GET, HEAD</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 12:30:57 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"message":"405 Method Not Allowed","error_code": 40500&#125;</span><br></pre></td></tr></table></figure>
<h3 id="406-Not-Acceptable"><a href="#406-Not-Acceptable" class="headerlink" title="406 Not Acceptable"></a>406 Not Acceptable</h3><p><code>API</code> 在不支持客户端指定的数据格式时，应该返回此状态码。如支持 <code>JSON</code> 和 <code>XML</code> 输出的 <code>API</code> 被指定返回 <code>YAML</code> 格式的数据时。</p>
<blockquote>
<p>Http 协议一般通过请求首部的 Accept 来指定数据格式</p>
</blockquote>
<h3 id="408-Request-Timeout"><a href="#408-Request-Timeout" class="headerlink" title="408 Request Timeout"></a>408 Request Timeout</h3><p>客户端请求超时时 <code>必须</code> 返回该状态码，需要注意的时，该状态码表示 <strong>客户端请求超时</strong>，在涉及第三方 <code>API</code> 调用超时时，<code>一定不可</code> 返回该状态码。</p>
<h3 id="409-Confilct"><a href="#409-Confilct" class="headerlink" title="409 Confilct"></a>409 Confilct</h3><p>该状态码表示因为请求存在冲突无法处理。如通过手机号码提供注册功能的 <code>API</code>，当用户提交的手机号已存在时，<code>必须</code> 返回此状态码。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">409</span> Conflict</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 12:19:04 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":40900,"message":"手机号已存在"&#125;</span><br></pre></td></tr></table></figure>
<h3 id="410-Gone"><a href="#410-Gone" class="headerlink" title="410 Gone"></a>410 Gone</h3><p>和 <code>404</code> 类似，该状态码也表示请求的资源不存在，只是 <code>410</code> 状态码进一步表示所请求的资源已不存在，并且未来也不会存在。在收到 <code>410</code> 状态码后，客户端 <code>应该</code> 停止再次请求该资源。</p>
<h3 id="413-Request-Entity-Too-Large"><a href="#413-Request-Entity-Too-Large" class="headerlink" title="413 Request Entity Too Large"></a>413 Request Entity Too Large</h3><p>该状态码表示服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。</p>
<blockquote>
<p>此种情况下，服务器可以关闭连接以免客户端继续发送此请求。</p>
</blockquote>
<p>如果这个状况是临时的，服务器 <code>应该</code> 返回一个 <code>Retry-After</code> 的响应头，以告知客户端可以在多少时间以后重新尝试。</p>
<h3 id="414-Request-URI-Too-Long"><a href="#414-Request-URI-Too-Long" class="headerlink" title="414 Request-URI Too Long"></a>414 Request-URI Too Long</h3><p>该状态码表示请求的 <code>URI</code> 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。</p>
<h3 id="415-Unsupported-Media-Type"><a href="#415-Unsupported-Media-Type" class="headerlink" title="415 Unsupported Media Type"></a>415 Unsupported Media Type</h3><p>通常表示服务器不支持客户端请求首部 <code>Content-Type</code> 指定的数据格式。如在只接受 <code>JSON</code> 格式的 <code>API</code> 中放入 <code>XML</code> 类型的数据并向服务器发送，都 <code>应该</code> 返回该状态码。</p>
<p>该状态码也可用于如：只允许上传图片格式的文件，但是客户端提交媒体文件非法或不是图片类型，这时 <code>应该</code> 返回该状态码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">415</span> Unsupported Media Type</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 12:09:40 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":41500,"message":"不允许上传的图片格式"&#125;</span><br></pre></td></tr></table></figure>
<h3 id="429-Too-Many-Requests"><a href="#429-Too-Many-Requests" class="headerlink" title="429 Too Many Requests"></a>429 Too Many Requests</h3><p>该状态码表示用户请求次数超过允许范围。如 <code>API</code> 设定为 <code>60次/分钟</code>，当用户在一分钟内请求次数超过 60 次后，都 <code>应该</code> 返回该状态码。并且也 <code>应该</code> 在响应首部中加上下列头部：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">X-RateLimit-Limit: 10 请求速率（由应用设定，其单位一般为小时/分钟等，这里是 10次/5分钟）</span><br><span class="line">X-RateLimit-Remaining: 0 当前剩余的请求数量</span><br><span class="line">X-RateLimit-Reset: 1529839462 重置时间</span><br><span class="line">Retry-After: 120 下一次访问应该等待的时间（秒）</span><br></pre></td></tr></table></figure>
<p>列子</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">429</span> Too Many Requests</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">X-RateLimit-Limit</span>: 10</span><br><span class="line"><span class="attribute">X-RateLimit-Remaining</span>: 0</span><br><span class="line"><span class="attribute">X-RateLimit-Reset</span>: 1529839462</span><br><span class="line"><span class="attribute">Retry-After</span>: 290</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 11:19:32 GMT</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"message":"You have exceeded your rate limit.","error_code":42900&#125;</span><br></pre></td></tr></table></figure>
<p><code>必须</code> 为所有的 API 设置 Rate Limit 支持。</p>
<h3 id="500-Internal-Server-Error"><a href="#500-Internal-Server-Error" class="headerlink" title="500 Internal Server Error"></a>500 Internal Server Error</h3><p>该状态码 <code>必须</code> 在服务器出错时抛出，对于所有的 <code>500</code> 错误，都 <code>应该</code> 提供完整的错误信息支持，也方便跟踪调试。</p>
<h3 id="503-Service-Unavailable"><a href="#503-Service-Unavailable" class="headerlink" title="503 Service Unavailable"></a>503 Service Unavailable</h3><p>该状态码表示服务器暂时处理不可用状态，当服务器需要维护或第三方 <code>API</code> 请求超时/不可达时，都 <code>应该</code> 返回该状态码，其中若是主动关闭 API 服务，<code>应该</code>在返回的响应首部加上 <code>Retry-After</code> 头部，表示多少秒后可以再次访问。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">503</span> Service Unavailable</span><br><span class="line"><span class="attribute">Server</span>: nginx/1.11.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/json</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache, private</span><br><span class="line"><span class="attribute">Date</span>: Sun, 24 Jun 2018 10:56:20 GMT</span><br><span class="line"><span class="attribute">Retry-After</span>: 60</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;"error_code":50300,"message":"服务维护中"&#125;</span><br></pre></td></tr></table></figure>
<p>其他 <code>HTTP</code> 状态码请参考 <a href="https://zh.wikipedia.org/zh-hans/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="noopener">HTTP 状态码- 维基百科</a></p>
]]></content>
      <categories>
        <category>规范</category>
      </categories>
      <tags>
        <tag>restful api</tag>
      </tags>
  </entry>
  <entry>
    <title>tinymce 使用</title>
    <url>/posts/c3440175.html</url>
    <content><![CDATA[<h1 id="配置自定义标签支持"><a href="#配置自定义标签支持" class="headerlink" title="配置自定义标签支持"></a>配置自定义标签支持</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 配置自定义标签支持：小程序标签（mp-miniprogram）</span><br><span class="line">custom_elements: &apos;mp-miniprogram&apos;,</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tinymce</category>
      </categories>
      <tags>
        <tag>微信公众号</tag>
        <tag>tinymce</tag>
      </tags>
  </entry>
  <entry>
    <title>tinymce 解决微信公众号图文消息图片跨域问题</title>
    <url>/posts/c3440175.html</url>
    <content><![CDATA[<blockquote>
<p>原理</p>
</blockquote>
<p>原理是把请求头的<code>referer</code>去掉。</p>
<p>某些场景<code>HTML</code>文件增加<code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;</code>也可以解决跨域问题。</p>
<blockquote>
<p> 思路</p>
</blockquote>
<p>通过<code>Nginx</code>反向代理微信图片的链接，并把请求的 referer 去掉。</p>
<a id="more"></a>
<blockquote>
<p>Nginx反向代理</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       8810;</span><br><span class="line">    server_name localhost;</span><br><span class="line"></span><br><span class="line">    # 指定字符集为 UTF-8</span><br><span class="line">    charset utf-8;</span><br><span class="line"></span><br><span class="line">    # https://mmbiz.qpic.cn/mmbiz_gif/NefTdbK1pb3a06nvwCX5ROeNSsd2DVOGfwAEGgpT94ZnqlYNZgvEJTU9MVU7ExGAVCpWo3rIpU7rfA71PzKaJg/640?wx_fmt=gif</span><br><span class="line">    location ~ /mmbiz_(.*)/ &#123;</span><br><span class="line">        proxy_pass         https://mmbiz.qpic.cn;</span><br><span class="line">        proxy_set_header   Host             &quot;mmbiz.qpic.cn&quot;;</span><br><span class="line">        proxy_set_header   Referer          &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>访问地址</p>
</blockquote>
<p><a href="http://localhost:8810/mmbiz_gif/NefTdbK1pb3a06nvwCX5ROeNSsd2DVOGfwAEGgpT94ZnqlYNZgvEJTU9MVU7ExGAVCpWo3rIpU7rfA71PzKaJg/640?wx_fmt=gif" target="_blank" rel="noopener">http://localhost:8810/mmbiz_gif/NefTdbK1pb3a06nvwCX5ROeNSsd2DVOGfwAEGgpT94ZnqlYNZgvEJTU9MVU7ExGAVCpWo3rIpU7rfA71PzKaJg/640?wx_fmt=gif</a></p>
]]></content>
      <categories>
        <category>tinymce</category>
      </categories>
      <tags>
        <tag>微信公众号</tag>
        <tag>tinymce</tag>
      </tags>
  </entry>
  <entry>
    <title>H5 加载小程序标签</title>
    <url>/posts/9b163e06.html</url>
    <content><![CDATA[<h1 id="使用-rem-单位问题"><a href="#使用-rem-单位问题" class="headerlink" title="使用 rem 单位问题"></a>使用 rem 单位问题</h1><p>需要在小程序标签里面指定以下样式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">26rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>可以通过以下代码，可以动态获取页面 html 标签上的 font-size 值，小程序标签里面 html 的 font-size 应该要和页面的保持一致</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> docEl = <span class="built_in">window</span>.document.documentElement;</span><br><span class="line"><span class="comment">// 在使用 rem 的情况下，获取页面 html 标签上的 font-size 值</span></span><br><span class="line"><span class="keyword">var</span> fontSize = <span class="built_in">parseFloat</span>(<span class="built_in">window</span>.getComputedStyle(docEl)[<span class="string">"font-size"</span>]);</span><br></pre></td></tr></table></figure>
<h1 id="动态加载小程序标签问题"><a href="#动态加载小程序标签问题" class="headerlink" title="动态加载小程序标签问题"></a>动态加载小程序标签问题</h1><p>进入页面的时候，调用<code>wx.config</code>初始化小程序标签。如果页面需要通过 js 动态加载小程序标签，需要在每次加载前都调用<code>wx.config</code>初始化配置，否则会报错，导致动态加载的小程序标签无法正常显示。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> config;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wxJsApiInit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (config) &#123;</span><br><span class="line">    wx.config(config);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $.post(<span class="string">'获取 jsticket 接口'</span>, &#123;</span><br><span class="line">      url: <span class="built_in">window</span>.location.href</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">0</span> === data.errcode) &#123;</span><br><span class="line">        config = &#123;</span><br><span class="line">          <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">          appId: <span class="string">'后端返回的 appId'</span>,</span><br><span class="line">          <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">          timestamp: <span class="string">'后端返回的 timestamp'</span>,</span><br><span class="line">          <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">          nonceStr: <span class="string">'后端返回的 nonceStr'</span>,</span><br><span class="line">          <span class="comment">// 必填，签名</span></span><br><span class="line">          signature: <span class="string">'后端返回的 signature'</span>,</span><br><span class="line">          <span class="comment">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span></span><br><span class="line">          jsApiList: [</span><br><span class="line">            <span class="string">'chooseImage'</span>,</span><br><span class="line">            <span class="string">'onMenuShareTimeline'</span>,</span><br><span class="line">            <span class="string">'onMenuShareAppMessage'</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="comment">// 小程序标签</span></span><br><span class="line">          openTagList: [<span class="string">'wx-open-launch-weapp'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 初始化配置</span></span><br><span class="line">        wx.config(config);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="string">'json'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  wxJsApiInit();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $.<span class="keyword">get</span>('搜索接口获取小程序数据', function (data) &#123;</span><br><span class="line">    <span class="keyword">var</span> item = data.item;</span><br><span class="line">    <span class="keyword">var</span> html = miniapp(item.username, miniapp.path, miniapp.name);</span><br><span class="line">    <span class="comment">// 动态添加小程序到页面，需要重新 wx.config 初始化</span></span><br><span class="line">    wxJsApiInit();</span><br><span class="line">    $(<span class="string">'#miniapp_1'</span>).html(html);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拼接小程序 html 代码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>username 需要打开的小程序账号</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>path 需要打开的小程序路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>name 小程序标签展示的名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">miniapp</span>(<span class="params">username, path, name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> docEl = <span class="built_in">window</span>.document.documentElement;</span><br><span class="line">  <span class="comment">// 在使用 rem 的情况下，获取页面 html 标签上的 font-size 值</span></span><br><span class="line">  <span class="keyword">var</span> fontSize = <span class="built_in">parseFloat</span>(<span class="built_in">window</span>.getComputedStyle(docEl)[<span class="string">"font-size"</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;wx-open-launch-weapp username="'</span> + username + <span class="string">'" path="'</span> + path + <span class="string">'" style="display:block; width: 60px"&gt;'</span> +</span><br><span class="line">    <span class="string">'    &lt;template&gt;'</span> +</span><br><span class="line">    <span class="string">'        &lt;style&gt;'</span> +</span><br><span class="line">    <span class="string">'            html &#123;'</span> +</span><br><span class="line">    <span class="string">'                font-size: '</span> + fontSize + <span class="string">'px'</span> +</span><br><span class="line">    <span class="string">'            &#125;'</span> +</span><br><span class="line">    <span class="string">'            html,'</span> +</span><br><span class="line">    <span class="string">'            body &#123;'</span> +</span><br><span class="line">    <span class="string">'                margin: 0;'</span> +</span><br><span class="line">    <span class="string">'                padding: 0;'</span> +</span><br><span class="line">    <span class="string">'                border: 0;'</span> +</span><br><span class="line">    <span class="string">'                outline: 0;'</span> +</span><br><span class="line">    <span class="string">'                font-weight: inherit;'</span> +</span><br><span class="line">    <span class="string">'                font-style: inherit;'</span> +</span><br><span class="line">    <span class="string">'                font-family: "Microsoft YaHei", simsun, Arial, Helvetica, sans-serif;'</span> +</span><br><span class="line">    <span class="string">'                vertical-align: baseline;'</span> +</span><br><span class="line">    <span class="string">'                text-align: center;'</span> +</span><br><span class="line">    <span class="string">'            &#125;'</span> +</span><br><span class="line">    <span class="string">'            * &#123;'</span> +</span><br><span class="line">    <span class="string">'                color: #fff;'</span> +</span><br><span class="line">    <span class="string">'                font-size: .26rem;'</span> +</span><br><span class="line">    <span class="string">'                font-weight: normal;'</span> +</span><br><span class="line">    <span class="string">'            &#125;'</span> +</span><br><span class="line">    <span class="string">'        &lt;/style&gt;'</span> + name +</span><br><span class="line">    <span class="string">'    &lt;/template&gt;'</span> +</span><br><span class="line">    <span class="string">'&lt;/wx-open-launch-weapp&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>微信公众号</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Jpipe - A Java implementation of Facebook&#39;s bigPipe technology.</title>
    <url>/posts/97f95e0.html</url>
    <content><![CDATA[<h1 id="Jpipe"><a href="#Jpipe" class="headerlink" title="Jpipe"></a>Jpipe</h1><p>A Java implementation of Facebook’s bigPipe technology.</p>
<p>Jpipe 是通过自定义标签实现的，所以对后端代码零侵入。</p>
<blockquote>
<p>HTML 是完成前台页面的功能，而自定义标签可以在后台完成某些操作。</p>
</blockquote>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>jsp 标签支持</li>
<li>freemarker 指令支持</li>
<li>freemarker 中使用 jsp 标签</li>
</ul>
<a id="more"></a>
<h2 id="为什么使用-BigPipe"><a href="#为什么使用-BigPipe" class="headerlink" title="为什么使用 BigPipe"></a>为什么使用 BigPipe</h2><ul>
<li>解决速度瓶颈</li>
<li>降低延迟时间</li>
</ul>
<h2 id="BigPipe-适合什么场景"><a href="#BigPipe-适合什么场景" class="headerlink" title="BigPipe 适合什么场景"></a>BigPipe 适合什么场景</h2><p>主要适用于：</p>
<ol>
<li>请求时间较长，后端程序需要读取多个API获取数据</li>
<li>页面内容可以划分成多个区块显示，且各个区块之间的关联不大（松耦合）</li>
<li>对SEO需求较弱</li>
</ol>
<h2 id="多种实现方式的对比"><a href="#多种实现方式的对比" class="headerlink" title="多种实现方式的对比"></a>多种实现方式的对比</h2><table>
<thead>
<tr>
<th>类型</th>
<th>请求数</th>
<th>服务器端压力</th>
<th>用户体验</th>
<th>网页加载速度</th>
<th>模块加载顺序</th>
<th>实现难度</th>
<th>后期维护难度</th>
</tr>
</thead>
<tbody>
<tr>
<td>普通</td>
<td>1</td>
<td>小</td>
<td>差</td>
<td>慢</td>
<td>文档流顺序</td>
<td>简单</td>
<td>一般</td>
</tr>
<tr>
<td>Ajax</td>
<td>多</td>
<td>大</td>
<td>好</td>
<td>快</td>
<td>不确定</td>
<td>困难</td>
<td>困难</td>
</tr>
<tr>
<td>单线程BigPipe</td>
<td>1</td>
<td>小</td>
<td>好</td>
<td>慢</td>
<td>自定义</td>
<td>一般</td>
<td>一般</td>
</tr>
<tr>
<td>多线程BigPipe</td>
<td>1</td>
<td>一般（线程池引起）</td>
<td>好</td>
<td>最快</td>
<td>不确定</td>
<td>最困难</td>
<td>一般</td>
</tr>
</tbody>
</table>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="线程池配置"><a href="#线程池配置" class="headerlink" title="线程池配置"></a>线程池配置</h3><table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>是否必填</th>
<th>缺省值</th>
<th>说明</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>core-size</td>
<td>int</td>
<td>否</td>
<td>-1</td>
<td>核心线程数</td>
<td>最小空闲线程数，无论如何都会存活的最小线程数</td>
</tr>
<tr>
<td>max-size</td>
<td>int</td>
<td>否</td>
<td>1024</td>
<td>最大线程数</td>
<td>Jpipe 能创建用来处理 pagelet 的最大线程数</td>
</tr>
<tr>
<td>queue-size</td>
<td>int</td>
<td>否</td>
<td>1024</td>
<td>最大等待对列数</td>
<td>请求并发大于 max-size，则被放入队列等待</td>
</tr>
<tr>
<td>keep-alive</td>
<td>long</td>
<td>否</td>
<td>60000</td>
<td>最大空闲时间(ms)</td>
<td>超过这个空闲时间，且线程数大于 core-size 的，被回收直到线程数等于core-size</td>
</tr>
<tr>
<td>pre-start-all-core-threads</td>
<td>boolean</td>
<td>否</td>
<td>false</td>
<td>预热线程池</td>
<td>是否预先启动 core-size 个线程</td>
</tr>
</tbody>
</table>
<h3 id="pepe-标签、指令"><a href="#pepe-标签、指令" class="headerlink" title="pepe 标签、指令"></a>pepe 标签、指令</h3><table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>是否必填</th>
<th>缺省值</th>
<th>说明</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>async</td>
<td>boolean</td>
<td>否</td>
<td>true</td>
<td>是否异步执行pagelet任务</td>
</tr>
</tbody>
</table>
<h3 id="pagelet-标签、指令"><a href="#pagelet-标签、指令" class="headerlink" title="pagelet 标签、指令"></a>pagelet 标签、指令</h3><table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>是否必填</th>
<th>缺省值</th>
<th>说明</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>domid</td>
<td>string</td>
<td>是</td>
<td></td>
<td>html document Id</td>
<td></td>
</tr>
<tr>
<td>bean</td>
<td>string</td>
<td>是</td>
<td></td>
<td>spring bean name</td>
<td></td>
</tr>
<tr>
<td>var</td>
<td>string</td>
<td>是</td>
<td></td>
<td>variable 参数</td>
<td></td>
</tr>
<tr>
<td>uri</td>
<td>string</td>
<td>否</td>
<td></td>
<td>uri 参数</td>
<td></td>
</tr>
<tr>
<td>jsmethod</td>
<td>string</td>
<td>否</td>
<td>JP.view</td>
<td>包装数据的js函数</td>
</tr>
</tbody>
</table>
<h3 id="与Spring集成"><a href="#与Spring集成" class="headerlink" title="与Spring集成"></a>与Spring集成</h3><ul>
<li>通过<code>JpipeThreadPoolFactoryBean</code>类</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"top.ylonline.jpipe.spring.JpipeSpringFactoryBean"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"pool-1"</span> <span class="attr">class</span>=<span class="string">"top.ylonline.jpipe.threadpool.common.Pool"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"coreSize"</span> <span class="attr">value</span>=<span class="string">"-1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxSize"</span> <span class="attr">value</span>=<span class="string">"20"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"preStartAllCoreThreads"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"keepAlive"</span> <span class="attr">value</span>=<span class="string">"12000000"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"queueSize"</span> <span class="attr">value</span>=<span class="string">"500"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 工场模式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"top.ylonline.jpipe.threadpool.util.JpipeThreadPoolFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pool"</span> <span class="attr">ref</span>=<span class="string">"pool-1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 或者 </span></span><br><span class="line"><span class="comment">    &lt;bean class="top.ylonline.jpipe.threadpool.util.JpipeThreadPoolFactoryBean"&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="pool"&gt;</span></span><br><span class="line"><span class="comment">            &lt;bean class="top.ylonline.jpipe.threadpool.common.Pool"&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="coreSize" value="4"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="maxSize" value="10"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="preStartAllCoreThreads" value="true"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="keepAlive" value="60000"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;property name="queueSize" value="500"/&gt;</span></span><br><span class="line"><span class="comment">            &lt;/bean&gt;</span></span><br><span class="line"><span class="comment">        &lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;</span></span><br><span class="line"><span class="comment">	--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>通过<code>JpipeThreadPoolBuilder</code>类</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"top.ylonline.jpipe.spring.JpipeSpringFactoryBean"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- builder 模式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jpipeThreadPoolBuilder"</span> <span class="attr">class</span>=<span class="string">"top.ylonline.jpipe.threadpool.util.JpipeThreadPoolBuilder"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pool"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"top.ylonline.jpipe.threadpool.common.Pool"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"coreSize"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxSize"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"preStartAllCoreThreads"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"keepAlive"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"queueSize"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jpipeThreadPool-3"</span> <span class="attr">factory-bean</span>=<span class="string">"jpipeThreadPoolBuilder"</span> <span class="attr">factory-method</span>=<span class="string">"build"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>通过 JavaBean 方式</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JpipeSpringFactoryBean <span class="title">jpipeSpringFactoryBean</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> JpipeSpringFactoryBean();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JpipeThreadPoolExecutor <span class="title">jpipeThreadPoolExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Pool pool = <span class="keyword">new</span> Pool();</span><br><span class="line">    pool.setCoreSize(<span class="number">10</span>);</span><br><span class="line">    pool.setMaxSize(<span class="number">1024</span>);</span><br><span class="line">    pool.setPreStartAllCoreThreads(<span class="keyword">true</span>);</span><br><span class="line">    pool.getKeepAlive(<span class="number">60000</span>);</span><br><span class="line">    pool.getQueueSize(<span class="number">512</span>);</span><br><span class="line">    <span class="comment">// return new EagerThreadPool().getExecutor(pool);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> JpipeThreadPoolBuilder(pool).build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>通过 spring-boot starter</p>
<ul>
<li><p>pom.xml 依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.ylonline.jpipe<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jpipe-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>application.yml 配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jpipe:</span></span><br><span class="line">  <span class="comment"># enabled: true</span></span><br><span class="line">  <span class="attr">pool:</span></span><br><span class="line">    <span class="attr">pre-start-all-core-threads:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">core-size:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">max-size:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">queue-size:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">keep-alive:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="定义一个-pagelet"><a href="#定义一个-pagelet" class="headerlink" title="定义一个 pagelet"></a>定义一个 pagelet</h3><p>使用 Spring 的 <code>@Service</code> 定义一个pagelet，实现 PageletBean 接口的 doExec 方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span>(<span class="string">"testPagelet1"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageletServiceTest</span> <span class="keyword">implements</span> <span class="title">PageletBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">doExec</span><span class="params">(<span class="keyword">final</span> Map&lt;String, String&gt; params)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;(params);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TimeUnit.MILLISECONDS.sleep(<span class="keyword">new</span> Random().nextInt(<span class="number">5000</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="jpipe-js"><a href="#jpipe-js" class="headerlink" title="jpipe js"></a>jpipe js</h2><blockquote>
<p>jpipe.core.js<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span> (<span class="params">root, factory</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> exports === <span class="string">'object'</span>) &#123;</span><br><span class="line">        <span class="built_in">module</span>.exports = exports = factory();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd) &#123;</span><br><span class="line">        define([], factory);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        root.JP = factory();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> JP = JP || (<span class="function"><span class="keyword">function</span> (<span class="params">window</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            view: <span class="function"><span class="keyword">function</span> (<span class="params">json</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> id = json[<span class="string">'id'</span>];</span><br><span class="line">                <span class="built_in">document</span>.getElementById(id).innerHTML = json[<span class="string">'html'</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;(<span class="built_in">window</span>));</span><br><span class="line">    <span class="keyword">return</span> JP;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="JSP-标签"><a href="#JSP-标签" class="headerlink" title="JSP 标签"></a>JSP 标签</h3><ul>
<li>引入标签 <code>&lt;%@ taglib prefix=&quot;jp&quot; uri=&quot;http://java.yl-online.top/jsp/jpipe&quot; %&gt;</code></li>
<li>使用自定义标签，最好放到<code>&lt;/body&gt;</code>上面，这样就不会堵塞首屏dom的渲染<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">trimDirectiveWhitespaces</span>=<span class="string">"true"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"jp"</span> <span class="attr">uri</span>=<span class="string">"http://java.yl-online.top/jsp/jpipe"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">"ctx"</span> <span class="attr">value</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;ctx&#125;/resources/jpipe.core.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>index<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jp:pipe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jp:pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet1"</span> <span class="attr">bean</span>=<span class="string">"testPagelet1"</span> <span class="attr">var</span>=<span class="string">"item"</span> <span class="attr">uri</span>=<span class="string">"id=123&amp;name=forever杨"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>jspbody support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item.id&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jp:pagelet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jp:pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet2"</span> <span class="attr">bean</span>=<span class="string">"testPagelet2"</span> <span class="attr">var</span>=<span class="string">"item2"</span> <span class="attr">uri</span>=<span class="string">"id=456&amp;name=forever杨2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>jspbody support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item2.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jp:pagelet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">jp:pipe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>略：部署到 Tomcat、Jetty 等容器</p>
<h3 id="FTL-指令"><a href="#FTL-指令" class="headerlink" title="FTL 指令"></a>FTL 指令</h3><ul>
<li>通过 freemarker Configuration 配置命名空间<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MvcWevConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> freemarker.template.Configuration configuration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfiguration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Version version = freemarker.template.Configuration.getVersion();</span><br><span class="line">        DefaultObjectWrapper wrapper = <span class="keyword">new</span> DefaultObjectWrapperBuilder(version).build();</span><br><span class="line">        <span class="keyword">this</span>.configuration.setSharedVariable(<span class="string">"jp"</span>, <span class="keyword">new</span> FmHashModel(wrapper));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;#--&lt;#assign pipe="top.ylonline.jpipe.freemarker.tag.PipeTag"?new() /&gt;--&gt;</span><br><span class="line">&lt;#--&lt;#assign pagelet="top.ylonline.jpipe.freemarker.tag.PageletTag"?new() /&gt;--&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jpipe.core.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>index<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">@jp.pipe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">@jp.pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet1"</span> <span class="attr">bean</span>=<span class="string">"testPagelet1"</span> <span class="attr">var</span>=<span class="string">"item"</span> <span class="attr">uri</span>=<span class="string">"id=123&amp;name=forever杨"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>testPagelet1 jspbody support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item.id&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">@jp.pagelet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">@jp.pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet2"</span> <span class="attr">bean</span>=<span class="string">"testPagelet2"</span> <span class="attr">var</span>=<span class="string">"item2"</span> <span class="attr">uri</span>=<span class="string">"id=456&amp;name=forever杨2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>testPagelet2 jspbody support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item2.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">@jp.pagelet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">@jp.pipe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>通过 assign 指令配置</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#assign</span> <span class="attr">pipe</span>=<span class="string">"top.ylonline.jpipe.freemarker.tag.PipeTag"</span>?<span class="attr">new</span>() /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">#assign</span> <span class="attr">pagelet</span>=<span class="string">"top.ylonline.jpipe.freemarker.tag.PageletTag"</span>?<span class="attr">new</span>() /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jpipe.core.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>index<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">@jp.pipe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">@jp.pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet1"</span> <span class="attr">bean</span>=<span class="string">"testPagelet1"</span> <span class="attr">var</span>=<span class="string">"item"</span> <span class="attr">uri</span>=<span class="string">"id=123&amp;name=forever杨"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>testPagelet1 jspbody support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item.id&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">@jp.pagelet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">@jp.pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet2"</span> <span class="attr">bean</span>=<span class="string">"testPagelet2"</span> <span class="attr">var</span>=<span class="string">"item2"</span> <span class="attr">uri</span>=<span class="string">"id=456&amp;name=forever杨2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>testPagelet2 jspbody support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item2.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">@jp.pagelet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">@jp.pipe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="在-FTL-中使用自定义-JSP-标签"><a href="#在-FTL-中使用自定义-JSP-标签" class="headerlink" title="在 FTL 中使用自定义 JSP 标签"></a>在 FTL 中使用自定义 JSP 标签</h3><p>FTL 是支持使用 JSP 标签的。如果你的项目本来没有使用 JSP 模版，不推荐这种使用做法。因为自定义 JSP 标签是在 JSP 环境中来写作操作的，需要引入 支持 JSP 1.1或者 JSP 1.2的 Servlet 容器（Tomcat、Jetty等Servlet容器部署），而 FTL 可以在非 Servlet 等 Web 环境中使用。</p>
<blockquote>
<p>更准确的解释是：尽管 Servlet 容器没有本地的JSP支持，你也可以在 FreeMarker 中使用JSP标签库。 只是确保对JSP 1.2版本(或更新)的 javax.servlet.jsp.* 包在Web应用程序中可用就行。如果你的servlet容器只对JSP 1.1支持， 那么你不得不将下面六个类(比如你可以从Tomcat 5.x或Tomcat 4.x的jar包中提取)复制到Web应用的 WEB-INF/classes/…目录下： javax.servlet.jsp.tagext.IterationTag， javax.servlet.jsp.tagext.TryCatchFinally， javax.servlet.ServletContextListener， javax.servlet.ServletContextAttributeListener， javax.servlet.http.HttpSessionAttributeListener， javax.servlet.http.HttpSessionListener。但是要注意， 因为容器只支持JSP 1.1，通常是使用较早的Servlet 2.3之前的版本，事件监听器可能就不支持，因此JSP 1.2标签库来注册事件监听器会正常工作。</p>
</blockquote>
<blockquote>
<p>截止发稿：JSP已经发布到 2.3版本</p>
</blockquote>
<h4 id="index-ftl-代码"><a href="#index-ftl-代码" class="headerlink" title="index.ftl 代码"></a>index.ftl 代码</h4><p>使用 <code>&lt;#assign jp=JspTaglibs[&quot;http://java.yl-online.top/jsp/jpipe&quot;] /&gt;</code> 引入自定义 JSP 标签<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#assign</span> <span class="attr">jp</span>=<span class="string">JspTaglibs[</span>"<span class="attr">http:</span>//<span class="attr">java.yl-online.top</span>/<span class="attr">jsp</span>/<span class="attr">jpipe</span>"] /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jpipe.core.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>index<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pagelet2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">@jp.pipe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">@jp.pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet1"</span> <span class="attr">bean</span>=<span class="string">"testPagelet1"</span> <span class="attr">var</span>=<span class="string">"item"</span> <span class="attr">uri</span>=<span class="string">"id=123&amp;name=forever杨"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>testPagelet1 support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item.id&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">@jp.pagelet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">@jp.pagelet</span> <span class="attr">domid</span>=<span class="string">"pagelet2"</span> <span class="attr">bean</span>=<span class="string">"testPagelet2"</span> <span class="attr">var</span>=<span class="string">"item2"</span> <span class="attr">uri</span>=<span class="string">"id=456&amp;name=forever杨2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>testPagelet2 support<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;item2.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">@jp.pagelet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">@jp.pipe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="部署到-undertow"><a href="#部署到-undertow" class="headerlink" title="部署到 undertow"></a>部署到 undertow</h4><blockquote>
<p>maven 依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- undertow 部署 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-undertow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- undertow 部署 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>由于 undertow 等容器没有 jsp-api 环境，所以需要依赖 javax.servlet.jsp-api 包，同时要通过 TaglibFactory 配置 freemarker 的 classpathTlds。没有这个配置，会报错：freemarker.ext.jsp.TaglibFactory$TaglibGettingException: No TLD was found for the “<a href="http://java.yl-online.top/jsp/jpipe&quot;" target="_blank" rel="noopener">http://java.yl-online.top/jsp/jpipe&quot;</a> JSP taglib URI. (TLD-s are searched according the JSP 2.2 specification. In development- and embedded-servlet-container setups you may also need the “MetaInfTldSources” and “ClasspathTlds” freemarker.ext.servlet.FreemarkerServlet init-params or the similar system properites.)</p>
<blockquote>
<p>Configuration</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MvcWevConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> FreeMarkerConfigurer freeMarkerConfigurer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadClassPathTlds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; classpathTlds = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        classpathTlds.add(<span class="string">"/META-INF/Jpipe.tld"</span>);</span><br><span class="line">        freeMarkerConfigurer.getTaglibFactory().setClasspathTlds(classpathTlds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="部署到-Tomcat"><a href="#部署到-Tomcat" class="headerlink" title="部署到 Tomcat"></a>部署到 Tomcat</h4><blockquote>
<p>maven 依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 外部 Tomcat 部署 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 外部 Tomcat 部署 --&gt;</span></span><br></pre></td></tr></table></figure>
<p>由于 Tomcat、Jetty中已经有 jsp-api 环境了，这里不需要再依赖 javax.servlet.jsp-api 包</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>BigPipe</tag>
        <tag>Facebook</tag>
      </tags>
  </entry>
  <entry>
    <title>camel-ftp 使用笔记</title>
    <url>/posts/6ae6b8a1.html</url>
    <content><![CDATA[<h1 id="解决中文目录乱码问题"><a href="#解决中文目录乱码问题" class="headerlink" title="解决中文目录乱码问题"></a>解决中文目录乱码问题</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ftpClient.controlEncoding=gb2312</span><br></pre></td></tr></table></figure>
<h1 id="idempotentConsumer"><a href="#idempotentConsumer" class="headerlink" title="idempotentConsumer"></a>idempotentConsumer</h1><blockquote>
<p>file</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tmp 是一个路径：./../tmp</span></span><br><span class="line"><span class="comment">// 通过文件名缓存，如果缓存中已经有这个文件名，怎不再处理这个文件</span></span><br><span class="line">ValueBuilder messageIdExpression = header(Exchange.FILE_PATH)</span><br><span class="line">                .append(<span class="string">"#"</span>).append(header(Exchange.FILE_LAST_MODIFIED))</span><br><span class="line">                .append(<span class="string">"#"</span>).append(header(Exchange.FILE_LENGTH));</span><br><span class="line">FileIdempotentRepository idempotentRepository =</span><br><span class="line">    FileIdempotentRepository.fileIdempotentRepository(<span class="keyword">new</span> File(tmp, <span class="keyword">this</span>.getClass().getSimpleName() + <span class="string">".txt"</span>), <span class="number">100</span> * <span class="number">1024</span>, <span class="number">5</span> * <span class="number">1024</span> * <span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">from(url.toString())</span><br><span class="line">    .idempotentConsumer(messageIdExpression, idempotentRepository)</span><br><span class="line">    .process(arrearsProcessor)</span><br><span class="line">    .log(LoggingLevel.INFO, log, <span class="string">"finished processor the file $&#123;file:path&#125;."</span>);</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<blockquote>
<p>jpa</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> EntityManagerFactory entityManagerFactory;</span><br><span class="line"></span><br><span class="line">ValueBuilder messageIdExpression = header(Exchange.FILE_PATH)</span><br><span class="line">                .append(<span class="string">"#"</span>).append(header(Exchange.FILE_LAST_MODIFIED))</span><br><span class="line">                .append(<span class="string">"#"</span>).append(header(Exchange.FILE_LENGTH));</span><br><span class="line">JpaMessageIdRepository idempotentRepository =</span><br><span class="line">    JpaMessageIdRepository.jpaMessageIdRepository(entityManagerFactory,</span><br><span class="line">                                                  <span class="keyword">this</span>.getClass().getName());</span><br><span class="line">from(url.toString())</span><br><span class="line">    .idempotentConsumer(messageIdExpression, idempotentRepository)</span><br><span class="line">    .process(arrearsProcessor)</span><br><span class="line">    .log(LoggingLevel.INFO, log, <span class="string">"finished processor the file $&#123;file:name&#125;."</span>);</span><br></pre></td></tr></table></figure>
<h1 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 标识文件名是“20180803.txt”时，才执行之后的流程</span></span><br><span class="line">.filter(header(Exchange.FILE_NAME).isEqualTo(<span class="string">"20180803.txt"</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 标识文件名不是“20180803.txt”时，才执行之后的流程</span></span><br><span class="line">.filter(header(Exchange.FILE_NAME).isNotEqualTo(<span class="string">"20180803.txt"</span>))</span><br></pre></td></tr></table></figure>
<h1 id="filterFile"><a href="#filterFile" class="headerlink" title="filterFile"></a>filterFile</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 只读取包含当天日期的文件：文件前缀_20_20180305.txt</span><br><span class="line">ftp://localhost:22/test?username=xxx&amp;password=xx&amp;filterFile=$&#123;file:name&#125; contains $&#123;date:now:yyyyMMdd&#125;</span><br></pre></td></tr></table></figure>
<h1 id="readLock"><a href="#readLock" class="headerlink" title="readLock"></a>readLock</h1><p>readLock=rename可以阻止camel读取正在被写入的文件</p>
<h1 id="move"><a href="#move" class="headerlink" title="move"></a>move</h1><blockquote>
<p>移动文件到同级 done 目录下</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 移动到同级 done 目录下</span><br><span class="line">ftp://localhost:22/test?username=xxx&amp;password=xx&amp;move=done&amp;readLock=rename</span><br></pre></td></tr></table></figure>
<blockquote>
<p>移动并重命名文件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ftp://localhost:22/test?username=xxx&amp;password=xx&amp;move=done/&#123;file:name.noext&#125;_$&#123;file:modified&#125;.$&#123;file:ext&#125;&amp;readLock=rename</span><br></pre></td></tr></table></figure>
<p>参考：org.apache.camel.language.simple.SimpleLanguage.java</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>camel-ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>Java、JS版AES加密算法工具类</title>
    <url>/posts/1f7e0ef5.html</url>
    <content><![CDATA[<p>[TOC]<br>    本文主要是实现<code>AES</code>算法的<code>Java</code>版本和<code>Javascript</code>版本，并提供测试例子。<br>    AES是一个对称分组密码算法，旨在取代DES成为广泛使用的标准。根据使用的密码长度，AES最常见的有3种方案，用以适应不同的场景要求，分别是AES-128、AES-192和AES-256。<br>    Java中的PKCS5Padding和Javascript中的PKCS7Padding的结果是一样。</p>
<a id="more"></a>
<h2 id="Java-版-AES-工具类"><a href="#Java-版-AES-工具类" class="headerlink" title="Java 版 AES 工具类"></a>Java 版 AES 工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.ylonline.common.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AES 加密、解密</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/2/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> AESUtils &#123;</span><br><span class="line">    GBK &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getCharset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"GBK"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    UTF8 &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getCharset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"UTF-8"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AES_KEY = <span class="string">"MHYKD5tes6fhkdv9"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCharset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AbstractMethodError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 需要加密的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 加密密码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 加密后的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] enc(String str, String key) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(key.getBytes(getCharset()), <span class="string">"AES"</span>);</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);</span><br><span class="line">            <span class="keyword">return</span> cipher.doFinal(str.getBytes(getCharset()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持的编码格式"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持的加密算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持的填充机制"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无效的Key、错误的长度、未初始化等"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"密码的块大小不匹配"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"输入的数据错误，导致填充机制未能正常填充"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] dec(<span class="keyword">byte</span>[] str, String key) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(key.getBytes(getCharset()), <span class="string">"AES"</span>);</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);</span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, skeySpec);</span><br><span class="line">            <span class="keyword">return</span> cipher.doFinal(str);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持的编码格式"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持的加密算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持的填充机制"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无效的Key、错误的长度、未初始化等"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"密码的块大小不匹配"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"输入的数据错误，导致填充机制未能正常填充"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES 加密，使用默认 key 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要加密的明文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 加密后的密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">encrypt</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> encrypt(str, AESUtils.AES_KEY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES加密，使用指定 key 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要加密的明文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 加密 key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 解密后字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">encrypt</span><span class="params">(String str, String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] encryptBytes = enc(str, key);</span><br><span class="line">        <span class="keyword">return</span> Base64Utils.UTF8.encode(encryptBytes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES 解密，使用默认 key 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要解密的密文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 解密后的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">decrypt</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> decrypt(str, AESUtils.AES_KEY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES 解密，使用默认 key 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要解密的密文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 解密 key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 解密后的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">decrypt</span><span class="params">(String str, String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="keyword">null</span> || <span class="string">""</span>.equals(str)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = Base64Utils.UTF8.decode2byte(str);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(dec(bytes, key), getCharset());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Java-版-AES-工具类测试"><a href="#Java-版-AES-工具类测试" class="headerlink" title="Java 版 AES 工具类测试"></a>Java 版 AES 工具类测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.ylonline.common.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/2/13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AESUtilsTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY = <span class="string">"SYhU9Qf3nmrZAx7D"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String STR = <span class="string">"法拉利_24234slfkjsl《》？：“”｛｝+——"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">aes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String encrypt = AESUtils.UTF8.encrypt(STR, KEY);</span><br><span class="line">        System.out.println(<span class="string">"encrypt ---&gt; "</span> + encrypt);</span><br><span class="line">        String decrypt = AESUtils.UTF8.decrypt(encrypt, KEY);</span><br><span class="line">        System.out.println(decrypt);</span><br><span class="line">        Assert.assertEquals(STR, decrypt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JS-版-AES-工具类"><a href="#JS-版-AES-工具类" class="headerlink" title="JS 版 AES 工具类"></a>JS 版 AES 工具类</h2><p>要引入的 js 文件，地址：<a href="https://github.com/brix/crypto-js" target="_blank" rel="noopener">https://github.com/brix/crypto-js</a><br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script th:src=<span class="string">"@&#123;/crypto-js/core.js&#125;"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script th:src="@&#123;/</span>crypto-js/enc-base64.js&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script th:src="</span>@&#123;/crypto-js/cipher-core.js&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script th:src="</span>@&#123;/crypto-js/aes.js&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script th:src="</span>@&#123;/crypto-js/mode-ecb.js&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="JS-版-AES-工具类扩展"><a href="#JS-版-AES-工具类扩展" class="headerlink" title="JS 版 AES 工具类扩展"></a>JS 版 AES 工具类扩展</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">len</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = len || <span class="number">16</span>,</span><br><span class="line">        s = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span>,</span><br><span class="line">        n = s.length;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a; i++) &#123;</span><br><span class="line">        r += s.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encryptAES</span>(<span class="params">str, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = CryptoJS.enc.Utf8.parse(str),</span><br><span class="line">        k = CryptoJS.enc.Utf8.parse(key),</span><br><span class="line">        c = CryptoJS.AES.encrypt(s, k, &#123;</span><br><span class="line">            mode: CryptoJS.mode.ECB,</span><br><span class="line">            padding: CryptoJS.pad.Pkcs7</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="comment">// 转换为字符串</span></span><br><span class="line">        <span class="comment">// return c.toString();</span></span><br><span class="line">        <span class="comment">// Hex 转为十六进制</span></span><br><span class="line">        d = CryptoJS.enc.Hex.parse(c.ciphertext.toString());</span><br><span class="line">    <span class="comment">// Base64 编码</span></span><br><span class="line">    <span class="keyword">return</span> CryptoJS.enc.Base64.stringify(d);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decryptAES</span>(<span class="params">str, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> k = CryptoJS.enc.Utf8.parse(key),</span><br><span class="line">        c = CryptoJS.AES.decrypt(str, k, &#123;</span><br><span class="line">            mode: CryptoJS.mode.ECB,</span><br><span class="line">            padding: CryptoJS.pad.Pkcs7</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="comment">// 转换为 UTF8 字符串</span></span><br><span class="line">    <span class="keyword">return</span> CryptoJS.enc.Utf8.stringify(c);</span><br><span class="line">    <span class="comment">// return c.toString(CryptoJS.enc.Utf8);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JS-版-AES-工具类测试"><a href="#JS-版-AES-工具类测试" class="headerlink" title="JS 版 AES 工具类测试"></a>JS 版 AES 工具类测试</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> key = getRandom();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'key: %o'</span>, key);</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'法拉利_24234slfkjsl《》？：“”｛｝+——'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'str: %o'</span>, str);</span><br><span class="line"><span class="keyword">var</span> e = encryptAES(str, key);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'e: %o'</span>, e);</span><br><span class="line"><span class="keyword">var</span> d = decryptAES(e, key);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'d: %o'</span>, d);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>AES</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate的DynamicInsert、DynamicUpdate介绍</title>
    <url>/posts/2ed26d9a.html</url>
    <content><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><blockquote>
<p>使用 Dynamic Update</p>
</blockquote>
<p>如果使用了 Dynamic Update，需要注意的是，当select后，显式的把某些字段set为NULL，hibernate 会认为你修改了该字段，会生成到 update 语句中。一般先 select 实体出来，再 save 的话，只会 update 该实体被修改的字段。否则会 update 所有表字段。<br>添加Dynamic Update配置可以减少被 update 的字段。</p>
<blockquote>
<p>使用 Dynamic Insert</p>
</blockquote>
<p>如果使用了 Dynamic Insert，并且数据库配置了默认值，当 insert，并且new 实体时，该属性没有 set 值的话，会使用数据库默认值，否则会使用实体的值。</p>
<a id="more"></a>
<h2 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h2><blockquote>
<p>第一种：使用注解配置<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entiry</span>(name = <span class="string">"t_user"</span>)</span><br><span class="line"><span class="meta">@DynamicInsert</span></span><br><span class="line"><span class="meta">@DynamicUpdate</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> Strin name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>第二种：使用.hbm.xml配置<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"xxx.User"</span> <span class="attr">table</span>=<span class="string">"t_user"</span> <span class="attr">dynamic-insert</span>=<span class="string">"true"</span> <span class="attr">dynamic-update</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 省略配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>主要比较一下insert、update语句的区别，其中update一个已有的实体对象时，hibernate会再执行一次select操作再去update<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">ApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository repository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 1、插入新记录</span></span><br><span class="line">        <span class="comment">// 配置 dynamic insert</span></span><br><span class="line">        <span class="comment">// insert into user (name) values (?)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 未配置 dynamic insert</span></span><br><span class="line">        <span class="comment">// insert into user (age, name, status) values (?, ?, ?)</span></span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">"AAA"</span>);</span><br><span class="line">        User save = repository.save(user);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2、更新记录</span></span><br><span class="line">        <span class="comment">// 配置 dynamic update</span></span><br><span class="line">        <span class="comment">// select user0_.id as id1_1_0_, user0_.age as age2_1_0_, user0_.name as name3_1_0_, user0_.status as status4_1_0_ from user user0_ where user0_.id=?</span></span><br><span class="line">        <span class="comment">// update user set name=? where id=?</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 未配置 dynamic update</span></span><br><span class="line">        <span class="comment">// select user0_.id as id1_1_0_, user0_.age as age2_1_0_, user0_.name as name3_1_0_, user0_.status as status4_1_0_ from user user0_ where user0_.id=?</span></span><br><span class="line">        <span class="comment">// update user set age=?, name=?, status=? where id=?</span></span><br><span class="line">        save.setName(<span class="string">"BBB"</span>);</span><br><span class="line">        repository.save(save);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-boot cxf 集成</title>
    <url>/posts/b0385cf0.html</url>
    <content><![CDATA[<h1 id="坑一"><a href="#坑一" class="headerlink" title="坑一"></a>坑一</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> AegisDatabinding <span class="title">aegisDatabinding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> AegisDatabinding();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 这个要配置成多例模式</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@Scope</span>(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</span><br><span class="line"><span class="keyword">public</span> org.apache.cxf.jaxws.support.<span class="function">JaxWsServiceFactoryBean <span class="title">jaxWsServiceFactoryBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    JaxWsServiceFactoryBean sf = <span class="keyword">new</span> JaxWsServiceFactoryBean();</span><br><span class="line">    sf.setWrapped(<span class="keyword">true</span>);</span><br><span class="line">    sf.setDataBinding(aegisDatabinding());</span><br><span class="line">    <span class="keyword">return</span> sf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Endpoint <span class="title">userEndpoint</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">    EndpointImpl endpoint = <span class="keyword">new</span> EndpointImpl(userService);</span><br><span class="line">    endpoint.setServiceFactory(jaxWsServiceFactoryBean());</span><br><span class="line">    endpoint.publish(<span class="string">"/imCheckRelatedWeixinService.ws"</span>);</span><br><span class="line">    <span class="keyword">return</span> endpoint;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里 endpoint.publish 要在最后，否则获取到的 serviceFactory、dataBinding 等参数是空的</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>cxf</tag>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate 函数</title>
    <url>/posts/35958b11.html</url>
    <content><![CDATA[<p>HQL(Hibernate Query Language) 提供了丰富的、灵活的查询特性，提供了类似标准SQL语句的查询方式，同时也提供了面向对象的封装。以下是HQL的一些常用函数，比如时间函数、字符串函数等。</p>
<a id="more"></a>
<h1 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h1><table>
<thead>
<tr>
<th>函数名称</th>
<th>说明</th>
<th>支持</th>
<th>使用方法</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>CURRENT_DATE()</td>
<td>数据库当前日期</td>
<td>JPAQL、HQL</td>
<td>CURRENT_DATE()</td>
<td></td>
</tr>
<tr>
<td>CURRENT_TIME()</td>
<td>数据库当前时间</td>
<td>JPAQL、HQL</td>
<td>CURRENT_TIME()</td>
<td></td>
</tr>
<tr>
<td>CURRENT_TIMESTAMP()</td>
<td>数据库当前日期+时间</td>
<td>JPAQL、HQL</td>
<td>CURRENT_TIMESTAMP()</td>
<td></td>
</tr>
<tr>
<td>SECOND(d)</td>
<td>日期中提取秒</td>
<td>HQL</td>
<td>SECOND(时间字段)</td>
<td>空的时候返回null</td>
</tr>
<tr>
<td>MINUTE(d)</td>
<td>日期中提取分</td>
<td>HQL</td>
<td>MINUTE(时间字段)</td>
<td>空的时候返回null</td>
</tr>
<tr>
<td>HOUR(d)</td>
<td>日期中提取小时</td>
<td>HQL</td>
<td>HOUR(时间字段)</td>
<td>空的时候返回null</td>
</tr>
<tr>
<td>DAY(d)</td>
<td>日期中提取天</td>
<td>HQL</td>
<td>DAY(时间字段)</td>
<td>空的时候返回null</td>
</tr>
<tr>
<td>MONTH(d)</td>
<td>日期中提取月</td>
<td>HQL</td>
<td>MONTH(时间字段)</td>
<td>空的时候返回null</td>
</tr>
<tr>
<td>YEAR(d)</td>
<td>日期中提取年</td>
<td>HQL</td>
<td>YEAR(时间字段)</td>
<td>空的时候返回null</td>
</tr>
</tbody>
</table>
<h1 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h1><table>
<thead>
<tr>
<th>函数名称</th>
<th>说明</th>
<th>支持</th>
<th>使用方法</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>SUBSTRIGN(s,offset,length)</td>
<td>字符截取</td>
<td>JPAQL、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TRIM(s)</td>
<td>去掉两端的空格</td>
<td>JPAQL、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LOWER(s)</td>
<td>转换小写</td>
<td>JPAQL、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>UPPER(s)</td>
<td>转换大写</td>
<td>JPAQL、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>LENGTH(s)</td>
<td>字符长度</td>
<td>JPAQL、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CONCAT(s1,s2)</td>
<td>连接字符串</td>
<td>JPAQL、HQL</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h1><table>
<thead>
<tr>
<th>函数名称</th>
<th>说明</th>
<th>支持</th>
<th>使用方法</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>ABS(n)</td>
<td>取绝对值</td>
<td>JPAQL、HQL</td>
<td>ABS(col_name[数字类型对象属性])</td>
<td></td>
</tr>
<tr>
<td>SQRT(n)</td>
<td>取平方根</td>
<td>JPAQL、HQL</td>
<td>SQRT(col_name[数字类型对象属性])</td>
<td></td>
</tr>
<tr>
<td>MOD(n1, n2)</td>
<td>取余数</td>
<td>JPAQL、HQL</td>
<td>MOD([对象属性(数字)或值],[对象属性（数字）或值])</td>
<td>数字必须是整型</td>
</tr>
</tbody>
</table>
<h1 id="集合函数"><a href="#集合函数" class="headerlink" title="集合函数"></a>集合函数</h1><table>
<thead>
<tr>
<th>函数名称</th>
<th>说明</th>
<th>支持</th>
<th>使用方法</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>MAX(c)</td>
<td>最大值</td>
<td>JPQHQL 、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MIN(c)</td>
<td>最小值</td>
<td>JPQHQL 、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>COUNT(c)</td>
<td>返回计数</td>
<td>JPQHQL 、HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SIZE(c)</td>
<td>方法集合内对象数量</td>
<td>JPAQL HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MINELEMENT(c)</td>
<td>返回集合中最小元素</td>
<td>HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MAXELEMENT(c)</td>
<td>返回集合中最大元素</td>
<td>HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MININDEX(c)</td>
<td>返回索引集合最小索引</td>
<td>HQL</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MAXINDEX(c)</td>
<td>返回索引集合最大索引</td>
<td>HQL</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate 配置字段加解密</title>
    <url>/posts/996dbf54.html</url>
    <content><![CDATA[<p>使用 Hibernate 配置数据库字段的加密、解密函数。</p>
<p>可以使用<code>@ColumnTransformer</code>注解的<code>read</code>、<code>write</code>属性，或者使用 xml 配置的<code>column</code>标签的<code>read</code>、<code>write</code>属性</p>
<blockquote>
<p>本例子基于 spring-boot-starter-data-jpa、druid-spring-boot-starter、spring-boot-starter-test</p>
</blockquote>
<a id="more"></a>
<h1 id="User-实体类配置"><a href="#User-实体类配置" class="headerlink" title="User 实体类配置"></a>User 实体类配置</h1><blockquote>
<p>wx_crypto.des_decrypt、wx_crypto.des_encrypt自定义的加解密函数，可以使用 Oracle 内置的 to_char、nvl 等函数代替，效果是一样的</p>
</blockquote>
<ul>
<li>实体类注解配置</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.ColumnTransformer;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.DynamicInsert;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.annotations.DynamicUpdate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Column;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.SequenceGenerator;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"t_user"</span>)</span><br><span class="line"><span class="meta">@DynamicInsert</span></span><br><span class="line"><span class="meta">@DynamicUpdate</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@SequenceGenerator</span>(name = <span class="string">"sq_name"</span>, sequenceName = <span class="string">"sq_user"</span>)</span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator = <span class="string">"sq_name"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ColumnTransformer</span>(</span><br><span class="line">        	<span class="comment">// 注意这里的 cert_no 使用的是数据库字段名，不是使用实体类的字段名</span></span><br><span class="line">            read = <span class="string">"wx_crypto.des_decrypt(cert_no)"</span>,</span><br><span class="line">            write = <span class="string">"wx_crypto.des_encrypt(?)"</span></span><br><span class="line">    )</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"cert_no"</span>)</span><br><span class="line">    <span class="keyword">private</span> String certNo; <span class="comment">// 身份证号</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>read 配置要使用数据库字段名，否则会报错：ORA-00904: “USER0_”.”CERTNO”: 标识符无效</p>
</blockquote>
<ul>
<li>实体类 User.hbm.xml 配置</li>
</ul>
<blockquote>
<p>注意：xml 配置 read、write 需要 hibernate 3.5.x 以上版本才支持</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 4.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"top.ylonline.domain.User"</span> <span class="attr">table</span>=<span class="string">"t_user"</span> <span class="attr">dynamic-insert</span>=<span class="string">"true"</span> <span class="attr">dynamic-update</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"java.lang.Long"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"ID"</span> <span class="attr">precision</span>=<span class="string">"22"</span> <span class="attr">scale</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"sequence"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"sequence"</span>&gt;</span>sq_user<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span> <span class="attr">type</span>=<span class="string">"java.lang.String"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">length</span>=<span class="string">"20"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"certNo"</span> <span class="attr">type</span>=<span class="string">"java.lang.String"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">column</span> <span class="attr">name</span>=<span class="string">"cert_no"</span> <span class="attr">length</span>=<span class="string">"18"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">read</span>=<span class="string">"wx_crypto.des_decrypt(cert_no)"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">write</span>=<span class="string">"wx_crypto.des_encrypt(?)"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>read 配置要使用数据库字段名，否则会报错：ORA-00904: “USER0_”.”CERTNO”: 标识符无效</p>
</blockquote>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ul>
<li>UserRepository.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> top.ylonline.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2017/8/21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>, <span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">findFirstByUserName</span><span class="params">(String userName)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>数据库配置</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=bkimDB)))</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">Uf+4C5nKZ9gLxZbvG+pPl4Wb6xDM5/xiPzPLM4PZ/MRESrucR1z9FQUJXnuTiXM+6bdAmJzYRcchhHM+ENmt6g==</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">keep-alive:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="string">'x'</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">web-stat-filter:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">connection-properties:</span> <span class="string">config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMcX0mcr65fnwkYTEyxlfiQHxyDGHGzp3hH37na7cmN20y7hd5JjlwXq91xbRzpI/LCu/ZJs5TPhwmHwf46VPy8CAwEAAQ==</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">database:</span> <span class="string">oracle</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">hibernate:</span></span><br><span class="line">        <span class="attr">format_sql:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">dialect:</span> <span class="string">org.hibernate.dialect.Oracle10gDialect</span></span><br></pre></td></tr></table></figure>
<ul>
<li>Test 类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> top.ylonline.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Propagation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/12/7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">DataJpaTest</span></span></span><br><span class="line"><span class="class">// 测试环境默认是会回滚数据，操作的数据是不会插入、更新到数据库的。如果要插入、更新到数据库，要配置一下事物</span></span><br><span class="line"><span class="class">@<span class="title">Transactional</span>(<span class="title">propagation</span> </span>= Propagation.NOT_SUPPORTED)</span><br><span class="line"><span class="comment">// 使用真实环境测试，否则使用的是内嵌的内存数据库</span></span><br><span class="line"><span class="meta">@AutoConfigureTestDatabase</span>(replace = AutoConfigureTestDatabase.Replace.NONE)</span><br><span class="line"><span class="comment">// 使用 druid 连接池</span></span><br><span class="line"><span class="meta">@Import</span>(&#123;DruidDataSourceAutoConfigure<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">UserRepositoryTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        oauth.setUserName(<span class="string">"forever杨"</span>);</span><br><span class="line">        oauth.setCertNo(<span class="string">"sldfjlsj"</span>);</span><br><span class="line">        userRepository.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = userRepository.findFirstByUserName(<span class="string">"forever杨"</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>Hibernate</tag>
        <tag>spring-boot</tag>
        <tag>DataJpaTest</tag>
        <tag>jpa</tag>
      </tags>
  </entry>
  <entry>
    <title>JPA Criteria 查询</title>
    <url>/posts/6202485a.html</url>
    <content><![CDATA[<h1 id="构建-CriteriaQuery-实例API说明"><a href="#构建-CriteriaQuery-实例API说明" class="headerlink" title="构建 CriteriaQuery 实例API说明"></a>构建 CriteriaQuery 实例API说明</h1><h2 id="CriteriaBuilder-安全查询创建工厂"><a href="#CriteriaBuilder-安全查询创建工厂" class="headerlink" title="CriteriaBuilder 安全查询创建工厂"></a>CriteriaBuilder 安全查询创建工厂</h2><p><code>CriteriaBuilder</code>是一个工厂对象，可以从<code>EntityManager</code>或<code>EntityManagerFactory</code>类中获得。可以用于创建<code>CriteriaQuery</code>、<code>Predicate</code>等<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">CriteriaBuilder builder = entityManager.getCriteriaBuilder();</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="CriteriaQuery-安全查询主语句"><a href="#CriteriaQuery-安全查询主语句" class="headerlink" title="CriteriaQuery 安全查询主语句"></a>CriteriaQuery 安全查询主语句</h2><p><code>CriteriaQuery</code>对象必须在实体类型或嵌入式类型上的<code>Criteria</code>查询上起作用。它通过调用 <code>CriteriaBuilder.createQuery</code>或<code>CriteriaBuilder.createTupleQuery</code>等获得。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">CriteriaQuery&lt;User&gt; query = builder.createQuery(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure></p>
<h2 id="Root-定义查询的-From-子句中能出现的类型"><a href="#Root-定义查询的-From-子句中能出现的类型" class="headerlink" title="Root 定义查询的 From 子句中能出现的类型"></a>Root 定义查询的 From 子句中能出现的类型</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 User 实体查询的根对象</span></span><br><span class="line">Root&lt;User&gt; root = query.from(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Predicate-过滤条件"><a href="#Predicate-过滤条件" class="headerlink" title="Predicate 过滤条件"></a>Predicate 过滤条件</h2><p>过滤条件应用到SQL语句的FROM子句中。</p>
<p>在<code>Criteria</code>查询中，查询条件通过<code>Predicate</code>或<code>Expression</code>实例应用到<code>CriteriaQuery</code> 对象上。这些条件使用<code>CriteriaQuery.where</code>方法应用到<code>CriteriaQuery</code>对象上。</p>
<p><code>Predicate</code>对象通过调用<code>CriteriaBuilder</code>的<code>equal</code>、<code>notEqual</code>、<code>gt</code>、<code>ge</code>、<code>lt</code>、<code>le</code>、<code>between</code>、<code>like</code>等方法创建。</p>
<p><code>Predicate</code>实例也可以用<code>Expression</code>实例的<code>isNull</code>、<code>isNotNull</code>和<code>in</code>方法获得，复合的<code>Predicate</code>语句可以使用<code>CriteriaBuilder</code>的<code>and</code>、<code>or</code>方法构建。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查询 id 大于10的用户</span></span><br><span class="line">Predicate predicate = builder.gt(root.get(<span class="string">"id"</span>), <span class="number">10</span>);</span><br><span class="line">query.where(predicate);</span><br></pre></td></tr></table></figure></p>
<h2 id="Expression"><a href="#Expression" class="headerlink" title="Expression"></a>Expression</h2><p><code>Expression</code>对象用在查询语句的<code>select</code>、<code>where</code>和<code>having</code>子句中，该接口有<code>isNull</code>、<code>isNotNull</code>和<code>in</code>方法<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一种</span></span><br><span class="line">CriteriaQuery&lt;User&gt; query = builder.createQuery(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">Root&lt;User&gt; root = query.from(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">query.where(root.get(<span class="string">"id"</span>).in(<span class="number">1</span>, <span class="number">5</span>));</span><br><span class="line">entityManager.createQuery(query).getResultList();</span><br><span class="line"><span class="comment">// select * from user where id in (1, 5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种</span></span><br><span class="line">Expression&lt;String&gt; exp = root.get(<span class="string">"id"</span>);</span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">5</span>);</span><br><span class="line">predicates.add(exp.in(list));</span><br><span class="line">query.where(predicates.toArray(<span class="keyword">new</span> Predicate[predicates.size()]));</span><br><span class="line"><span class="comment">// select * from user where id in (1, 5)</span></span><br></pre></td></tr></table></figure></p>
<h2 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h2><h3 id="复合查询"><a href="#复合查询" class="headerlink" title="复合查询"></a>复合查询</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 CriteriaQuery，查询年龄为10，且名字以 ts 开头的用户</span></span><br><span class="line">Path&lt;String&gt; name = root.get(<span class="string">"name"</span>);</span><br><span class="line">query.where(</span><br><span class="line">    builder.and(</span><br><span class="line">        builder.equal(root.get(<span class="string">"age"</span>), <span class="number">10</span>),</span><br><span class="line">        builder.like(name, <span class="string">"ts%"</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">entityManager.createQuery(query).getResultList();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 CriteriaBuilder，查询年龄为10，名字以 ts 开头的用户</span></span><br><span class="line">Path&lt;String&gt; name = root.get(<span class="string">"name"</span>);</span><br><span class="line">Predicate and = builder.and(</span><br><span class="line">    builder.equal(root.get(<span class="string">"age"</span>), <span class="number">10</span>),</span><br><span class="line">    builder.like(name, <span class="string">"ts%"</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    user0_.id <span class="keyword">AS</span> id1_1_,</span><br><span class="line">    user0_.age <span class="keyword">AS</span> age2_1_,</span><br><span class="line">    user0_.create_date <span class="keyword">AS</span> create_d3_1_,</span><br><span class="line">    user0_. <span class="keyword">NAME</span> <span class="keyword">AS</span> name4_1_,</span><br><span class="line">    user0_. <span class="keyword">STATUS</span> <span class="keyword">AS</span> status5_1_</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    <span class="keyword">USER</span> user0_</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    user0_.age = <span class="number">10</span></span><br><span class="line"><span class="keyword">AND</span> (user0_. <span class="keyword">NAME</span> <span class="keyword">LIKE</span> ?)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-data-jpa 使用笔记</title>
    <url>/posts/43f916ea.html</url>
    <content><![CDATA[<p>主要是记录一些在使用<code>spring-data-jpa</code> + <code>Hibernate</code>过程中遇到的一些问题，和要注意的知识点</p>
<h1 id="Pageable-和-PageRequest-分页"><a href="#Pageable-和-PageRequest-分页" class="headerlink" title="Pageable 和 PageRequest 分页"></a>Pageable 和 PageRequest 分页</h1><p>在Mysql、Oracle中分页从0开始<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Pageable pageable = <span class="keyword">new</span> PageRequest(<span class="number">0</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>查看<code>org.springframework.data.domain.PageRequest</code>源码可知，分页从0开始</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Pageable <span class="title">first</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> PageRequest(<span class="number">0</span>, <span class="keyword">this</span>.getPageSize(), <span class="keyword">this</span>.getSort());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Hibernate</tag>
        <tag>spring-data-jpa</tag>
      </tags>
  </entry>
  <entry>
    <title>hibernate显示sql中的参数值（logback）</title>
    <url>/posts/9eea8fb4.html</url>
    <content><![CDATA[<p>以下是 logback 的日志输出配置，只要是在 logback 的配置文件中添加以下配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- show parameters for hibernate sql 专为 Hibernate 定制 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.type.descriptor.sql.BasicBinder"</span> <span class="attr">level</span>=<span class="string">"TRACE"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>完整的 logback 配置如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.charset"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.path"</span> <span class="attr">value</span>=<span class="string">"$&#123;catalina.home&#125;/logs"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.pattern"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss&#125; %highlight(%-5p)] %yellow(%t) %cyan(%c.%M\\(%L\\)) | %m%n"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.maxHistory"</span> <span class="attr">value</span>=<span class="string">"15"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"dev, local"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"stdout"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- show parameters for hibernate sql 专为 Hibernate 定制 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.type.descriptor.sql.BasicBinder"</span> <span class="attr">level</span>=<span class="string">"TRACE"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="org.hibernate.SQL" level="DEBUG"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="org.hibernate.type" level="INFO"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="org.hibernate.engine.QueryParameters" level="DEBUG"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;logger name="org.apache.ibatis" level="debug"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="java.sql.Connection" level="debug"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="java.sql.Statement" level="debug"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;logger name="java.sql.PreparedStatement" level="debug"/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"stdout"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"prod"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--See http://logback.qos.ch/manual/appenders.html#RollingFileAppender --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--and http://logback.qos.ch/manual/appenders.html#TimeBasedRollingPolicy --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--for further documentation --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"stdout"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logger.path&#125;/info.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                    $&#123;logger.path&#125;/info.log.%d&#123;yyyy.MM.dd&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>$&#123;logger.maxHistory&#125;<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"warn"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logger.path&#125;/warn.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">level</span>&gt;</span>WARN<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                    $&#123;logger.path&#125;/warn.log.%d&#123;yyyy.MM.dd&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>$&#123;logger.maxHistory&#125;<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"error"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logger.path&#125;/error.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                    $&#123;logger.path&#125;/error.log.%d&#123;yyyy.MM.dd&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>$&#123;logger.maxHistory&#125;<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"warn"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"error"</span> <span class="attr">level</span>=<span class="string">"ERROR"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"warn"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"error"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"stdout"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>logback</tag>
        <tag>Hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>hibernate格式化输出sql语句（spring-data-jpa）</title>
    <url>/posts/723691b5.html</url>
    <content><![CDATA[<p>以下配置是基于<code>spring-boot</code>的<code>application.yml</code>配置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line"><span class="comment">#    hibernate:</span></span><br><span class="line"><span class="comment">#      ddl-auto: create</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#    database: mysql</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">hibernate:</span></span><br><span class="line">        <span class="attr">format_sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Hibernate</tag>
        <tag>spring-data-jpa</tag>
      </tags>
  </entry>
  <entry>
    <title>jstack</title>
    <url>/posts/9f2701e8.html</url>
    <content><![CDATA[<h1 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h1><p>导出线程信息到文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ jstack &lt;pid&gt; &gt; pid.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JVM</tag>
        <tag>jstack</tag>
      </tags>
  </entry>
  <entry>
    <title>Netty Epoll 和 Nio</title>
    <url>/posts/a8f7cc4d.html</url>
    <content><![CDATA[<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.bootstrap.ServerBootstrap;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.Channel;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelOption;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.EventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.nio.NioEventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.nio.NioServerSocketChannel;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.ssl.SslContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.ssl.SslContextBuilder;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.ssl.util.SelfSignedCertificate;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.concurrent.DefaultEventExecutorGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.concurrent.EventExecutorGroup;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Netty 启动器，初始化 spring boot 的时候会自动加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(Server<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * NioEventLoopGroup 默认创建数量为 CPU * 2，类型为 NioEventLoop 的实例。</span></span><br><span class="line"><span class="comment">     * 每个 NioEventLoop 实例都持有一个线程，以及一个类型为 LinkedBlockingQueue 的任务队列</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    EventLoopGroup bossGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">    EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">    <span class="comment">// 业务线程</span></span><br><span class="line">    EventExecutorGroup eventExecutorGroup = <span class="keyword">new</span> DefaultEventExecutorGroup(<span class="number">16</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> isSsl = System.getProperty(<span class="string">"ssl"</span>) != <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化 Netty</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startNetty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> SslContext sslCtx;</span><br><span class="line">            <span class="keyword">if</span> (isSsl) &#123;</span><br><span class="line">                SelfSignedCertificate ssc = <span class="keyword">new</span> SelfSignedCertificate();</span><br><span class="line">                sslCtx = SslContextBuilder.forServer(ssc.certificate(), ssc.privateKey()).build();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sslCtx = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 引导辅助程序</span></span><br><span class="line">            ServerBootstrap bs = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">            <span class="comment">// 通过NIO方式来接收连接和处理连接</span></span><br><span class="line">            bs.group(bossGroup, workerGroup);</span><br><span class="line">            <span class="comment">// 设置NIO的Channel</span></span><br><span class="line">            bs.channel(NioServerSocketChannel<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            bs.childHandler(<span class="keyword">new</span> HttpChannelInitializer(sslCtx, eventExecutorGroup));</span><br><span class="line"></span><br><span class="line">            bs.option(ChannelOption.SO_BACKLOG, <span class="number">1024</span>); <span class="comment">// 连接数</span></span><br><span class="line">            <span class="comment">// bs.childOption(ChannelOption.SO_KEEPALIVE, true); // 是否长链接</span></span><br><span class="line">            bs.childOption(ChannelOption.TCP_NODELAY, <span class="keyword">true</span>); <span class="comment">// 是否TCP延迟</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 配置完成，开始绑定server，通过调用sync同步方法阻塞直到绑定成功</span></span><br><span class="line">            Channel ch = bs.bind(<span class="number">9999</span>).sync().channel();</span><br><span class="line">            LOG.info(<span class="string">"Server startup. listen on &#123;&#125;-&#123;&#125;"</span>, (isSsl ? <span class="string">"https"</span> : <span class="string">"http"</span>), <span class="number">9999</span>);</span><br><span class="line">            <span class="comment">// 应用程序会一直等待，直到Channel关闭</span></span><br><span class="line">            ch.closeFuture().sync();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOG.error(<span class="string">"server startup failed. &#123;&#125;"</span>, e.getMessage(), e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            LOG.info(<span class="string">"释放资源..."</span>);</span><br><span class="line">            bossGroup.shutdownGracefully();</span><br><span class="line">            workerGroup.shutdownGracefully();</span><br><span class="line">            eventExecutorGroup.shutdownGracefully();</span><br><span class="line">            bossGroup = <span class="keyword">null</span>;</span><br><span class="line">            workerGroup = <span class="keyword">null</span>;</span><br><span class="line">            eventExecutorGroup = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Server().startNetty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="优化：Epoll-和-Nio"><a href="#优化：Epoll-和-Nio" class="headerlink" title="优化：Epoll 和 Nio"></a>优化：Epoll 和 Nio</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> isEpoll = Epoll.isAvailable();</span><br><span class="line"><span class="keyword">private</span> EventLoopGroup bossGroup = isEpoll ? <span class="keyword">new</span> EpollEventLoopGroup() : <span class="keyword">new</span> 					NioEventLoopGroup();</span><br><span class="line"><span class="keyword">private</span> EventLoopGroup workerGroup = isEpoll ? <span class="keyword">new</span> EpollEventLoopGroup() : <span class="keyword">new</span> 				NioEventLoopGroup();</span><br><span class="line">ServerBootstrap bootstrap = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">bootstrap.group(bossGroup, workerGroup)</span><br><span class="line">         .channel(isEpoll ? EpollServerSocketChannel.class : NioServerSocketChannel.class);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Netty</tag>
      </tags>
  </entry>
  <entry>
    <title>POI 操作 Excel 工具</title>
    <url>/posts/83d23cd9.html</url>
    <content><![CDATA[<p>poi 3.8 及以上版本使用 SXSSFWorkbook 性能会更高点，内存占用会更少</p>
<ul>
<li>HSSF：是操作 Excel97-2003 版本，扩展名为.xls。</li>
<li>XSSF：是操作 Excel2007 版本开始，扩展名为.xlsx。</li>
<li>SXSSF：是在 XSSF 基础上，POI3.8 版本开始提供的一种支持低内存占用的操作方式，扩展名为.xlsx。</li>
</ul>
<ul>
<li>SXSSFWorkbook 需要指定的字体库支持。</li>
</ul>
<a id="more"></a>
<blockquote>
<p>ExcelUtils.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Cell;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.CellType;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.DateUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Row;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.streaming.SXSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * poi 3.8 及以上版本使用 SXSSFWorkbook 性能会更高点，内存占用会更少</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     HSSF：是操作 Excel97-2003 版本，扩展名为.xls。</span></span><br><span class="line"><span class="comment"> *     XSSF：是操作 Excel2007 版本开始，扩展名为.xlsx。</span></span><br><span class="line"><span class="comment"> *     SXSSF：是在 XSSF 基础上，POI3.8 版本开始提供的一种支持低内存占用的操作方式，扩展名为.xlsx。</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XLS = <span class="string">".xls"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XLSX = <span class="string">".xlsx"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取 excel 文件，使用SXSSFWorkbook</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file           MultipartFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowIgnoreCount 略过空行和前 &lt;code&gt;rowIgnoreCount&lt;/code&gt; 行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Map&lt;String, String&gt;&gt; read(MultipartFile file, <span class="keyword">int</span> rowIgnoreCount) &#123;</span><br><span class="line">        InputStream is = <span class="keyword">null</span>;</span><br><span class="line">        Workbook wb = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            is = file.getInputStream();</span><br><span class="line">            <span class="keyword">if</span> (file.getOriginalFilename().toLowerCase().endsWith(XLS)) &#123;</span><br><span class="line">                wb = <span class="keyword">new</span> HSSFWorkbook(is);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (file.getOriginalFilename().toLowerCase().endsWith(XLSX)) &#123;</span><br><span class="line">                <span class="comment">// wb = new XSSFWorkbook(is);</span></span><br><span class="line">                <span class="comment">// 压缩临时文件</span></span><br><span class="line">                wb = <span class="keyword">new</span> SXSSFWorkbook(<span class="keyword">new</span> XSSFWorkbook(is), <span class="number">100</span>, <span class="keyword">true</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"不支持该 Excel 类型"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (wb <span class="keyword">instanceof</span> HSSFWorkbook) &#123;</span><br><span class="line">                <span class="keyword">return</span> ExcelUtils.read(wb, rowIgnoreCount);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 如果使用 SXSSFWorkbook，需要 getXSSFWorkbook，不然会读取为空</span></span><br><span class="line">                <span class="keyword">return</span> ExcelUtils.read(((SXSSFWorkbook) wb).getXSSFWorkbook(), rowIgnoreCount);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// return ExcelUtils.read(wb, rowIgnoreCount);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"文件处理异常["</span> + e.getMessage() + <span class="string">"]"</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (wb != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (wb <span class="keyword">instanceof</span> SXSSFWorkbook) &#123;</span><br><span class="line">                    <span class="comment">// 删除临时文件，否则磁盘可能会被写满</span></span><br><span class="line">                    ((SXSSFWorkbook) wb).dispose();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            IOUtils.closeQuietly(is);</span><br><span class="line">            IOUtils.closeQuietly(wb);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取 excel 文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> wb             Workbook</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowIgnoreCount 略过空行和前 &lt;code&gt;rowIgnoreCount&lt;/code&gt; 行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Map&lt;String, String&gt;&gt; read(Workbook wb, <span class="keyword">int</span> rowIgnoreCount) &#123;</span><br><span class="line">        List&lt;Map&lt;String, String&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> sheetSize = wb.getNumberOfSheets();</span><br><span class="line">        <span class="comment">// 遍历 sheet 页</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sheetSize; i++) &#123;</span><br><span class="line">            Sheet sheet = wb.getSheetAt(i);</span><br><span class="line">            <span class="keyword">int</span> rowSize = sheet.getLastRowNum() + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 遍历行</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; rowSize; j++) &#123;</span><br><span class="line">                Row row = sheet.getRow(j);</span><br><span class="line">                <span class="comment">// 略过空行和前 rowIgnoreCount 行</span></span><br><span class="line">                <span class="keyword">if</span> (row == <span class="keyword">null</span> || j &lt; rowIgnoreCount) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">short</span> lastCellNum = row.getLastCellNum();</span><br><span class="line">                <span class="keyword">if</span> (lastCellNum &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"列数超过 50"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">boolean</span> isAllBlank = <span class="keyword">true</span>;</span><br><span class="line">                Map&lt;String, String&gt; cell = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> cellNum = <span class="number">0</span>; cellNum &lt; lastCellNum; cellNum++) &#123;</span><br><span class="line">                    String value = ExcelUtils.getValue(row, cellNum);</span><br><span class="line">                    cell.put(String.valueOf(cellNum), value);</span><br><span class="line">                    <span class="keyword">if</span> (StringUtils.isNotBlank(value)) &#123;</span><br><span class="line">                        isAllBlank = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 如果该行单元格全部为空，则过滤掉该行数据</span></span><br><span class="line">                <span class="keyword">if</span> (isAllBlank) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                list.add(cell);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据数据格式返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getValue</span><span class="params">(Row row, <span class="keyword">int</span> cellNum)</span> </span>&#123;</span><br><span class="line">        Cell cell = row.getCell(cellNum);</span><br><span class="line">        <span class="keyword">if</span> (cell == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            CellType cellType = cell.getCellType();</span><br><span class="line">            <span class="keyword">if</span> (cellType == CellType.BOOLEAN) &#123;</span><br><span class="line">                <span class="keyword">return</span> String.valueOf(cell.getBooleanCellValue());</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cellType == CellType.NUMERIC) &#123;</span><br><span class="line">                <span class="keyword">if</span> (DateUtil.isCellDateFormatted(cell)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> cell.getLocalDateTimeCellValue().format(DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd"</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// if ("General".equals(cell.getCellStyle().getDataFormatString())) &#123;</span></span><br><span class="line">                <span class="comment">//     return new DecimalFormat("0").format(cell.getNumericCellValue());</span></span><br><span class="line">                <span class="comment">// &#125; else if ("m/d/yy".equals(cell.getCellStyle().getDataFormatString())) &#123;</span></span><br><span class="line">                <span class="comment">//     return new SimpleDateFormat("yyyy-MM-dd").format(cell.getDateCellValue());</span></span><br><span class="line">                <span class="comment">// &#125; else &#123;</span></span><br><span class="line">                <span class="comment">//     return new DecimalFormat("0").format(cell.getNumericCellValue());</span></span><br><span class="line">                <span class="comment">// &#125;</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"m/d/yy"</span>.equals(cell.getCellStyle().getDataFormatString())) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>).format(cell.getDateCellValue());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">double</span> value = cell.getNumericCellValue();</span><br><span class="line">                    String strValue = String.valueOf(value);</span><br><span class="line">                    String[] split = strValue.split(<span class="string">"\\."</span>, -<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> (split.length &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">                        String s = split[split.length - <span class="number">1</span>];</span><br><span class="line">                        <span class="comment">// 最后一位为 0 时</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">"0"</span>.equals(s)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">new</span> DecimalFormat(<span class="string">"0"</span>).format(value);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> strValue;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cellType == CellType.FORMULA) &#123;</span><br><span class="line">                <span class="keyword">return</span> cell.getCellFormula();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cellType == CellType.BLANK) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> cell.getStringCellValue().trim();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>POI</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用RSA注意事项</title>
    <url>/posts/ef742936.html</url>
    <content><![CDATA[<h1 id="比较以下两种写法"><a href="#比较以下两种写法" class="headerlink" title="比较以下两种写法"></a>比较以下两种写法</h1><blockquote>
<p>第一种：这种写法会造成内存溢出</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cipher cipher = Cipher.getInstance(<span class="string">"RSA"</span>, <span class="keyword">new</span> BouncyCastleProvider());</span><br></pre></td></tr></table></figure>
<blockquote>
<p>第二种：推荐这种写法</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// BC 可用 BouncyCastleProvider.PROVIDER_NAME 代替</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.isNullOrEmpty(Security.getProperty(<span class="string">"BC"</span>))) &#123;</span><br><span class="line">    Security.addProvider(<span class="keyword">new</span> BouncyCastleProvider());</span><br><span class="line">&#125;</span><br><span class="line">Cipher cipher = Cipher.getInstance(<span class="string">"RSA"</span>, <span class="string">"BC"</span>);</span><br></pre></td></tr></table></figure>
<p>还有一种写法是要替换jdk的jar包，不推荐</p>
<a id="more"></a>
<h1 id="要依赖bcprov-jdk16包"><a href="#要依赖bcprov-jdk16包" class="headerlink" title="要依赖bcprov-jdk16包"></a>要依赖bcprov-jdk16包</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcprov-jdk16<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">22-04-26 16:43:32 INFO main c.t.c.u.e.RsaUtils.generateKeyPair(98)  | init RSA KeyPair：</span><br><span class="line">22-04-26 16:43:32 INFO main c.t.c.u.e.RsaUtils.generateKeyPair(99)  | RSA Private CRT Key</span><br><span class="line">            modulus: bfb189b6d4b94b806a5da8e47f2b0573489506e34795fdc083954cbbfb56032d1792db38d25d9c54cc25b6e2fe09cf28b9dfcce5279e73c1ee8b7a0877226da18e136edaf49c2063fb5ff8bcd0bc4eb14ddf733f7956455b9923a38c4e12f3184a65f4896ecfd60dc3b47de320339bb770569fd9818672db2f4703b657bca2ed</span><br><span class="line">    public exponent: 10001</span><br><span class="line">   private exponent: 179103063826c392790124b75aaef64f92f7c74dffc9ffd5401805c402853384c2a62a4f55056f27b9a5555398b9a9ff2ec2c5d4d24717a21aea88c92ba44ee7dc00e6233562bbbc4e1033ad3154a2517028261b8fe7c765ce221e2eb7124ae836640f8b4639b681286260fcc32165eb74733b8cf4651a4a1182e8d6537b6461</span><br><span class="line">             primeP: f0a25d1a81062d7bdd2da210a5fbfabc60f5c54095d5671779721ec699667625d83f4b7b8603f5f76c6bdf590c471716197c74309a141c1b602c46f540fdbcf9</span><br><span class="line">             primeQ: cbef247ea9db5ecf05eff0a28a13df37db7b72d7a5da0c10aa5b1dbc5b32f46658b933cc8ef0e67233b6421afe583280075d54fdc5ec7473bfd270f779a25695</span><br><span class="line">     primeExponentP: 5e20e5128d0e0194c63c277d23b0a1b036ad6cef8aace39ac722e0ef06ea91a4d4264e3c8f7bd52767fdfa6c36e5481e98f199f1b913ccbad8aff941ce9e72e1</span><br><span class="line">     primeExponentQ: 77345e3cbbc4c2f27821fca2c5db3fcb42bc3230e37d4538289c0211abad6936b9fde7cd56707203a73e8dfd8156c48e19bff082364334fec3cd9ac2cd929ad1</span><br><span class="line">     crtCoefficient: 5aa5922865687474de624dc51af3ca86aea3e98e3d784b2317b163233148928aa0c7674bf7f1cccaaf3cfe7778f52bd7b9e262ead7a7cf60f137d2214584a93d</span><br><span class="line"></span><br><span class="line">22-04-26 16:43:32 INFO main c.t.c.u.e.RsaUtils.generateKeyPair(100)  | RSA Public Key</span><br><span class="line">            modulus: bfb189b6d4b94b806a5da8e47f2b0573489506e34795fdc083954cbbfb56032d1792db38d25d9c54cc25b6e2fe09cf28b9dfcce5279e73c1ee8b7a0877226da18e136edaf49c2063fb5ff8bcd0bc4eb14ddf733f7956455b9923a38c4e12f3184a65f4896ecfd60dc3b47de320339bb770569fd9818672db2f4703b657bca2ed</span><br><span class="line">    public exponent: 10001</span><br><span class="line"></span><br><span class="line"># 参数说明</span><br><span class="line">modulus =&gt; n</span><br><span class="line">public exponent =&gt; e</span><br><span class="line">private exponent =&gt; d</span><br><span class="line">prime1 =&gt; p</span><br><span class="line">prime2 =&gt; q</span><br><span class="line">exponent1 =&gt; dmp1</span><br><span class="line">exponent2 =&gt; dmq1</span><br><span class="line">coefficient =&gt; coeff</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>Java、JS版RSA加密算法工具类</title>
    <url>/posts/5314af17.html</url>
    <content><![CDATA[<p>[TOC]<br>    本文主要是实现<code>RSA</code>算法的<code>Java</code>版本和<code>Javascript</code>版本，并提供测试例子。<br>    1、RSA算法可以用于数据加密和数字签名<br>    2、RSA算法相对于DES/AES等对称加密算法，他的速度要慢的多<br>    3、使用原则：公钥加密，私钥解密；私钥加密，公钥解密</p>
<a id="more"></a>
<h2 id="Java-版-RSA-工具类"><a href="#Java-版-RSA-工具类" class="headerlink" title="Java 版 RSA 工具类"></a>Java 版 RSA 工具类</h2><p>要引入的 jar 包<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jdk1.5 ~ jdk1.8 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcprov-jdk15on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.ylonline.common.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.jce.provider.BouncyCastleProvider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.ShortBufferException;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyFactory;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyPair;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyPairGenerator;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchProviderException;</span><br><span class="line"><span class="keyword">import</span> java.security.Provider;</span><br><span class="line"><span class="keyword">import</span> java.security.SecureRandom;</span><br><span class="line"><span class="keyword">import</span> java.security.Security;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPrivateKey;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPublicKey;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidKeySpecException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.RSAPrivateKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.RSAPublicKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RSA 加解密算法工具</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     依赖第三方jar包：bcprov-jdk16-1.46.jar 或者 bcprov-jdk15on-1.46.jar</span></span><br><span class="line"><span class="comment"> *     记录：</span></span><br><span class="line"><span class="comment"> *     1、Java Sun 的 security provider 默认：RSA/None/PKCS1Padding</span></span><br><span class="line"><span class="comment"> *     2、Android 的 security provider 是 Bouncycastle Security provider，默认：RSA/None/NoPadding</span></span><br><span class="line"><span class="comment"> *     3、Cipher.getInstance("RSA/ECB/NoPadding")，有一个缺点就是解密后的明文比加密之前多了很多空格</span></span><br><span class="line"><span class="comment"> *     推荐：</span></span><br><span class="line"><span class="comment"> *     Cipher.getInstance("RSA"，"BC")</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     一般用法：</span></span><br><span class="line"><span class="comment"> *     1、私钥加密，公钥解密（服务端加密，客户端解密）</span></span><br><span class="line"><span class="comment"> *     2、公钥加密，私钥解密（客户端加密，服务端解密）</span></span><br><span class="line"><span class="comment"> *     注意：私钥不要泄漏出去，客户端一般使用公钥</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/2/9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RSAUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">// /**</span></span><br><span class="line">    <span class="comment">//  * RSA 最大加密明文大小</span></span><br><span class="line">    <span class="comment">//  */</span></span><br><span class="line">    <span class="comment">// private static final int MAX_ENCRYPT_BLOCK = 117;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// /**</span></span><br><span class="line">    <span class="comment">//  * RSA 最大解密密文大小</span></span><br><span class="line">    <span class="comment">//  */</span></span><br><span class="line">    <span class="comment">// private static final int MAX_DECRYPT_BLOCK = 128;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHARSET = <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密算法 RSA</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ALGORITHM = <span class="string">"RSA"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这个值关系到块加密的大小，可以更改，但是不要太大，否则效率会低</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> KEY_SIZE = <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// private static byte[] hexStringToBytes(String hexString) &#123;</span></span><br><span class="line">    <span class="comment">//     if (hexString == null || hexString.equals("")) &#123;</span></span><br><span class="line">    <span class="comment">//         return null;</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     hexString = hexString.toUpperCase();</span></span><br><span class="line">    <span class="comment">//     int length = hexString.length() / 2;</span></span><br><span class="line">    <span class="comment">//     char[] hexChars = hexString.toCharArray();</span></span><br><span class="line">    <span class="comment">//     byte[] d = new byte[length];</span></span><br><span class="line">    <span class="comment">//     for (int i = 0; i &lt; length; i++) &#123;</span></span><br><span class="line">    <span class="comment">//         int pos = i * 2;</span></span><br><span class="line">    <span class="comment">//         d[i] = (byte) (charToByte(hexChars[pos]) &lt;&lt; 4 | charToByte(hexChars[pos + 1]));</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     return d;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// /**</span></span><br><span class="line">    <span class="comment">//  * Convert char to byte * @param c char * @return byte</span></span><br><span class="line">    <span class="comment">//  */</span></span><br><span class="line">    <span class="comment">// private static byte charToByte(char c) &#123;</span></span><br><span class="line">    <span class="comment">//     return (byte) "0123456789ABCDEF".indexOf(c);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把 byte 数组变换为16进制的字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes byte 数组</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 16进制的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">byteToString</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">byte</span> by : bytes) &#123;</span><br><span class="line">            <span class="keyword">int</span> d = by;</span><br><span class="line">            <span class="keyword">if</span> (d &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                d += <span class="number">256</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (d &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                sb.append(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(Integer.toString(d, <span class="number">16</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的安全服务提供者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Provider BC_PROVIDER = <span class="keyword">new</span> BouncyCastleProvider();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BC = BouncyCastleProvider.PROVIDER_NAME;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String bc = Security.getProperty(BC);</span><br><span class="line">        <span class="keyword">if</span> (bc == <span class="keyword">null</span> || <span class="string">""</span>.equals(bc.trim())) &#123;</span><br><span class="line">            Security.addProvider(BC_PROVIDER);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化 RSA，生成密钥对：KeyPair</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     生成密钥对是非常耗时的，一般要 2s 左右，所以最好缓存密钥对起来，定期去做更新，不用每次都初始化</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> KeyPair <span class="title">generateKeyPair</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addProvider();</span><br><span class="line">            KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(ALGORITHM, BC);</span><br><span class="line">            <span class="comment">// keysize 这个值关系到块加密的大小，可以更改，但是不要太大，否则效率会低</span></span><br><span class="line">            keyPairGen.initialize(KEY_SIZE, <span class="keyword">new</span> SecureRandom());</span><br><span class="line">            KeyPair keyPair = keyPairGen.generateKeyPair();</span><br><span class="line">            System.out.println(<span class="string">"init："</span>);</span><br><span class="line">            System.out.println(keyPair.getPrivate());</span><br><span class="line">            System.out.println(keyPair.getPublic());</span><br><span class="line">            <span class="keyword">return</span> keyPair;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"RSA 初始化失败。无此算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"RSA 初始化失败。无此安全服务提供者"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用模（n）、公钥指数（e），还原公钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modulus        模（n）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicExponent 公钥指数（e）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> RSAPublicKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RSAPublicKey <span class="title">generatePublicKey</span><span class="params">(String modulus, String publicExponent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addProvider();</span><br><span class="line">            KeyFactory keyFac = KeyFactory.getInstance(ALGORITHM, BC);</span><br><span class="line">            BigInteger bi1 = <span class="keyword">new</span> BigInteger(modulus, <span class="number">16</span>);</span><br><span class="line">            BigInteger bi2 = <span class="keyword">new</span> BigInteger(publicExponent, <span class="number">16</span>);</span><br><span class="line">            RSAPublicKeySpec pubKeySpec = <span class="keyword">new</span> RSAPublicKeySpec(bi1, bi2);</span><br><span class="line">            <span class="keyword">return</span> (RSAPublicKey) keyFac.generatePublic(pubKeySpec);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeySpecException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无效的密钥"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此安全服务提供者"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * * 使用模（n）、私钥指数（d），还原私钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modulus         模（n）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateExponent 私钥指数（d）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> RSAPrivateKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RSAPrivateKey <span class="title">generatePrivateKey</span><span class="params">(String modulus, String privateExponent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addProvider();</span><br><span class="line">            KeyFactory keyFac = KeyFactory.getInstance(ALGORITHM, BC);</span><br><span class="line">            BigInteger bi1 = <span class="keyword">new</span> BigInteger(modulus, <span class="number">16</span>);</span><br><span class="line">            BigInteger bi2 = <span class="keyword">new</span> BigInteger(privateExponent, <span class="number">16</span>);</span><br><span class="line">            RSAPrivateKeySpec priKeySpec = <span class="keyword">new</span> RSAPrivateKeySpec(bi1, bi2);</span><br><span class="line">            <span class="keyword">return</span> (RSAPrivateKey) keyFac.generatePrivate(priKeySpec);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeySpecException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无效的密钥"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此安全服务提供者"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回模值n</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getModulus</span><span class="params">(RSAPublicKey publicKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> publicKey.getModulus().toString(<span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回模值n</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getModulus</span><span class="params">(RSAPrivateKey privateKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> privateKey.getModulus().toString(<span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回公钥指数e</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPublicExponent</span><span class="params">(RSAPublicKey publicKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> publicKey.getPublicExponent().toString(<span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回私钥指数d</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPrivateExponent</span><span class="params">(RSAPrivateKey privateKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> privateKey.getPrivateExponent().toString(<span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  密钥（公钥、私钥）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 要被加密的明文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 加密后的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] encrypt(Key key, <span class="keyword">byte</span>[] data) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addProvider();</span><br><span class="line">            Cipher cipher = Cipher.getInstance(ALGORITHM, BC);</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE, key);</span><br><span class="line">            <span class="comment">// 127</span></span><br><span class="line">            <span class="keyword">int</span> blockSize = cipher.getBlockSize();<span class="comment">// 获得加密块大小，如：加密前数据为128个byte，而key_size=1024</span></span><br><span class="line">            <span class="comment">// 加密块大小为127</span></span><br><span class="line">            <span class="comment">// byte,加密后为128个byte;因此共有2个加密块，第一个127</span></span><br><span class="line">            <span class="comment">// byte第二个为1个byte</span></span><br><span class="line">            <span class="keyword">int</span> length = data.length;</span><br><span class="line">            <span class="keyword">int</span> outputSize = cipher.getOutputSize(length);<span class="comment">// 获得加密块加密后块大小</span></span><br><span class="line">            <span class="keyword">int</span> leavedSize = length % blockSize;</span><br><span class="line">            <span class="keyword">int</span> blocksSize = leavedSize != <span class="number">0</span> ? length / blockSize + <span class="number">1</span> : length / blockSize;</span><br><span class="line">            <span class="keyword">byte</span>[] raw = <span class="keyword">new</span> <span class="keyword">byte</span>[outputSize * blocksSize];</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (length - i * blockSize &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * 这里面doUpdate方法不可用，查看源代码后发现每次doUpdate后并没有什么实际动作除了把byte[]放到</span></span><br><span class="line"><span class="comment">                 * ByteArrayOutputStream中，而最后doFinal的时候才将所有的byte[]进行加密，可是到了此时加密块大小很可能已经超出了</span></span><br><span class="line"><span class="comment">                 * OutputSize所以只好用dofinal方法。</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">if</span> (length - i * blockSize &gt; blockSize) &#123;</span><br><span class="line">                    cipher.doFinal(data, i * blockSize, blockSize, raw, i * outputSize);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    cipher.doFinal(data, i * blockSize, length - i * blockSize, raw, i * outputSize);</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> raw;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无效的密钥"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ShortBufferException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"缓冲区异常"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此填充方式"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"错误的填充"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此安全服务提供者"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"非法的块大小"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  密钥（公钥、私钥）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 要被解密的密文</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 解密后的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decrypt(Key key, <span class="keyword">byte</span>[] data) &#123;</span><br><span class="line">        ByteArrayOutputStream bout = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addProvider();</span><br><span class="line">            Cipher cipher = Cipher.getInstance(ALGORITHM, BC);</span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, key);</span><br><span class="line">            <span class="comment">// 128</span></span><br><span class="line">            <span class="keyword">int</span> blockSize = cipher.getBlockSize();</span><br><span class="line">            bout = <span class="keyword">new</span> ByteArrayOutputStream(<span class="number">64</span>);</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> length = data.length;</span><br><span class="line">            <span class="keyword">while</span> (length - i * blockSize &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                bout.write(cipher.doFinal(data, i * blockSize, blockSize));</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> bout.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"错误的填充"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"IO操作异常"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此算法"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无效的密钥"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此填充方式"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchProviderException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此安全服务提供者"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"非法的块大小"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (bout != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    bout.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(Key pk, String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            data = URLEncoder.encode(data, CHARSET);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 处理空格问题：URLEncoder.encode 后，会把空格变成“+”号</span></span><br><span class="line">        <span class="keyword">if</span> (data.contains(<span class="string">"+"</span>)) &#123;</span><br><span class="line">            data = data.replace(<span class="string">"+"</span>, <span class="string">"%20"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] b1;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            b1 = data.getBytes(CHARSET);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(String.format(<span class="string">"不支持的编码格式：%s"</span>, CHARSET), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] b2 = encrypt(pk, b1);</span><br><span class="line">        <span class="keyword">return</span> byteToString(b2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(Key pk, String data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// byte[] b1 = hexStringToBytes(data);</span></span><br><span class="line">        <span class="keyword">byte</span>[] b1 = org.bouncycastle.util.encoders.Hex.decode(data);</span><br><span class="line">        <span class="comment">// 使用 new BigInteger(data, 16).toByteArray() 解密 js 加密的密文有问题，但是解密 java 端的密文确正常</span></span><br><span class="line">        <span class="comment">// byte[] b1 = new BigInteger(data, 16).toByteArray();</span></span><br><span class="line">        <span class="keyword">byte</span>[] b2 = decrypt(pk, b1);</span><br><span class="line">        String str = <span class="keyword">new</span> String(b2);</span><br><span class="line">        <span class="comment">// str = new StringBuffer(str).reverse().toString();</span></span><br><span class="line">        <span class="keyword">if</span> (str.contains(<span class="string">"%"</span>)) &#123;</span><br><span class="line">            str = str.replaceAll(<span class="string">"%(?![0-9a-fA-F]&#123;2&#125;)"</span>, <span class="string">"%25"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> URLDecoder.decode(str, <span class="string">"UTF-8"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(String.format(<span class="string">"不支持的编码格式：%s"</span>, CHARSET), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用公钥加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pk  公钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要加密的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPublic</span><span class="params">(RSAPublicKey pk, String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> encrypt(pk, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用公钥加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modulus        模</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicExponent 公钥指数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str            要加密的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPublic</span><span class="params">(String modulus, String publicExponent, String str)</span> </span>&#123;</span><br><span class="line">        RSAPublicKey publicKey = generatePublicKey(modulus, publicExponent);</span><br><span class="line">        <span class="keyword">return</span> encrypt(publicKey, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用公钥解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pk  公钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要解密的密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptPublic</span><span class="params">(RSAPublicKey pk, String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> decrypt(pk, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用公钥解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modulus        模</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicExponent 公钥指数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str            要解密的密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptPublic</span><span class="params">(String modulus, String publicExponent, String str)</span> </span>&#123;</span><br><span class="line">        RSAPublicKey publicKey = generatePublicKey(modulus, publicExponent);</span><br><span class="line">        <span class="keyword">return</span> decrypt(publicKey, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用私钥加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pk  私钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要加密的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPrivate</span><span class="params">(RSAPrivateKey pk, String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> encrypt(pk, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用私钥加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modulus         模</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateExponent 私钥指数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str             要加密的明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptPrivate</span><span class="params">(String modulus, String privateExponent, String str)</span> </span>&#123;</span><br><span class="line">        RSAPrivateKey privateKey = generatePrivateKey(modulus, privateExponent);</span><br><span class="line">        <span class="keyword">return</span> encrypt(privateKey, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用私钥解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pk  私钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str 要解密的密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptPrivate</span><span class="params">(RSAPrivateKey pk, String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> decrypt(pk, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用私钥解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modulus         模</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateExponent 私钥指数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str             要解密的密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptPrivate</span><span class="params">(String modulus, String privateExponent, String str)</span> </span>&#123;</span><br><span class="line">        RSAPrivateKey privateKey = generatePrivateKey(modulus, privateExponent);</span><br><span class="line">        <span class="keyword">return</span> decrypt(privateKey, str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Java-版-RSA-工具类测试"><a href="#Java-版-RSA-工具类测试" class="headerlink" title="Java 版 RSA 工具类测试"></a>Java 版 RSA 工具类测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.ylonline.common.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.KeyPair;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPrivateKey;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPublicKey;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/2/11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RSAUtilsTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> RSAPublicKey publicKey;</span><br><span class="line">    <span class="keyword">private</span> RSAPrivateKey privateKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RSAPublicKey generatePublicKey;</span><br><span class="line">    <span class="keyword">private</span> RSAPrivateKey generatePrivateKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String str = <span class="string">"test_三地警方随即_1222——《》？“”："</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        KeyPair keyPair = RSAUtils.generateKeyPair();</span><br><span class="line">        publicKey = (RSAPublicKey) keyPair.getPublic();</span><br><span class="line">        privateKey = (RSAPrivateKey) keyPair.getPrivate();</span><br><span class="line"></span><br><span class="line">        String modulus = RSAUtils.getModulus(publicKey);</span><br><span class="line">        String publicExponent = RSAUtils.getPublicExponent(publicKey);</span><br><span class="line">        String privateExponent = RSAUtils.getPrivateExponent(privateKey);</span><br><span class="line">        System.out.println(<span class="string">"n ---&gt; "</span> + modulus);</span><br><span class="line">        System.out.println(<span class="string">"e ---&gt; "</span> + publicExponent);</span><br><span class="line">        System.out.println(<span class="string">"d ---&gt; "</span> + privateExponent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 恢复密钥</span></span><br><span class="line">        <span class="keyword">long</span> time = System.currentTimeMillis();</span><br><span class="line">        generatePublicKey = RSAUtils.generatePublicKey(modulus, publicExponent);</span><br><span class="line">        System.out.println(<span class="string">"恢复公钥 ---&gt; "</span> + (System.currentTimeMillis() - time));</span><br><span class="line">        time = System.currentTimeMillis();</span><br><span class="line">        generatePrivateKey = RSAUtils.generatePrivateKey(modulus, privateExponent);</span><br><span class="line">        System.out.println(<span class="string">"恢复私钥 ---&gt; "</span> + (System.currentTimeMillis() - time));</span><br><span class="line"></span><br><span class="line">        modulus = RSAUtils.getModulus(generatePublicKey);</span><br><span class="line">        publicExponent = RSAUtils.getPublicExponent(generatePublicKey);</span><br><span class="line">        privateExponent = RSAUtils.getPrivateExponent(generatePrivateKey);</span><br><span class="line">        System.out.println(<span class="string">"n ---&gt; "</span> + modulus);</span><br><span class="line">        System.out.println(<span class="string">"e ---&gt; "</span> + publicExponent);</span><br><span class="line">        System.out.println(<span class="string">"d ---&gt; "</span> + privateExponent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">all</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String modulus = RSAUtils.getModulus(publicKey);</span><br><span class="line">        String publicExponent = RSAUtils.getPublicExponent(publicKey);</span><br><span class="line">        String privateExponent = RSAUtils.getPrivateExponent(privateKey);</span><br><span class="line">        System.out.println(<span class="string">"modulus ---&gt; "</span> + modulus);</span><br><span class="line">        System.out.println(<span class="string">"publicExponent ---&gt; "</span> + publicExponent);</span><br><span class="line">        System.out.println(<span class="string">"privateExponent ---&gt; "</span> + privateExponent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 私钥加密，公钥解密</span></span><br><span class="line">        System.out.println(<span class="string">"-----------------------------------私钥加密，公钥解密-----------------------------------"</span>);</span><br><span class="line">        String s = RSAUtils.encryptPrivate(privateKey, str);</span><br><span class="line">        System.out.println(<span class="string">"RSA私匙加密："</span> + s);</span><br><span class="line">        String s1 = RSAUtils.decryptPublic(publicKey, s);</span><br><span class="line">        System.out.println(<span class="string">"RSA公匙解密："</span> + s1);</span><br><span class="line">        Assert.assertEquals(str, s1);</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------------------------------------------"</span>);</span><br><span class="line">        String ss = RSAUtils.encryptPrivate(modulus, privateExponent, str);</span><br><span class="line">        System.out.println(<span class="string">"RSA私匙加密："</span> + ss);</span><br><span class="line">        String ss1 = RSAUtils.decryptPublic(modulus, publicExponent, ss);</span><br><span class="line">        System.out.println(<span class="string">"RSA公匙解密："</span> + ss1);</span><br><span class="line">        Assert.assertEquals(str, ss1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 公钥加密，私钥解密</span></span><br><span class="line">        System.out.println(<span class="string">"-----------------------------------私钥加密，私钥解密-----------------------------------"</span>);</span><br><span class="line">        String s2 = RSAUtils.encryptPublic(publicKey, str);</span><br><span class="line">        System.out.println(<span class="string">"RSA公钥加密："</span> + s2);</span><br><span class="line">        String s3 = RSAUtils.decryptPrivate(privateKey, s2);</span><br><span class="line">        System.out.println(<span class="string">"RSA私钥解密："</span> + s3);</span><br><span class="line">        Assert.assertEquals(str, s3);</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------------------------------------------"</span>);</span><br><span class="line">        String ss2 = RSAUtils.encryptPublic(modulus, publicExponent, str);</span><br><span class="line">        System.out.println(<span class="string">"RSA公钥加密："</span> + ss2);</span><br><span class="line">        String ss3 = RSAUtils.decryptPrivate(modulus, privateExponent, ss2);</span><br><span class="line">        System.out.println(<span class="string">"RSA私钥解密："</span> + ss3);</span><br><span class="line">        Assert.assertEquals(str, ss3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getModulus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String modulus = RSAUtils.getModulus(publicKey);</span><br><span class="line">        String modulus1 = RSAUtils.getModulus(generatePublicKey);</span><br><span class="line">        Assert.assertEquals(modulus, modulus1);</span><br><span class="line"></span><br><span class="line">        String modulus2 = RSAUtils.getModulus(privateKey);</span><br><span class="line">        String modulus3 = RSAUtils.getModulus(generatePrivateKey);</span><br><span class="line">        Assert.assertEquals(modulus2, modulus3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPublicExponent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String publicExponent = RSAUtils.getPublicExponent(publicKey);</span><br><span class="line">        String publicExponent1 = RSAUtils.getPublicExponent(generatePublicKey);</span><br><span class="line">        Assert.assertEquals(publicExponent, publicExponent1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPrivateExponent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String privateExponent = RSAUtils.getPrivateExponent(privateKey);</span><br><span class="line">        String privateExponent1 = RSAUtils.getPrivateExponent(generatePrivateKey);</span><br><span class="line">        Assert.assertEquals(privateExponent, privateExponent1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">encryptPublic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = RSAUtils.encryptPublic(publicKey, str);</span><br><span class="line">        String s1 = RSAUtils.encryptPublic(generatePublicKey, str);</span><br><span class="line">        Assert.assertEquals(s, s1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">decryptPublic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = RSAUtils.encryptPrivate(privateKey, str);</span><br><span class="line"></span><br><span class="line">        String s1 = RSAUtils.decryptPublic(publicKey, s);</span><br><span class="line">        String s2 = RSAUtils.decryptPublic(generatePublicKey, s);</span><br><span class="line">        Assert.assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">encryptPrivate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = RSAUtils.encryptPrivate(privateKey, str);</span><br><span class="line">        String s1 = RSAUtils.encryptPrivate(generatePrivateKey, str);</span><br><span class="line">        Assert.assertEquals(s, s1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">decryptPrivate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = RSAUtils.encryptPublic(publicKey, str);</span><br><span class="line"></span><br><span class="line">        String s1 = RSAUtils.decryptPrivate(privateKey, s);</span><br><span class="line">        String s2 = RSAUtils.decryptPrivate(generatePrivateKey, s);</span><br><span class="line">        Assert.assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JS-版-RSA-工具类"><a href="#JS-版-RSA-工具类" class="headerlink" title="JS 版 RSA 工具类"></a>JS 版 RSA 工具类</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * RSA, a suite of routines for performing RSA public-key computations in JavaScript.</span></span><br><span class="line"><span class="comment"> * Copyright 1998-2005 David Shapiro.</span></span><br><span class="line"><span class="comment"> * Dave Shapiro</span></span><br><span class="line"><span class="comment"> * dave@ohdave.com</span></span><br><span class="line"><span class="comment"> * changed by Fuchun, 2010-05-06</span></span><br><span class="line"><span class="comment"> * fcrpg2005@gmail.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params">$w</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> $w.RSAUtils === <span class="string">'undefined'</span>)</span><br><span class="line">        <span class="keyword">var</span> RSAUtils = $w.RSAUtils = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> biRadixBase = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">var</span> biRadixBits = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">var</span> bitsPerDigit = biRadixBits;</span><br><span class="line">    <span class="keyword">var</span> biRadix = <span class="number">1</span> &lt;&lt; <span class="number">16</span>; <span class="comment">// = 2^16 = 65536</span></span><br><span class="line">    <span class="keyword">var</span> biHalfRadix = biRadix &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> biRadixSquared = biRadix * biRadix;</span><br><span class="line">    <span class="keyword">var</span> maxDigitVal = biRadix - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> maxInteger = <span class="number">9999999999999998</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//maxDigits:</span></span><br><span class="line">    <span class="comment">//Change this to accommodate your largest number size. Use setMaxDigits()</span></span><br><span class="line">    <span class="comment">//to change it!</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//In general, if you're working with numbers of size N bits, you'll need 2*N</span></span><br><span class="line">    <span class="comment">//bits of storage. Each digit holds 16 bits. So, a 1024-bit key will need</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//1024 * 2 / 16 = 128 digits of storage.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">var</span> maxDigits;</span><br><span class="line">    <span class="keyword">var</span> ZERO_ARRAY;</span><br><span class="line">    <span class="keyword">var</span> bigZero, bigOne;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> BigInt = $w.BigInt = <span class="function"><span class="keyword">function</span>(<span class="params">flag</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> flag == <span class="string">"boolean"</span> &amp;&amp; flag == <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.digits = <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.digits = ZERO_ARRAY.slice(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.isNeg = <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.setMaxDigits = <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        maxDigits = value;</span><br><span class="line">        ZERO_ARRAY = <span class="keyword">new</span> <span class="built_in">Array</span>(maxDigits);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> iza = <span class="number">0</span>; iza &lt; ZERO_ARRAY.length; iza++) ZERO_ARRAY[iza] = <span class="number">0</span>;</span><br><span class="line">        bigZero = <span class="keyword">new</span> BigInt();</span><br><span class="line">        bigOne = <span class="keyword">new</span> BigInt();</span><br><span class="line">        bigOne.digits[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    RSAUtils.setMaxDigits(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//The maximum number of digits in base 10 you can convert to an</span></span><br><span class="line">    <span class="comment">//integer without JavaScript throwing up on you.</span></span><br><span class="line">    <span class="keyword">var</span> dpl10 = <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biFromNumber = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        result.isNeg = i &lt; <span class="number">0</span>;</span><br><span class="line">        i = <span class="built_in">Math</span>.abs(i);</span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result.digits[j++] = i &amp; maxDigitVal;</span><br><span class="line">            i = <span class="built_in">Math</span>.floor(i / biRadix);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//lr10 = 10 ^ dpl10</span></span><br><span class="line">    <span class="keyword">var</span> lr10 = RSAUtils.biFromNumber(<span class="number">1000000000000000</span>);</span><br><span class="line"></span><br><span class="line">    RSAUtils.biFromDecimal = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> isNeg = s.charAt(<span class="number">0</span>) == <span class="string">'-'</span>;</span><br><span class="line">        <span class="keyword">var</span> i = isNeg ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> result;</span><br><span class="line">        <span class="comment">// Skip leading zeros.</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; s.length &amp;&amp; s.charAt(i) == <span class="string">'0'</span>) ++i;</span><br><span class="line">        <span class="keyword">if</span> (i == s.length) &#123;</span><br><span class="line">            result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> digitCount = s.length - i;</span><br><span class="line">            <span class="keyword">var</span> fgl = digitCount % dpl10;</span><br><span class="line">            <span class="keyword">if</span> (fgl == <span class="number">0</span>) fgl = dpl10;</span><br><span class="line">            result = RSAUtils.biFromNumber(<span class="built_in">Number</span>(s.substr(i, fgl)));</span><br><span class="line">            i += fgl;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; s.length) &#123;</span><br><span class="line">                result = RSAUtils.biAdd(RSAUtils.biMultiply(result, lr10),</span><br><span class="line">                    RSAUtils.biFromNumber(<span class="built_in">Number</span>(s.substr(i, dpl10))));</span><br><span class="line">                i += dpl10;</span><br><span class="line">            &#125;</span><br><span class="line">            result.isNeg = isNeg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biCopy = <span class="function"><span class="keyword">function</span>(<span class="params">bi</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt(<span class="literal">true</span>);</span><br><span class="line">        result.digits = bi.digits.slice(<span class="number">0</span>);</span><br><span class="line">        result.isNeg = bi.isNeg;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.reverseStr = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = s.length - <span class="number">1</span>; i &gt; <span class="number">-1</span>; --i) &#123;</span><br><span class="line">            result += s.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> hexatrigesimalToChar = [</span><br><span class="line">        <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>,</span><br><span class="line">        <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>,</span><br><span class="line">        <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>,</span><br><span class="line">        <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    RSAUtils.biToString = <span class="function"><span class="keyword">function</span>(<span class="params">x, radix</span>) </span>&#123; <span class="comment">// 2 &lt;= radix &lt;= 36</span></span><br><span class="line">        <span class="keyword">var</span> b = <span class="keyword">new</span> BigInt();</span><br><span class="line">        b.digits[<span class="number">0</span>] = radix;</span><br><span class="line">        <span class="keyword">var</span> qr = RSAUtils.biDivideModulo(x, b);</span><br><span class="line">        <span class="keyword">var</span> result = hexatrigesimalToChar[qr[<span class="number">1</span>].digits[<span class="number">0</span>]];</span><br><span class="line">        <span class="keyword">while</span> (RSAUtils.biCompare(qr[<span class="number">0</span>], bigZero) == <span class="number">1</span>) &#123;</span><br><span class="line">            qr = RSAUtils.biDivideModulo(qr[<span class="number">0</span>], b);</span><br><span class="line">            digit = qr[<span class="number">1</span>].digits[<span class="number">0</span>];</span><br><span class="line">            result += hexatrigesimalToChar[qr[<span class="number">1</span>].digits[<span class="number">0</span>]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (x.isNeg ? <span class="string">"-"</span> : <span class="string">""</span>) + RSAUtils.reverseStr(result);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biToDecimal = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> b = <span class="keyword">new</span> BigInt();</span><br><span class="line">        b.digits[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">var</span> qr = RSAUtils.biDivideModulo(x, b);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="built_in">String</span>(qr[<span class="number">1</span>].digits[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">while</span> (RSAUtils.biCompare(qr[<span class="number">0</span>], bigZero) == <span class="number">1</span>) &#123;</span><br><span class="line">            qr = RSAUtils.biDivideModulo(qr[<span class="number">0</span>], b);</span><br><span class="line">            result += <span class="built_in">String</span>(qr[<span class="number">1</span>].digits[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (x.isNeg ? <span class="string">"-"</span> : <span class="string">""</span>) + RSAUtils.reverseStr(result);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> hexToChar = [<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>,</span><br><span class="line">        <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    RSAUtils.digitToHex = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> mask = <span class="number">0xf</span>;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">            result += hexToChar[n &amp; mask];</span><br><span class="line">            n &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> RSAUtils.reverseStr(result);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biToHex = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> n = RSAUtils.biHighIndex(x);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = RSAUtils.biHighIndex(x); i &gt; <span class="number">-1</span>; --i) &#123;</span><br><span class="line">            result += RSAUtils.digitToHex(x.digits[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.charToHex = <span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ZERO = <span class="number">48</span>;</span><br><span class="line">        <span class="keyword">var</span> NINE = ZERO + <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">var</span> littleA = <span class="number">97</span>;</span><br><span class="line">        <span class="keyword">var</span> littleZ = littleA + <span class="number">25</span>;</span><br><span class="line">        <span class="keyword">var</span> bigA = <span class="number">65</span>;</span><br><span class="line">        <span class="keyword">var</span> bigZ = <span class="number">65</span> + <span class="number">25</span>;</span><br><span class="line">        <span class="keyword">var</span> result;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (c &gt;= ZERO &amp;&amp; c &lt;= NINE) &#123;</span><br><span class="line">            result = c - ZERO;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= bigA &amp;&amp; c &lt;= bigZ) &#123;</span><br><span class="line">            result = <span class="number">10</span> + c - bigA;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= littleA &amp;&amp; c &lt;= littleZ) &#123;</span><br><span class="line">            result = <span class="number">10</span> + c - littleA;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.hexToDigit = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> sl = <span class="built_in">Math</span>.min(s.length, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sl; ++i) &#123;</span><br><span class="line">            result &lt;&lt;= <span class="number">4</span>;</span><br><span class="line">            result |= RSAUtils.charToHex(s.charCodeAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biFromHex = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        <span class="keyword">var</span> sl = s.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = sl, j = <span class="number">0</span>; i &gt; <span class="number">0</span>; i -= <span class="number">4</span>, ++j) &#123;</span><br><span class="line">            result.digits[j] = RSAUtils.hexToDigit(s.substr(<span class="built_in">Math</span>.max(i - <span class="number">4</span>, <span class="number">0</span>), <span class="built_in">Math</span>.min(i, <span class="number">4</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biFromString = <span class="function"><span class="keyword">function</span>(<span class="params">s, radix</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> isNeg = s.charAt(<span class="number">0</span>) == <span class="string">'-'</span>;</span><br><span class="line">        <span class="keyword">var</span> istop = isNeg ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        <span class="keyword">var</span> place = <span class="keyword">new</span> BigInt();</span><br><span class="line">        place.digits[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">// radix^0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = s.length - <span class="number">1</span>; i &gt;= istop; i--) &#123;</span><br><span class="line">            <span class="keyword">var</span> c = s.charCodeAt(i);</span><br><span class="line">            <span class="keyword">var</span> digit = RSAUtils.charToHex(c);</span><br><span class="line">            <span class="keyword">var</span> biDigit = RSAUtils.biMultiplyDigit(place, digit);</span><br><span class="line">            result = RSAUtils.biAdd(result, biDigit);</span><br><span class="line">            place = RSAUtils.biMultiplyDigit(place, radix);</span><br><span class="line">        &#125;</span><br><span class="line">        result.isNeg = isNeg;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biDump = <span class="function"><span class="keyword">function</span>(<span class="params">b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (b.isNeg ? <span class="string">"-"</span> : <span class="string">""</span>) + b.digits.join(<span class="string">" "</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biAdd = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (x.isNeg != y.isNeg) &#123;</span><br><span class="line">            y.isNeg = !y.isNeg;</span><br><span class="line">            result = RSAUtils.biSubtract(x, y);</span><br><span class="line">            y.isNeg = !y.isNeg;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = <span class="keyword">new</span> BigInt();</span><br><span class="line">            <span class="keyword">var</span> c = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> n;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.digits.length; ++i) &#123;</span><br><span class="line">                n = x.digits[i] + y.digits[i] + c;</span><br><span class="line">                result.digits[i] = n % biRadix;</span><br><span class="line">                c = <span class="built_in">Number</span>(n &gt;= biRadix);</span><br><span class="line">            &#125;</span><br><span class="line">            result.isNeg = x.isNeg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biSubtract = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result;</span><br><span class="line">        <span class="keyword">if</span> (x.isNeg != y.isNeg) &#123;</span><br><span class="line">            y.isNeg = !y.isNeg;</span><br><span class="line">            result = RSAUtils.biAdd(x, y);</span><br><span class="line">            y.isNeg = !y.isNeg;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = <span class="keyword">new</span> BigInt();</span><br><span class="line">            <span class="keyword">var</span> n, c;</span><br><span class="line">            c = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.digits.length; ++i) &#123;</span><br><span class="line">                n = x.digits[i] - y.digits[i] + c;</span><br><span class="line">                result.digits[i] = n % biRadix;</span><br><span class="line">                <span class="comment">// Stupid non-conforming modulus operation.</span></span><br><span class="line">                <span class="keyword">if</span> (result.digits[i] &lt; <span class="number">0</span>) result.digits[i] += biRadix;</span><br><span class="line">                c = <span class="number">0</span> - <span class="built_in">Number</span>(n &lt; <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Fix up the negative sign, if any.</span></span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">-1</span>) &#123;</span><br><span class="line">                c = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.digits.length; ++i) &#123;</span><br><span class="line">                    n = <span class="number">0</span> - result.digits[i] + c;</span><br><span class="line">                    result.digits[i] = n % biRadix;</span><br><span class="line">                    <span class="comment">// Stupid non-conforming modulus operation.</span></span><br><span class="line">                    <span class="keyword">if</span> (result.digits[i] &lt; <span class="number">0</span>) result.digits[i] += biRadix;</span><br><span class="line">                    c = <span class="number">0</span> - <span class="built_in">Number</span>(n &lt; <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Result is opposite sign of arguments.</span></span><br><span class="line">                result.isNeg = !x.isNeg;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Result is same sign.</span></span><br><span class="line">                result.isNeg = x.isNeg;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biHighIndex = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = x.digits.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (result &gt; <span class="number">0</span> &amp;&amp; x.digits[result] == <span class="number">0</span>) --result;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biNumBits = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> n = RSAUtils.biHighIndex(x);</span><br><span class="line">        <span class="keyword">var</span> d = x.digits[n];</span><br><span class="line">        <span class="keyword">var</span> m = (n + <span class="number">1</span>) * bitsPerDigit;</span><br><span class="line">        <span class="keyword">var</span> result;</span><br><span class="line">        <span class="keyword">for</span> (result = m; result &gt; m - bitsPerDigit; --result) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((d &amp; <span class="number">0x8000</span>) != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            d &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biMultiply = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        <span class="keyword">var</span> c;</span><br><span class="line">        <span class="keyword">var</span> n = RSAUtils.biHighIndex(x);</span><br><span class="line">        <span class="keyword">var</span> t = RSAUtils.biHighIndex(y);</span><br><span class="line">        <span class="keyword">var</span> u, uv, k;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= t; ++i) &#123;</span><br><span class="line">            c = <span class="number">0</span>;</span><br><span class="line">            k = i;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= n; ++j, ++k) &#123;</span><br><span class="line">                uv = result.digits[k] + x.digits[j] * y.digits[i] + c;</span><br><span class="line">                result.digits[k] = uv &amp; maxDigitVal;</span><br><span class="line">                c = uv &gt;&gt;&gt; biRadixBits;</span><br><span class="line">                <span class="comment">//c = Math.floor(uv / biRadix);</span></span><br><span class="line">            &#125;</span><br><span class="line">            result.digits[i + n + <span class="number">1</span>] = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Someone give me a logical xor, please.</span></span><br><span class="line">        result.isNeg = x.isNeg != y.isNeg;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biMultiplyDigit = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> n, c, uv;</span><br><span class="line"></span><br><span class="line">        result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        n = RSAUtils.biHighIndex(x);</span><br><span class="line">        c = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            uv = result.digits[j] + x.digits[j] * y + c;</span><br><span class="line">            result.digits[j] = uv &amp; maxDigitVal;</span><br><span class="line">            c = uv &gt;&gt;&gt; biRadixBits;</span><br><span class="line">            <span class="comment">//c = Math.floor(uv / biRadix);</span></span><br><span class="line">        &#125;</span><br><span class="line">        result.digits[<span class="number">1</span> + n] = c;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.arrayCopy = <span class="function"><span class="keyword">function</span>(<span class="params">src, srcStart, dest, destStart, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> m = <span class="built_in">Math</span>.min(srcStart + n, src.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = srcStart, j = destStart; i &lt; m; ++i, ++j) &#123;</span><br><span class="line">            dest[j] = src[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> highBitMasks = [<span class="number">0x0000</span>, <span class="number">0x8000</span>, <span class="number">0xC000</span>, <span class="number">0xE000</span>, <span class="number">0xF000</span>, <span class="number">0xF800</span>,</span><br><span class="line">        <span class="number">0xFC00</span>, <span class="number">0xFE00</span>, <span class="number">0xFF00</span>, <span class="number">0xFF80</span>, <span class="number">0xFFC0</span>, <span class="number">0xFFE0</span>,</span><br><span class="line">        <span class="number">0xFFF0</span>, <span class="number">0xFFF8</span>, <span class="number">0xFFFC</span>, <span class="number">0xFFFE</span>, <span class="number">0xFFFF</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    RSAUtils.biShiftLeft = <span class="function"><span class="keyword">function</span>(<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> digitCount = <span class="built_in">Math</span>.floor(n / bitsPerDigit);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        RSAUtils.arrayCopy(x.digits, <span class="number">0</span>, result.digits, digitCount,</span><br><span class="line">            result.digits.length - digitCount);</span><br><span class="line">        <span class="keyword">var</span> bits = n % bitsPerDigit;</span><br><span class="line">        <span class="keyword">var</span> rightBits = bitsPerDigit - bits;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = result.digits.length - <span class="number">1</span>, i1 = i - <span class="number">1</span>; i &gt; <span class="number">0</span>; --i, --i1) &#123;</span><br><span class="line">            result.digits[i] = ((result.digits[i] &lt;&lt; bits) &amp; maxDigitVal) |</span><br><span class="line">                ((result.digits[i1] &amp; highBitMasks[bits]) &gt;&gt;&gt;</span><br><span class="line">                    (rightBits));</span><br><span class="line">        &#125;</span><br><span class="line">        result.digits[<span class="number">0</span>] = ((result.digits[i] &lt;&lt; bits) &amp; maxDigitVal);</span><br><span class="line">        result.isNeg = x.isNeg;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> lowBitMasks = [<span class="number">0x0000</span>, <span class="number">0x0001</span>, <span class="number">0x0003</span>, <span class="number">0x0007</span>, <span class="number">0x000F</span>, <span class="number">0x001F</span>,</span><br><span class="line">        <span class="number">0x003F</span>, <span class="number">0x007F</span>, <span class="number">0x00FF</span>, <span class="number">0x01FF</span>, <span class="number">0x03FF</span>, <span class="number">0x07FF</span>,</span><br><span class="line">        <span class="number">0x0FFF</span>, <span class="number">0x1FFF</span>, <span class="number">0x3FFF</span>, <span class="number">0x7FFF</span>, <span class="number">0xFFFF</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    RSAUtils.biShiftRight = <span class="function"><span class="keyword">function</span>(<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> digitCount = <span class="built_in">Math</span>.floor(n / bitsPerDigit);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        RSAUtils.arrayCopy(x.digits, digitCount, result.digits, <span class="number">0</span>,</span><br><span class="line">            x.digits.length - digitCount);</span><br><span class="line">        <span class="keyword">var</span> bits = n % bitsPerDigit;</span><br><span class="line">        <span class="keyword">var</span> leftBits = bitsPerDigit - bits;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, i1 = i + <span class="number">1</span>; i &lt; result.digits.length - <span class="number">1</span>; ++i, ++i1) &#123;</span><br><span class="line">            result.digits[i] = (result.digits[i] &gt;&gt;&gt; bits) |</span><br><span class="line">                ((result.digits[i1] &amp; lowBitMasks[bits]) &lt;&lt; leftBits);</span><br><span class="line">        &#125;</span><br><span class="line">        result.digits[result.digits.length - <span class="number">1</span>] &gt;&gt;&gt;= bits;</span><br><span class="line">        result.isNeg = x.isNeg;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biMultiplyByRadixPower = <span class="function"><span class="keyword">function</span>(<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        RSAUtils.arrayCopy(x.digits, <span class="number">0</span>, result.digits, n, result.digits.length - n);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biDivideByRadixPower = <span class="function"><span class="keyword">function</span>(<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        RSAUtils.arrayCopy(x.digits, n, result.digits, <span class="number">0</span>, result.digits.length - n);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biModuloByRadixPower = <span class="function"><span class="keyword">function</span>(<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        RSAUtils.arrayCopy(x.digits, <span class="number">0</span>, result.digits, <span class="number">0</span>, n);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biCompare = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x.isNeg != y.isNeg) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(x.isNeg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = x.digits.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x.digits[i] != y.digits[i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (x.isNeg) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(x.digits[i] &gt; y.digits[i]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(x.digits[i] &lt; y.digits[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biDivideModulo = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nb = RSAUtils.biNumBits(x);</span><br><span class="line">        <span class="keyword">var</span> tb = RSAUtils.biNumBits(y);</span><br><span class="line">        <span class="keyword">var</span> origYIsNeg = y.isNeg;</span><br><span class="line">        <span class="keyword">var</span> q, r;</span><br><span class="line">        <span class="keyword">if</span> (nb &lt; tb) &#123;</span><br><span class="line">            <span class="comment">// |x| &lt; |y|</span></span><br><span class="line">            <span class="keyword">if</span> (x.isNeg) &#123;</span><br><span class="line">                q = RSAUtils.biCopy(bigOne);</span><br><span class="line">                q.isNeg = !y.isNeg;</span><br><span class="line">                x.isNeg = <span class="literal">false</span>;</span><br><span class="line">                y.isNeg = <span class="literal">false</span>;</span><br><span class="line">                r = biSubtract(y, x);</span><br><span class="line">                <span class="comment">// Restore signs, 'cause they're references.</span></span><br><span class="line">                x.isNeg = <span class="literal">true</span>;</span><br><span class="line">                y.isNeg = origYIsNeg;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                q = <span class="keyword">new</span> BigInt();</span><br><span class="line">                r = RSAUtils.biCopy(x);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> [q, r];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        q = <span class="keyword">new</span> BigInt();</span><br><span class="line">        r = x;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Normalize Y.</span></span><br><span class="line">        <span class="keyword">var</span> t = <span class="built_in">Math</span>.ceil(tb / bitsPerDigit) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> lambda = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (y.digits[t] &lt; biHalfRadix) &#123;</span><br><span class="line">            y = RSAUtils.biShiftLeft(y, <span class="number">1</span>);</span><br><span class="line">            ++lambda;</span><br><span class="line">            ++tb;</span><br><span class="line">            t = <span class="built_in">Math</span>.ceil(tb / bitsPerDigit) - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Shift r over to keep the quotient constant. We'll shift the</span></span><br><span class="line">        <span class="comment">// remainder back at the end.</span></span><br><span class="line">        r = RSAUtils.biShiftLeft(r, lambda);</span><br><span class="line">        nb += lambda; <span class="comment">// Update the bit count for x.</span></span><br><span class="line">        <span class="keyword">var</span> n = <span class="built_in">Math</span>.ceil(nb / bitsPerDigit) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> b = RSAUtils.biMultiplyByRadixPower(y, n - t);</span><br><span class="line">        <span class="keyword">while</span> (RSAUtils.biCompare(r, b) != <span class="number">-1</span>) &#123;</span><br><span class="line">            ++q.digits[n - t];</span><br><span class="line">            r = RSAUtils.biSubtract(r, b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = n; i &gt; t; --i) &#123;</span><br><span class="line">            <span class="keyword">var</span> ri = (i &gt;= r.digits.length) ? <span class="number">0</span> : r.digits[i];</span><br><span class="line">            <span class="keyword">var</span> ri1 = (i - <span class="number">1</span> &gt;= r.digits.length) ? <span class="number">0</span> : r.digits[i - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">var</span> ri2 = (i - <span class="number">2</span> &gt;= r.digits.length) ? <span class="number">0</span> : r.digits[i - <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">var</span> yt = (t &gt;= y.digits.length) ? <span class="number">0</span> : y.digits[t];</span><br><span class="line">            <span class="keyword">var</span> yt1 = (t - <span class="number">1</span> &gt;= y.digits.length) ? <span class="number">0</span> : y.digits[t - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (ri == yt) &#123;</span><br><span class="line">                q.digits[i - t - <span class="number">1</span>] = maxDigitVal;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                q.digits[i - t - <span class="number">1</span>] = <span class="built_in">Math</span>.floor((ri * biRadix + ri1) / yt);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> c1 = q.digits[i - t - <span class="number">1</span>] * ((yt * biRadix) + yt1);</span><br><span class="line">            <span class="keyword">var</span> c2 = (ri * biRadixSquared) + ((ri1 * biRadix) + ri2);</span><br><span class="line">            <span class="keyword">while</span> (c1 &gt; c2) &#123;</span><br><span class="line">                --q.digits[i - t - <span class="number">1</span>];</span><br><span class="line">                c1 = q.digits[i - t - <span class="number">1</span>] * ((yt * biRadix) | yt1);</span><br><span class="line">                c2 = (ri * biRadix * biRadix) + ((ri1 * biRadix) + ri2);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            b = RSAUtils.biMultiplyByRadixPower(y, i - t - <span class="number">1</span>);</span><br><span class="line">            r = RSAUtils.biSubtract(r, RSAUtils.biMultiplyDigit(b, q.digits[i - t - <span class="number">1</span>]));</span><br><span class="line">            <span class="keyword">if</span> (r.isNeg) &#123;</span><br><span class="line">                r = RSAUtils.biAdd(r, b);</span><br><span class="line">                --q.digits[i - t - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        r = RSAUtils.biShiftRight(r, lambda);</span><br><span class="line">        <span class="comment">// Fiddle with the signs and stuff to make sure that 0 &lt;= r &lt; y.</span></span><br><span class="line">        q.isNeg = x.isNeg != origYIsNeg;</span><br><span class="line">        <span class="keyword">if</span> (x.isNeg) &#123;</span><br><span class="line">            <span class="keyword">if</span> (origYIsNeg) &#123;</span><br><span class="line">                q = RSAUtils.biAdd(q, bigOne);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                q = RSAUtils.biSubtract(q, bigOne);</span><br><span class="line">            &#125;</span><br><span class="line">            y = RSAUtils.biShiftRight(y, lambda);</span><br><span class="line">            r = RSAUtils.biSubtract(y, r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Check for the unbelievably stupid degenerate case of r == -0.</span></span><br><span class="line">        <span class="keyword">if</span> (r.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; RSAUtils.biHighIndex(r) == <span class="number">0</span>) r.isNeg = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [q, r];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biDivide = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> RSAUtils.biDivideModulo(x, y)[<span class="number">0</span>];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biModulo = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> RSAUtils.biDivideModulo(x, y)[<span class="number">1</span>];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biMultiplyMod = <span class="function"><span class="keyword">function</span>(<span class="params">x, y, m</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> RSAUtils.biModulo(RSAUtils.biMultiply(x, y), m);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biPow = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = bigOne;</span><br><span class="line">        <span class="keyword">var</span> a = x;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((y &amp; <span class="number">1</span>) != <span class="number">0</span>) result = RSAUtils.biMultiply(result, a);</span><br><span class="line">            y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (y == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            a = RSAUtils.biMultiply(a, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.biPowMod = <span class="function"><span class="keyword">function</span>(<span class="params">x, y, m</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = bigOne;</span><br><span class="line">        <span class="keyword">var</span> a = x;</span><br><span class="line">        <span class="keyword">var</span> k = y;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((k.digits[<span class="number">0</span>] &amp; <span class="number">1</span>) != <span class="number">0</span>) result = RSAUtils.biMultiplyMod(result, a, m);</span><br><span class="line">            k = RSAUtils.biShiftRight(k, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (k.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; RSAUtils.biHighIndex(k) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            a = RSAUtils.biMultiplyMod(a, a, m);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    $w.BarrettMu = <span class="function"><span class="keyword">function</span>(<span class="params">m</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.modulus = RSAUtils.biCopy(m);</span><br><span class="line">        <span class="keyword">this</span>.k = RSAUtils.biHighIndex(<span class="keyword">this</span>.modulus) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> b2k = <span class="keyword">new</span> BigInt();</span><br><span class="line">        b2k.digits[<span class="number">2</span> * <span class="keyword">this</span>.k] = <span class="number">1</span>; <span class="comment">// b2k = b^(2k)</span></span><br><span class="line">        <span class="keyword">this</span>.mu = RSAUtils.biDivide(b2k, <span class="keyword">this</span>.modulus);</span><br><span class="line">        <span class="keyword">this</span>.bkplus1 = <span class="keyword">new</span> BigInt();</span><br><span class="line">        <span class="keyword">this</span>.bkplus1.digits[<span class="keyword">this</span>.k + <span class="number">1</span>] = <span class="number">1</span>; <span class="comment">// bkplus1 = b^(k+1)</span></span><br><span class="line">        <span class="keyword">this</span>.modulo = BarrettMu_modulo;</span><br><span class="line">        <span class="keyword">this</span>.multiplyMod = BarrettMu_multiplyMod;</span><br><span class="line">        <span class="keyword">this</span>.powMod = BarrettMu_powMod;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_modulo</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $dmath = RSAUtils;</span><br><span class="line">        <span class="keyword">var</span> q1 = $dmath.biDivideByRadixPower(x, <span class="keyword">this</span>.k - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> q2 = $dmath.biMultiply(q1, <span class="keyword">this</span>.mu);</span><br><span class="line">        <span class="keyword">var</span> q3 = $dmath.biDivideByRadixPower(q2, <span class="keyword">this</span>.k + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> r1 = $dmath.biModuloByRadixPower(x, <span class="keyword">this</span>.k + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> r2term = $dmath.biMultiply(q3, <span class="keyword">this</span>.modulus);</span><br><span class="line">        <span class="keyword">var</span> r2 = $dmath.biModuloByRadixPower(r2term, <span class="keyword">this</span>.k + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> r = $dmath.biSubtract(r1, r2);</span><br><span class="line">        <span class="keyword">if</span> (r.isNeg) &#123;</span><br><span class="line">            r = $dmath.biAdd(r, <span class="keyword">this</span>.bkplus1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> rgtem = $dmath.biCompare(r, <span class="keyword">this</span>.modulus) &gt;= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (rgtem) &#123;</span><br><span class="line">            r = $dmath.biSubtract(r, <span class="keyword">this</span>.modulus);</span><br><span class="line">            rgtem = $dmath.biCompare(r, <span class="keyword">this</span>.modulus) &gt;= <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_multiplyMod</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        x = this.modulo(x);</span></span><br><span class="line"><span class="comment">        y = this.modulo(y);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">var</span> xy = RSAUtils.biMultiply(x, y);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.modulo(xy);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_powMod</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> BigInt();</span><br><span class="line">        result.digits[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> a = x;</span><br><span class="line">        <span class="keyword">var</span> k = y;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((k.digits[<span class="number">0</span>] &amp; <span class="number">1</span>) != <span class="number">0</span>) result = <span class="keyword">this</span>.multiplyMod(result, a);</span><br><span class="line">            k = RSAUtils.biShiftRight(k, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (k.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; RSAUtils.biHighIndex(k) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            a = <span class="keyword">this</span>.multiplyMod(a, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> RSAKeyPair = <span class="function"><span class="keyword">function</span>(<span class="params">encryptionExponent, decryptionExponent, modulus</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $dmath = RSAUtils;</span><br><span class="line">        <span class="keyword">this</span>.e = $dmath.biFromHex(encryptionExponent);</span><br><span class="line">        <span class="keyword">this</span>.d = $dmath.biFromHex(decryptionExponent);</span><br><span class="line">        <span class="keyword">this</span>.m = $dmath.biFromHex(modulus);</span><br><span class="line">        <span class="comment">// We can do two bytes per digit, so</span></span><br><span class="line">        <span class="comment">// chunkSize = 2 * (number of digits in modulus - 1).</span></span><br><span class="line">        <span class="comment">// Since biHighIndex returns the high index, not the number of digits, 1 has</span></span><br><span class="line">        <span class="comment">// already been subtracted.</span></span><br><span class="line">        <span class="keyword">this</span>.chunkSize = <span class="number">2</span> * $dmath.biHighIndex(<span class="keyword">this</span>.m);</span><br><span class="line">        <span class="keyword">this</span>.radix = <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">this</span>.barrett = <span class="keyword">new</span> $w.BarrettMu(<span class="keyword">this</span>.m);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.getKeyPair = <span class="function"><span class="keyword">function</span>(<span class="params">encryptionExponent, decryptionExponent, modulus</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RSAKeyPair(encryptionExponent, decryptionExponent, modulus);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> $w.twoDigit === <span class="string">'undefined'</span>) &#123;</span><br><span class="line">        $w.twoDigit = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (n &lt; <span class="number">10</span> ? <span class="string">"0"</span> : <span class="string">""</span>) + <span class="built_in">String</span>(n);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Altered by Rob Saunders (rob@robsaunders.net). New routine pads the</span></span><br><span class="line">    <span class="comment">// string after it has been converted to an array. This fixes an</span></span><br><span class="line">    <span class="comment">// incompatibility with Flash MX's ActionScript.</span></span><br><span class="line">    RSAUtils.encryptedString = <span class="function"><span class="keyword">function</span>(<span class="params">key, s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = [];</span><br><span class="line">        <span class="keyword">var</span> sl = s.length;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; sl) &#123;</span><br><span class="line">            a[i] = s.charCodeAt(i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (a.length % key.chunkSize != <span class="number">0</span>) &#123;</span><br><span class="line">            a[i++] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> al = a.length;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> j, k, block;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; al; i += key.chunkSize) &#123;</span><br><span class="line">            block = <span class="keyword">new</span> BigInt();</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (k = i; k &lt; i + key.chunkSize; ++j) &#123;</span><br><span class="line">                block.digits[j] = a[k++];</span><br><span class="line">                block.digits[j] += a[k++] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> crypt = key.barrett.powMod(block, key.e);</span><br><span class="line">            <span class="keyword">var</span> text = key.radix == <span class="number">16</span> ? RSAUtils.biToHex(crypt) : RSAUtils.biToString(crypt, key.radix);</span><br><span class="line">            result += text + <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.substring(<span class="number">0</span>, result.length - <span class="number">1</span>); <span class="comment">// Remove last space.</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    RSAUtils.decryptedString = <span class="function"><span class="keyword">function</span>(<span class="params">key, s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> blocks = s.split(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> i, j, block;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; blocks.length; ++i) &#123;</span><br><span class="line">            <span class="keyword">var</span> bi;</span><br><span class="line">            <span class="keyword">if</span> (key.radix == <span class="number">16</span>) &#123;</span><br><span class="line">                bi = RSAUtils.biFromHex(blocks[i]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                bi = RSAUtils.biFromString(blocks[i], key.radix);</span><br><span class="line">            &#125;</span><br><span class="line">            block = key.barrett.powMod(bi, key.d);</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= RSAUtils.biHighIndex(block); ++j) &#123;</span><br><span class="line">                result += <span class="built_in">String</span>.fromCharCode(block.digits[j] &amp; <span class="number">255</span>,</span><br><span class="line">                    block.digits[j] &gt;&gt; <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Remove trailing null, if any.</span></span><br><span class="line">        <span class="keyword">if</span> (result.charCodeAt(result.length - <span class="number">1</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            result = result.substring(<span class="number">0</span>, result.length - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line">    RSAUtils.setMaxDigits(<span class="number">130</span>);</span><br><span class="line">&#125;)(<span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>
<h2 id="JS-版-RSA-工具类扩展"><a href="#JS-版-RSA-工具类扩展" class="headerlink" title="JS 版 RSA 工具类扩展"></a>JS 版 RSA 工具类扩展</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RSA 加密数据：返回加密后的字符串</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;e 公匙</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;n 模</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;s 要加密的字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encryptRSA</span>(<span class="params">e, n, s</span>) </span>&#123;</span><br><span class="line">    RSAUtils.setMaxDigits(<span class="number">130</span>);</span><br><span class="line">    <span class="keyword">var</span> keyPair = RSAUtils.getKeyPair(e, <span class="string">''</span>, n);</span><br><span class="line">    <span class="comment">// URI 编码</span></span><br><span class="line">    s = <span class="built_in">window</span>.encodeURIComponent(s);</span><br><span class="line">    <span class="comment">// 反转</span></span><br><span class="line">    s = s.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> RSAUtils.encryptedString(keyPair, s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RSA 解密数据：返回解密后的字符串</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;e 公匙</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;n 模</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;s 要解密的字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decryptRSA</span>(<span class="params">e, n, s</span>) </span>&#123;</span><br><span class="line">    RSAUtils.setMaxDigits(<span class="number">130</span>);</span><br><span class="line">    <span class="keyword">var</span> keyPair = RSAUtils.getKeyPair(<span class="string">''</span>, e, n);</span><br><span class="line">    s = RSAUtils.decryptedString(keyPair, s);</span><br><span class="line">    <span class="comment">// 反转</span></span><br><span class="line">    s = s.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">    <span class="comment">// URI 解码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">window</span>.decodeURIComponent(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JS-版-RSA-工具类测试"><a href="#JS-版-RSA-工具类测试" class="headerlink" title="JS 版 RSA 工具类测试"></a>JS 版 RSA 工具类测试</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="string">'e1eb7ab440eb2b3413146dc64c66b4047c7d035712201f944dc092d6d65fb6496c27bb6984477e9d4d683cfe28f06e03efdbe28e92134071f5867adb5789d3b076b79bba167a710197ef7f47894f1d3737e4bf5dd33a7db4de67eebbd85f72f7fd681f17f03a30575d613df6ed682fd324e12ec14bd17cc2b667f7536d8db137'</span>;</span><br><span class="line"><span class="keyword">var</span> e = <span class="string">'10001'</span>;</span><br><span class="line"><span class="comment">// 一般客户端不要传私钥，这里是为了测试</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="string">'9316ca9c034c59a39cec87103d7bfca6931a9d8b1a0cfa228780e2d9a757478a8435562abbea04808bfe5affab4de682ffaeacd1e03f528d1faaffe0411d4649fb2e691f0eea759f609b26e04e86419e4e2c628da8ea54168999d744fd611aa1f3c67ceba4a87a289e251dc1dbdd91448d996971dd6daf5804843fe4d0776091'</span>;</span><br><span class="line"><span class="keyword">var</span> encrypt = <span class="string">'651e45bc3f35e766cb2397eef719401a88b6177fc1e566f97d24bf22398aad87b00e82a55cd70520172abd7e8d70a452ef22ce0c5a2477ea61f9430fa94c0913753f18781868bdb730fb78b812461884db72a2211ec681780bd7143d7fd0dddff81be42b887cf6fd70c2cad7a845f93bd79563dc60bb94b85610230cbb327c55'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'------------- 服务端私钥加密，客户端公钥解密 -------------'</span>);</span><br><span class="line">decryptR = decryptRSA(e, n, encrypt);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'decryptR: %o'</span>, decryptR);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'------------- 公钥加密，私钥解密 -------------'</span>);</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'客户端 - 法拉利_123_abc_《》'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'str: %o'</span>, str);</span><br><span class="line"><span class="keyword">var</span> encryptR = encryptRSA(e, n, str);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'encryptR: %o'</span>, encryptR);</span><br><span class="line"><span class="keyword">var</span> decryptR = decryptRSA(d, n, encryptR);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'decryptR: %o'</span>, decryptR);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'------------- 私钥加密，公钥解密 -------------'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'str: %o'</span>, str);</span><br><span class="line">encryptR = encryptRSA(d, n, str);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'encryptR: %o'</span>, encryptR);</span><br><span class="line">decryptR = decryptRSA(e, n, encryptR);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'decryptR: %o'</span>, decryptR);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>pagehelper 使用笔记</title>
    <url>/posts/4f0d5500.html</url>
    <content><![CDATA[<blockquote>
<p>主要是记录一些在使用<code>mybatis</code> + <code>pagehelper</code>过程中遇到的一些问题，和要注意的知识点</p>
</blockquote>
<h1 id="PageHelper-分页"><a href="#PageHelper-分页" class="headerlink" title="PageHelper 分页"></a>PageHelper 分页</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取第1页，10条内容，默认查询总数count</span></span><br><span class="line">PageHelper.startPage(<span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取第1页，10条内容，不查询总数count</span></span><br><span class="line">PageHelper.startPage(<span class="number">1</span>, <span class="number">10</span>, <span class="keyword">false</span>);</span><br></pre></td></tr></table></figure>
<a id="more"></a>
]]></content>
      <categories>
        <category>mybatis</category>
      </categories>
      <tags>
        <tag>pagehelper</tag>
      </tags>
  </entry>
  <entry>
    <title>Jwt 工具类</title>
    <url>/posts/d239ec2e.html</url>
    <content><![CDATA[<h1 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.nimbusds<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nimbus-jose-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.crypto.tink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tink<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0-rc2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>nimbus-jose-jwt 使用例子<br><a href="https://connect2id.com/products/nimbus-jose-jwt/examples/jwt-with-rsa-signature" target="_blank" rel="noopener">https://connect2id.com/products/nimbus-jose-jwt/examples/jwt-with-rsa-signature</a></p>
<h1 id="Jws"><a href="#Jws" class="headerlink" title="Jws"></a>Jws</h1><p>JSON Web Signature</p>
<p>对JWT进行签名。给内容加签名的作用前面已经说过了</p>
<ul>
<li>防止JWT内容被篡改，确保内容的完整性</li>
<li>可以验证该JWT确实签发自当前server</li>
</ul>
<h2 id="JwsUtils-工具类"><a href="#JwsUtils-工具类" class="headerlink" title="JwsUtils 工具类"></a>JwsUtils 工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JOSEException;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWSAlgorithm;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWSHeader;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWSSigner;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWSVerifier;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.ECDSASigner;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.ECDSAVerifier;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.Ed25519Signer;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.Ed25519Verifier;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.MACSigner;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.MACVerifier;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.RSASSASigner;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.RSASSAVerifier;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.Curve;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.ECKey;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.JWK;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.JWKSet;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.KeyUse;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.OctetKeyPair;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.OctetSequenceKey;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.RSAKey;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.ECKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.OctetKeyPairGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.OctetSequenceKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.RSAKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jwt.JWTClaimsSet;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jwt.SignedJWT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.MessageFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Jws：jwt sign 和 verify</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#HS256&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#HS384&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#HS512&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#RS256&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#RS384&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#RS512&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#ES256&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#ES384&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#ES512&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#PS256&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#PS384&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#PS512&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#EdDSA&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWSAlgorithm#ES256K&#125;  (deprecated, non-standard)</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwsUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">genJwsAlgorithmKey</span><span class="params">(String keyId, String algorithm)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JwsUtils.genJwsAlgorithmKey(keyId, JWSAlgorithm.parse(algorithm));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">genJwsAlgorithmKey</span><span class="params">(String keyId, JWSAlgorithm jwsAlgorithm)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">        String algorithmKey = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (JWSAlgorithm.Family.HMAC_SHA.contains(jwsAlgorithm)) &#123;</span><br><span class="line">            <span class="keyword">int</span> size = Integer.parseInt(jwsAlgorithm.getName().substring(<span class="number">2</span>));</span><br><span class="line">            OctetSequenceKey key = <span class="keyword">new</span> OctetSequenceKeyGenerator(size)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.SIGNATURE)</span><br><span class="line">                    .algorithm(jwsAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWSAlgorithm.Family.RSA.contains(jwsAlgorithm)) &#123;</span><br><span class="line">            RSAKey key = <span class="keyword">new</span> RSAKeyGenerator(<span class="number">2048</span>)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.SIGNATURE)</span><br><span class="line">                    .algorithm(jwsAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWSAlgorithm.Family.EC.contains(jwsAlgorithm)) &#123;</span><br><span class="line">            Curve curve = Curve.P_256;</span><br><span class="line">            <span class="keyword">if</span> (jwsAlgorithm.equals(JWSAlgorithm.ES384)) &#123;</span><br><span class="line">                curve = Curve.P_384;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwsAlgorithm.equals(JWSAlgorithm.ES512)) &#123;</span><br><span class="line">                curve = Curve.P_521;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwsAlgorithm.equals(JWSAlgorithm.ES256K)) &#123;</span><br><span class="line">                <span class="comment">// 报错</span></span><br><span class="line">                curve = Curve.P_256K;</span><br><span class="line">            &#125;</span><br><span class="line">            ECKey key = <span class="keyword">new</span> ECKeyGenerator(curve)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.SIGNATURE)</span><br><span class="line">                    .algorithm(jwsAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWSAlgorithm.Family.ED.contains(jwsAlgorithm)) &#123;</span><br><span class="line">            OctetKeyPair key = <span class="keyword">new</span> OctetKeyPairGenerator(Curve.Ed25519)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.SIGNATURE)</span><br><span class="line">                    .algorithm(jwsAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (algorithmKey == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(<span class="string">"暂不支持 &#123;0&#125; 签名算法"</span>, jwsAlgorithm));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(MessageFormat.format(<span class="string">"&#123;0&#125; ---&gt; algorithmKey: &#123;1&#125;"</span>, jwsAlgorithm, algorithmKey));</span><br><span class="line">        <span class="keyword">return</span> algorithmKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SignedJWT <span class="title">sign</span><span class="params">(String jwtClaimsSetString, String algorithmKey)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JwsUtils.sign(JWTClaimsSet.parse(jwtClaimsSetString), algorithmKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SignedJWT <span class="title">sign</span><span class="params">(JWTClaimsSet claims, String algorithmKey)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        JWKSet jwkSet = JWKSet.parse(<span class="string">"&#123;\"keys\":["</span> + algorithmKey + <span class="string">"]&#125;"</span>);</span><br><span class="line">        JWK jwk = jwkSet.getKeys().get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> JwsUtils.sign(claims, jwk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SignedJWT <span class="title">sign</span><span class="params">(JWTClaimsSet claims, JWK jwk)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        JWSSigner signer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> OctetSequenceKey) &#123;</span><br><span class="line">            OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">            signer = <span class="keyword">new</span> MACSigner(key);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> RSAKey) &#123;</span><br><span class="line">            RSAKey key = (RSAKey) jwk;</span><br><span class="line">            signer = <span class="keyword">new</span> RSASSASigner(key);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> ECKey) &#123;</span><br><span class="line">            ECKey key = (ECKey) jwk;</span><br><span class="line">            signer = <span class="keyword">new</span> ECDSASigner(key);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> OctetKeyPair) &#123;</span><br><span class="line">            OctetKeyPair key = (OctetKeyPair) jwk;</span><br><span class="line">            signer = <span class="keyword">new</span> Ed25519Signer(key);</span><br><span class="line">        &#125;</span><br><span class="line">        String name = jwk.getAlgorithm().getName();</span><br><span class="line">        <span class="keyword">if</span> (signer == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(<span class="string">"签名器为空，或不支持 &#123;0&#125; 签名算法"</span>, name));</span><br><span class="line">        &#125;</span><br><span class="line">        SignedJWT signedJwt = <span class="keyword">new</span> SignedJWT(<span class="keyword">new</span> JWSHeader(JWSAlgorithm.parse(name)), claims);</span><br><span class="line">        signedJwt.sign(signer);</span><br><span class="line">        <span class="keyword">return</span> signedJwt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">serialize</span><span class="params">(String jwtClaimsSetString, String algorithmKey)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JwsUtils.serialize(JWTClaimsSet.parse(jwtClaimsSetString), algorithmKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">serialize</span><span class="params">(JWTClaimsSet claims, String algorithmKey)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        JWKSet jwkSet = JWKSet.parse(<span class="string">"&#123;\"keys\":["</span> + algorithmKey + <span class="string">"]&#125;"</span>);</span><br><span class="line">        JWK jwk = jwkSet.getKeys().get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> JwsUtils.serialize(claims, jwk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">serialize</span><span class="params">(JWTClaimsSet claims, JWK jwk)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        SignedJWT signedJwt = JwsUtils.sign(claims, jwk);</span><br><span class="line">        <span class="keyword">return</span> signedJwt.serialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String jwsString, String algorithmKey)</span> <span class="keyword">throws</span> ParseException, JOSEException </span>&#123;</span><br><span class="line">        JWKSet jwkSet = JWKSet.parse(<span class="string">"&#123;\"keys\":["</span> + algorithmKey + <span class="string">"]&#125;"</span>);</span><br><span class="line">        JWK jwk = jwkSet.getKeys().get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> JwsUtils.verify(SignedJWT.parse(jwsString), jwk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(SignedJWT signedJwt, JWK jwk)</span> <span class="keyword">throws</span> ParseException, JOSEException </span>&#123;</span><br><span class="line">        JWSVerifier verifier = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> OctetSequenceKey) &#123;</span><br><span class="line">            OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">            verifier = <span class="keyword">new</span> MACVerifier(key);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> RSAKey) &#123;</span><br><span class="line">            RSAKey key = (RSAKey) jwk;</span><br><span class="line">            verifier = <span class="keyword">new</span> RSASSAVerifier(key);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> ECKey) &#123;</span><br><span class="line">            ECKey key = (ECKey) jwk;</span><br><span class="line">            verifier = <span class="keyword">new</span> ECDSAVerifier(key);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (jwk <span class="keyword">instanceof</span> OctetKeyPair) &#123;</span><br><span class="line">            OctetKeyPair key = (OctetKeyPair) jwk;</span><br><span class="line">            verifier = <span class="keyword">new</span> Ed25519Verifier(key.toPublicJWK());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (verifier == <span class="keyword">null</span>) &#123;</span><br><span class="line">            String name = jwk.getAlgorithm().getName();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(<span class="string">"验证器为空，或不支持 &#123;0&#125; 签名算法"</span>, name));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> signedJwt.verify(verifier);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JwsUtilsTest-测试类"><a href="#JwsUtilsTest-测试类" class="headerlink" title="JwsUtilsTest 测试类"></a>JwsUtilsTest 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JOSEException;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWSAlgorithm;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jwt.JWTClaimsSet;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.MessageFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwsUtilsTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Prepare JWT with claims set</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> JWTClaimsSet claims = <span class="keyword">new</span> JWTClaimsSet.Builder()</span><br><span class="line">            .subject(<span class="string">"subject"</span>)</span><br><span class="line">            .issuer(<span class="string">"https://jwt.io"</span>)</span><br><span class="line">            .expirationTime(<span class="keyword">new</span> Date(System.currentTimeMillis() + <span class="number">60</span> * <span class="number">1000</span>))</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;JWSAlgorithm&gt; JWS_ALGORITHM = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        JWS_ALGORITHM.addAll(JWSAlgorithm.Family.HMAC_SHA);</span><br><span class="line">        JWS_ALGORITHM.addAll(JWSAlgorithm.Family.RSA);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// JWS_ALGORITHM.addAll(JWSAlgorithm.Family.EC);</span></span><br><span class="line">        JWS_ALGORITHM.add(JWSAlgorithm.ES256);</span><br><span class="line">        JWS_ALGORITHM.add(JWSAlgorithm.ES384);</span><br><span class="line">        JWS_ALGORITHM.add(JWSAlgorithm.ES512);</span><br><span class="line">        <span class="comment">// JWS_ALGORITHM.add(JWSAlgorithm.ES256K); // 报错</span></span><br><span class="line"></span><br><span class="line">        JWS_ALGORITHM.addAll(JWSAlgorithm.Family.ED);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAll</span><span class="params">()</span> <span class="keyword">throws</span> ParseException, JOSEException </span>&#123;</span><br><span class="line">        String keyId = <span class="string">"ssfds38038"</span>;</span><br><span class="line">        <span class="keyword">for</span> (JWSAlgorithm jwsAlgorithm : JWS_ALGORITHM) &#123;</span><br><span class="line">            String algorithmKey = JwsUtils.genJwsAlgorithmKey(keyId, jwsAlgorithm);</span><br><span class="line">            String jwsString = JwsUtils.serialize(claims, algorithmKey);</span><br><span class="line">            <span class="keyword">boolean</span> verify = JwsUtils.verify(jwsString, algorithmKey);</span><br><span class="line">            System.out.println(MessageFormat.format(</span><br><span class="line">                    <span class="string">"&#123;0&#125; ---&gt; verify: &#123;1&#125;, jwsString: &#123;2&#125;"</span>, jwsAlgorithm.getName(), verify, jwsString));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Test</span></span><br><span class="line">    <span class="comment">// public void macs() throws JOSEException, ParseException &#123;</span></span><br><span class="line">    <span class="comment">//     // // Generate random 256-bit (32-byte) shared secret</span></span><br><span class="line">    <span class="comment">//     // SecureRandom random = new SecureRandom();</span></span><br><span class="line">    <span class="comment">//     // byte[] sharedSecret = new byte[32];</span></span><br><span class="line">    <span class="comment">//     // random.nextBytes(sharedSecret);</span></span><br><span class="line">    <span class="comment">//     // System.out.println(Arrays.toString(sharedSecret));</span></span><br><span class="line">    <span class="comment">//     // String sharedSecret = "ssddSFFsdfsdfssddSFFsdfsdf123456";</span></span><br><span class="line">    <span class="comment">//     // String payload = "Hello, world!";</span></span><br><span class="line">    <span class="comment">//     // System.out.println(Arrays.toString(sharedSecret.getBytes(StandardCharsets.UTF_8)));</span></span><br><span class="line">    <span class="comment">//     // // Create HMAC signer</span></span><br><span class="line">    <span class="comment">//     // JWSSigner signer = new MACSigner(sharedSecret);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     OctetSequenceKey octKey = new OctetSequenceKeyGenerator(2048)</span></span><br><span class="line">    <span class="comment">//             .keyID("dfsfs2342342")</span></span><br><span class="line">    <span class="comment">//             // .keyUse(KeyUse.SIGNATURE)</span></span><br><span class="line">    <span class="comment">//             .algorithm(JWSAlgorithm.HS256)</span></span><br><span class="line">    <span class="comment">//             .generate();</span></span><br><span class="line">    <span class="comment">//     System.out.println(octKey.toJSONString());</span></span><br><span class="line">    <span class="comment">//     // Create HMAC signer</span></span><br><span class="line">    <span class="comment">//     JWSSigner signer = new MACSigner(octKey);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Prepare JWS object with "Hello, world!" payload</span></span><br><span class="line">    <span class="comment">//     SignedJWT signedJwt = new SignedJWT(new JWSHeader(JWSAlgorithm.HS256), claims);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Apply the HMAC</span></span><br><span class="line">    <span class="comment">//     signedJwt.sign(signer);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // To serialize to compact form, produces something like</span></span><br><span class="line">    <span class="comment">//     String s = signedJwt.serialize();</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 加载: " + s);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // To parse the JWS and verify it, e.g. on client-side</span></span><br><span class="line">    <span class="comment">//     signedJwt = SignedJWT.parse(s);</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Header）: " + signedJwt.getHeader());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Payload）: " + signedJwt.getPayload());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Signature）: " + signedJwt.getSignature());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（State）: " + signedJwt.getState());</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     JWSVerifier verifier = new MACVerifier(octKey);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     System.out.println("是否验证通过：" + signedJwt.verify(verifier));</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// @Test</span></span><br><span class="line">    <span class="comment">// public void rsa() throws JOSEException, ParseException &#123;</span></span><br><span class="line">    <span class="comment">//     // RSA signatures require a public and private RSA key pair, the public key</span></span><br><span class="line">    <span class="comment">//     // must be made known to the JWS recipient in order to verify the signatures</span></span><br><span class="line">    <span class="comment">//     RSAKey rsaKey = new RSAKeyGenerator(2048)</span></span><br><span class="line">    <span class="comment">//             .keyID("oikleqrk46454jh23k4j")</span></span><br><span class="line">    <span class="comment">//             .generate();</span></span><br><span class="line">    <span class="comment">//     RSAKey publicJwk = rsaKey.toPublicJWK();</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Create RSA-signer with the private key</span></span><br><span class="line">    <span class="comment">//     JWSSigner signer = new RSASSASigner(rsaKey);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     SignedJWT signedJwt = new SignedJWT(</span></span><br><span class="line">    <span class="comment">//             new JWSHeader.Builder(JWSAlgorithm.RS512)</span></span><br><span class="line">    <span class="comment">//                     // .keyID(rsaKey.getKeyID())</span></span><br><span class="line">    <span class="comment">//                     .build(), claims);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Compute the RSA signature</span></span><br><span class="line">    <span class="comment">//     signedJwt.sign(signer);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     String s = signedJwt.serialize();</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 加载: " + s);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // On the consumer side, parse the JWS and verify its RSA signature</span></span><br><span class="line">    <span class="comment">//     signedJwt = SignedJWT.parse(s);</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Header）: " + signedJwt.getHeader());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Payload）: " + signedJwt.getPayload());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Signature）: " + signedJwt.getSignature());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（State）: " + signedJwt.getState());</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     JWSVerifier verifier = new RSASSAVerifier(publicJwk);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     System.out.println("是否验证通过：" + signedJwt.verify(verifier));</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// @Test</span></span><br><span class="line">    <span class="comment">// public void ec() throws JOSEException, ParseException &#123;</span></span><br><span class="line">    <span class="comment">//     // RSA signatures require a public and private RSA key pair, the public key</span></span><br><span class="line">    <span class="comment">//     // must be made known to the JWS recipient in order to verify the signatures</span></span><br><span class="line">    <span class="comment">//     ECKey ecKey = new ECKeyGenerator(Curve.P_256)</span></span><br><span class="line">    <span class="comment">//             .keyID("shfje576463341fdfg")</span></span><br><span class="line">    <span class="comment">//             .generate();</span></span><br><span class="line">    <span class="comment">//     System.out.println(ecKey.toJSONString());</span></span><br><span class="line">    <span class="comment">//     ECKey publicJwk = ecKey.toPublicJWK();</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Create RSA-signer with the private key</span></span><br><span class="line">    <span class="comment">//     JWSSigner signer = new ECDSASigner(ecKey);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     SignedJWT signedJwt = new SignedJWT(</span></span><br><span class="line">    <span class="comment">//             new JWSHeader.Builder(JWSAlgorithm.ES256)</span></span><br><span class="line">    <span class="comment">//                     // .keyID(ecKey.getKeyID())</span></span><br><span class="line">    <span class="comment">//                     .build(), claims);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Compute the RSA signature</span></span><br><span class="line">    <span class="comment">//     signedJwt.sign(signer);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     String s = signedJwt.serialize();</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 加载: " + s);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // On the consumer side, parse the JWS and verify its RSA signature</span></span><br><span class="line">    <span class="comment">//     signedJwt = SignedJWT.parse(s);</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Header）: " + signedJwt.getHeader());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Payload）: " + signedJwt.getPayload());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Signature）: " + signedJwt.getSignature());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（State）: " + signedJwt.getState());</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     JWSVerifier verifier = new ECDSAVerifier(publicJwk);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     System.out.println("是否验证通过：" + signedJwt.verify(verifier));</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// @Test</span></span><br><span class="line">    <span class="comment">// public void ed() throws JOSEException, ParseException &#123;</span></span><br><span class="line">    <span class="comment">//     // RSA signatures require a public and private RSA key pair, the public key</span></span><br><span class="line">    <span class="comment">//     // must be made known to the JWS recipient in order to verify the signatures</span></span><br><span class="line">    <span class="comment">//     OctetKeyPair edKey = new OctetKeyPairGenerator(Curve.Ed25519)</span></span><br><span class="line">    <span class="comment">//             .keyID("dfsfs2342342")</span></span><br><span class="line">    <span class="comment">//             .generate();</span></span><br><span class="line">    <span class="comment">//     System.out.println(edKey.toJSONString());</span></span><br><span class="line">    <span class="comment">//     OctetKeyPair publicJwk = edKey.toPublicJWK();</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Create RSA-signer with the private key</span></span><br><span class="line">    <span class="comment">//     JWSSigner signer = new Ed25519Signer(edKey);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     SignedJWT signedJwt = new SignedJWT(</span></span><br><span class="line">    <span class="comment">//             new JWSHeader.Builder(JWSAlgorithm.EdDSA)</span></span><br><span class="line">    <span class="comment">//                     // .keyID(ecKey.getKeyID())</span></span><br><span class="line">    <span class="comment">//                     .build(), claims);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // Compute the RSA signature</span></span><br><span class="line">    <span class="comment">//     signedJwt.sign(signer);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     String s = signedJwt.serialize();</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 加载: " + s);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     // On the consumer side, parse the JWS and verify its RSA signature</span></span><br><span class="line">    <span class="comment">//     signedJwt = SignedJWT.parse(s);</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Header）: " + signedJwt.getHeader());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Payload）: " + signedJwt.getPayload());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（Signature）: " + signedJwt.getSignature());</span></span><br><span class="line">    <span class="comment">//     System.out.println("jws 解析（State）: " + signedJwt.getState());</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     JWSVerifier verifier = new Ed25519Verifier(publicJwk);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     System.out.println("是否验证通过：" + signedJwt.verify(verifier));</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Jwe"><a href="#Jwe" class="headerlink" title="Jwe"></a>Jwe</h1><p>JWS是利用签名保证数据内容不会被篡改，但是最终的base64解码之后还是可以看到payload其中的内容。就实际运用中来说，我们的JWT中一般不存放铭感信息。如果搭配OAuth2.0来的话，可能有scope等内容，但其实这些内容被解码之后对我们的影响也几乎没有。</p>
<p>不过，如果想对payload的内容加密，使得数据不会被解码出来，那么这时候就需要JWE-JSON Web Encryption。</p>
<p>这里再提醒一下：</p>
<ul>
<li>Jws是对内容进行签名但是不加密</li>
<li>Jwe是对内容进行加密但是不签名</li>
<li>Jws 和 Jwe 可以结合使用，先签名再加密，然后先解密再验证签名</li>
</ul>
<h2 id="JweUtils-工具类"><a href="#JweUtils-工具类" class="headerlink" title="JweUtils 工具类"></a>JweUtils 工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.nimbusds.jose.EncryptionMethod;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JOSEException;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWEAlgorithm;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWEDecrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWEEncrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWEHeader;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWEObject;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.Payload;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.AESDecrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.AESEncrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.DirectDecrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.DirectEncrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.ECDHDecrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.ECDHEncrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.PasswordBasedDecrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.PasswordBasedEncrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.RSADecrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.crypto.RSAEncrypter;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.Curve;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.ECKey;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.JWK;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.JWKSet;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.KeyUse;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.OctetSequenceKey;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.RSAKey;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.ECKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.OctetSequenceKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.gen.RSAKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jwt.SignedJWT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.MessageFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Jwe：jwt encrypt 和 decrypt</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 加密算法</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#DIR&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#RSA_OAEP_256&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#RSA_OAEP&#125; (deprecated)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#RSA1_5&#125; (deprecated)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#A128KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#A192KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#A256KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#A128GCMKW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#A192GCMKW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#A256GCMKW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#ECDH_ES&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#ECDH_ES_A128KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#ECDH_ES_A192KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#ECDH_ES_A256KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#PBES2_HS256_A128KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#PBES2_HS384_A192KW&#125;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.JWEAlgorithm#PBES2_HS512_A256KW&#125;</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 加密方法</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A128CBC_HS256&#125; (requires 256 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A192CBC_HS384&#125; (requires 384 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A256CBC_HS512&#125; (requires 512 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A128GCM&#125; (requires 128 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A192GCM&#125; (requires 192 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A256GCM&#125; (requires 256 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A128CBC_HS256_DEPRECATED&#125; (deprecated, requires 256 bit key)</span></span><br><span class="line"><span class="comment"> *     &lt;li&gt;&#123;<span class="doctag">@link</span> com.nimbusds.jose.EncryptionMethod#A256CBC_HS512_DEPRECATED&#125; (deprecated, requires 512 bit key)</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JweUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">genJweAlgorithmKey</span><span class="params">(String keyId, String jweAlgorithmName, String encryptionMethod)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JweUtils.genJweAlgorithmKey(keyId, JWEAlgorithm.parse(jweAlgorithmName), EncryptionMethod.parse(encryptionMethod));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">genJweAlgorithmKey</span><span class="params">(String keyId, JWEAlgorithm jweAlgorithm, EncryptionMethod encryptionMethod)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">        String algorithmKey = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (jweAlgorithm.equals(JWEAlgorithm.DIR)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (encryptionMethod.equals(EncryptionMethod.A128CBC_HS256_DEPRECATED)</span><br><span class="line">                    || encryptionMethod.equals(EncryptionMethod.A256CBC_HS512_DEPRECATED)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(</span><br><span class="line">                        <span class="string">"&#123;0&#125; 加解密算法暂不支持 &#123;1&#125; 加密方法"</span>, jweAlgorithm.getName(), encryptionMethod.getName()));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                <span class="comment">// EncryptionMethod.A128CBC_HS256 (requires 256 bit key)</span></span><br><span class="line">                    encryptionMethod.equals(EncryptionMethod.A128CBC_HS256)</span><br><span class="line">                            <span class="comment">// EncryptionMethod.A256GCM (requires 256 bit key)</span></span><br><span class="line">                            || encryptionMethod.equals(EncryptionMethod.A256GCM)</span><br><span class="line">                            <span class="comment">// EncryptionMethod.A128CBC_HS256_DEPRECATED (requires 256 bit key)</span></span><br><span class="line">                            || encryptionMethod.equals(EncryptionMethod.A128CBC_HS256_DEPRECATED)) &#123;</span><br><span class="line">                size = <span class="number">256</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (encryptionMethod.equals(EncryptionMethod.A192CBC_HS384)) &#123;</span><br><span class="line">                <span class="comment">// EncryptionMethod.A192CBC_HS384 (requires 384 bit key)</span></span><br><span class="line">                size = <span class="number">384</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">                <span class="comment">// EncryptionMethod.A256CBC_HS512 (requires 512 bit key)</span></span><br><span class="line">                    encryptionMethod.equals(EncryptionMethod.A256CBC_HS512)</span><br><span class="line">                            <span class="comment">// EncryptionMethod.A256CBC_HS512_DEPRECATED (requires 512 bit key)</span></span><br><span class="line">                            || encryptionMethod.equals(EncryptionMethod.A256CBC_HS512_DEPRECATED)) &#123;</span><br><span class="line">                size = <span class="number">512</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (encryptionMethod.equals(EncryptionMethod.A128GCM)) &#123;</span><br><span class="line">                <span class="comment">// EncryptionMethod.A128GCM (requires 128 bit key)</span></span><br><span class="line">                size = <span class="number">128</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (encryptionMethod.equals(EncryptionMethod.A192GCM)) &#123;</span><br><span class="line">                <span class="comment">// EncryptionMethod.A192GCM (requires 192 bit key)</span></span><br><span class="line">                size = <span class="number">192</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// The Content Encryption Key length must be 128 bits (16 bytes), 192 bits (24 bytes), 256 bits (32 bytes), 384 bits (48 bytes) or 512 bites (64 bytes)</span></span><br><span class="line">            OctetSequenceKey key = <span class="keyword">new</span> OctetSequenceKeyGenerator(size)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.ENCRYPTION)</span><br><span class="line">                    .algorithm(jweAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.RSA.contains(jweAlgorithm)) &#123;</span><br><span class="line">            RSAKey key = <span class="keyword">new</span> RSAKeyGenerator(<span class="number">2048</span>)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.ENCRYPTION)</span><br><span class="line">                    .algorithm(jweAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.AES_KW.contains(jweAlgorithm)) &#123;</span><br><span class="line">            <span class="keyword">int</span> size = Integer.parseInt(jweAlgorithm.getName().substring(<span class="number">1</span>, <span class="number">4</span>));</span><br><span class="line">            <span class="comment">// The Key Encryption Key length must be 128 bits (16 bytes), 192 bits (24 bytes) or 256 bits (32 bytes)</span></span><br><span class="line">            OctetSequenceKey key = <span class="keyword">new</span> OctetSequenceKeyGenerator(size)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.ENCRYPTION)</span><br><span class="line">                    .algorithm(jweAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.AES_GCM_KW.contains(jweAlgorithm)) &#123;</span><br><span class="line">            <span class="keyword">int</span> size = Integer.parseInt(jweAlgorithm.getName().substring(<span class="number">1</span>, <span class="number">4</span>));</span><br><span class="line">            <span class="comment">// The Key Encryption Key length must be 128 bits (16 bytes), 192 bits (24 bytes) or 256 bits (32 bytes)</span></span><br><span class="line">            OctetSequenceKey key = <span class="keyword">new</span> OctetSequenceKeyGenerator(size)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.ENCRYPTION)</span><br><span class="line">                    .algorithm(jweAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.ECDH_ES.contains(jweAlgorithm)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (jweAlgorithm.equals(JWEAlgorithm.ECDH_ES)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (encryptionMethod.equals(EncryptionMethod.A128CBC_HS256_DEPRECATED)</span><br><span class="line">                        || encryptionMethod.equals(EncryptionMethod.A256CBC_HS512_DEPRECATED)) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(</span><br><span class="line">                            <span class="string">"&#123;0&#125; 加解密算法暂不支持 &#123;1&#125; 加密方法"</span>, jweAlgorithm.getName(), encryptionMethod.getName()));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Curve curve = Curve.P_256;</span><br><span class="line">            ECKey key = <span class="keyword">new</span> ECKeyGenerator(curve)</span><br><span class="line">                    .keyID(keyId)</span><br><span class="line">                    .keyUse(KeyUse.ENCRYPTION)</span><br><span class="line">                    .algorithm(jweAlgorithm)</span><br><span class="line">                    .generate();</span><br><span class="line">            algorithmKey = key.toJSONString();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.PBES2.contains(jweAlgorithm)) &#123;</span><br><span class="line">            <span class="comment">// OctetSequenceKey key = new OctetSequenceKeyGenerator(2048)</span></span><br><span class="line">            <span class="comment">//         .keyID(keyId)</span></span><br><span class="line">            <span class="comment">//         .keyUse(KeyUse.ENCRYPTION)</span></span><br><span class="line">            <span class="comment">//         .algorithm(jweAlgorithm)</span></span><br><span class="line">            <span class="comment">//         .generate();</span></span><br><span class="line">            <span class="comment">// algorithmKey = key.toJSONString();</span></span><br><span class="line">            algorithmKey = UUID.generate().toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (algorithmKey == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(<span class="string">"暂不支持 &#123;0&#125; 加解密算法"</span>, jweAlgorithm));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(MessageFormat.format(<span class="string">"&#123;0&#125; ---&gt; algorithmKey: &#123;1&#125;"</span>, jweAlgorithm, algorithmKey));</span><br><span class="line">        <span class="keyword">return</span> algorithmKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JWEObject <span class="title">encrypt</span><span class="params">(String jwsString, String jweAlgorithmName, String algorithmKey, String encryptionMethod)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JweUtils.encrypt(SignedJWT.parse(jwsString), JWEAlgorithm.parse(jweAlgorithmName), algorithmKey, EncryptionMethod.parse(encryptionMethod));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JWEObject <span class="title">encrypt</span><span class="params">(SignedJWT signedJwt, JWEAlgorithm jweAlgorithm, String algorithmKey, EncryptionMethod encryptionMethod)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        JWEEncrypter jweEncrypter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (JWEAlgorithm.Family.PBES2.contains(jweAlgorithm)) &#123;</span><br><span class="line">            jweEncrypter = <span class="keyword">new</span> PasswordBasedEncrypter(algorithmKey, <span class="number">8</span>, <span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            JWKSet jwkSet = JWKSet.parse(<span class="string">"&#123;\"keys\":["</span> + algorithmKey + <span class="string">"]&#125;"</span>);</span><br><span class="line">            JWK jwk = jwkSet.getKeys().get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (jweAlgorithm.equals(JWEAlgorithm.DIR)) &#123;</span><br><span class="line">                OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">                jweEncrypter = <span class="keyword">new</span> DirectEncrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.RSA.contains(jweAlgorithm)) &#123;</span><br><span class="line">                RSAKey key = (RSAKey) jwk;</span><br><span class="line">                jweEncrypter = <span class="keyword">new</span> RSAEncrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.AES_KW.contains(jweAlgorithm)) &#123;</span><br><span class="line">                OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">                jweEncrypter = <span class="keyword">new</span> AESEncrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.AES_GCM_KW.contains(jweAlgorithm)) &#123;</span><br><span class="line">                OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">                jweEncrypter = <span class="keyword">new</span> AESEncrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.ECDH_ES.contains(jweAlgorithm)) &#123;</span><br><span class="line">                ECKey key = (ECKey) jwk;</span><br><span class="line">                jweEncrypter = <span class="keyword">new</span> ECDHEncrypter(key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (jweEncrypter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(<span class="string">"暂不支持 &#123;0&#125; 加解密算法"</span>, jweAlgorithm));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Create JWE object with signed JWT as payload</span></span><br><span class="line">        JWEObject jweObject = <span class="keyword">new</span> JWEObject(</span><br><span class="line">                <span class="comment">// new JWEHeader.Builder(JWEAlgorithm.RSA_OAEP_256, EncryptionMethod.A256GCM)</span></span><br><span class="line">                <span class="keyword">new</span> JWEHeader.Builder(jweAlgorithm, encryptionMethod)</span><br><span class="line">                        <span class="comment">// required to indicate nested JWT</span></span><br><span class="line">                        .contentType(<span class="string">"JWT"</span>)</span><br><span class="line">                        .build(), <span class="keyword">new</span> Payload(signedJwt));</span><br><span class="line">        jweObject.encrypt(jweEncrypter);</span><br><span class="line">        <span class="keyword">return</span> jweObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">serialize</span><span class="params">(String jwsString, String jweAlgorithmName, String algorithmKey, String encryptionMethod)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        JWEObject encrypt = JweUtils.encrypt(jwsString, jweAlgorithmName, algorithmKey, encryptionMethod);</span><br><span class="line">        <span class="keyword">return</span> encrypt.serialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">serialize</span><span class="params">(SignedJWT signedJwt, JWEAlgorithm jweAlgorithm, String algorithmKey, EncryptionMethod encryptionMethod)</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        JWEObject encrypt = JweUtils.encrypt(signedJwt, jweAlgorithm, algorithmKey, encryptionMethod);</span><br><span class="line">        <span class="keyword">return</span> encrypt.serialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String jweString, String jweAlgorithmName, String algorithmKey)</span> <span class="keyword">throws</span> ParseException, JOSEException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JweUtils.decrypt(JWEObject.parse(jweString), JWEAlgorithm.parse(jweAlgorithmName), algorithmKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(JWEObject jweObject, JWEAlgorithm jweAlgorithm, String algorithmKey)</span> <span class="keyword">throws</span> ParseException, JOSEException </span>&#123;</span><br><span class="line">        JWEDecrypter jweDecrypter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (JWEAlgorithm.Family.PBES2.contains(jweAlgorithm)) &#123;</span><br><span class="line">            jweDecrypter = <span class="keyword">new</span> PasswordBasedDecrypter(algorithmKey);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            JWKSet jwkSet = JWKSet.parse(<span class="string">"&#123;\"keys\":["</span> + algorithmKey + <span class="string">"]&#125;"</span>);</span><br><span class="line">            JWK jwk = jwkSet.getKeys().get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (jweAlgorithm.equals(JWEAlgorithm.DIR)) &#123;</span><br><span class="line">                OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">                jweDecrypter = <span class="keyword">new</span> DirectDecrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.RSA.contains(jweAlgorithm)) &#123;</span><br><span class="line">                RSAKey key = (RSAKey) jwk;</span><br><span class="line">                jweDecrypter = <span class="keyword">new</span> RSADecrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.AES_KW.contains(jweAlgorithm)) &#123;</span><br><span class="line">                OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">                jweDecrypter = <span class="keyword">new</span> AESDecrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.AES_GCM_KW.contains(jweAlgorithm)) &#123;</span><br><span class="line">                OctetSequenceKey key = (OctetSequenceKey) jwk;</span><br><span class="line">                jweDecrypter = <span class="keyword">new</span> AESDecrypter(key);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (JWEAlgorithm.Family.ECDH_ES.contains(jweAlgorithm)) &#123;</span><br><span class="line">                ECKey key = (ECKey) jwk;</span><br><span class="line">                jweDecrypter = <span class="keyword">new</span> ECDHDecrypter(key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (jweDecrypter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(MessageFormat.format(<span class="string">"暂不支持 &#123;0&#125; 加解密算法"</span>, jweAlgorithm));</span><br><span class="line">        &#125;</span><br><span class="line">        jweObject.decrypt(jweDecrypter);</span><br><span class="line">        <span class="keyword">return</span> jweObject.getPayload().toSignedJWT().serialize();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JweUtilsTest-测试类"><a href="#JweUtilsTest-测试类" class="headerlink" title="JweUtilsTest 测试类"></a>JweUtilsTest 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.nimbusds.jose.EncryptionMethod;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JOSEException;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWEAlgorithm;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.JWSAlgorithm;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jwt.JWTClaimsSet;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jwt.SignedJWT;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.MessageFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JweUtilsTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_ID = <span class="string">"1234567890abcdef"</span>;</span><br><span class="line">    <span class="comment">// Prepare JWT with claims set</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> JWTClaimsSet claims = <span class="keyword">new</span> JWTClaimsSet.Builder()</span><br><span class="line">            .subject(<span class="string">"subject"</span>)</span><br><span class="line">            .issuer(<span class="string">"https://jwt.io"</span>)</span><br><span class="line">            .expirationTime(<span class="keyword">new</span> Date(System.currentTimeMillis() + <span class="number">60</span> * <span class="number">1000</span>))</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;JWEAlgorithm&gt; JWE_ALGORITHMS = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;EncryptionMethod&gt; METHODS = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String jwsAlgorithmKey;</span><br><span class="line">    <span class="keyword">private</span> String jwsString;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 加密算法</span></span><br><span class="line">        JWE_ALGORITHMS.add(JWEAlgorithm.DIR);</span><br><span class="line">        JWE_ALGORITHMS.addAll(JWEAlgorithm.Family.RSA);</span><br><span class="line">        JWE_ALGORITHMS.addAll(JWEAlgorithm.Family.AES_KW);</span><br><span class="line">        JWE_ALGORITHMS.addAll(JWEAlgorithm.Family.AES_GCM_KW);</span><br><span class="line">        JWE_ALGORITHMS.addAll(JWEAlgorithm.Family.ECDH_ES);</span><br><span class="line">        JWE_ALGORITHMS.addAll(JWEAlgorithm.Family.PBES2);</span><br><span class="line">        <span class="comment">// 加密方法</span></span><br><span class="line">        METHODS.add(EncryptionMethod.A128CBC_HS256);</span><br><span class="line">        METHODS.add(EncryptionMethod.A192CBC_HS384);</span><br><span class="line">        METHODS.add(EncryptionMethod.A256CBC_HS512);</span><br><span class="line">        METHODS.add(EncryptionMethod.A128GCM);</span><br><span class="line">        METHODS.add(EncryptionMethod.A192GCM);</span><br><span class="line">        METHODS.add(EncryptionMethod.A256GCM);</span><br><span class="line">        <span class="comment">// 已经废弃</span></span><br><span class="line">        <span class="comment">// METHODS.add(EncryptionMethod.A128CBC_HS256_DEPRECATED);</span></span><br><span class="line">        <span class="comment">// METHODS.add(EncryptionMethod.A256CBC_HS512_DEPRECATED);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sign</span><span class="params">()</span> <span class="keyword">throws</span> JOSEException, ParseException </span>&#123;</span><br><span class="line">        String jwsAlgorithmName = JWSAlgorithm.HS256.getName();</span><br><span class="line">        jwsAlgorithmKey = JwsUtils.genJwsAlgorithmKey(KEY_ID, jwsAlgorithmName);</span><br><span class="line">        SignedJWT signedJwt = JwsUtils.sign(claims, jwsAlgorithmKey);</span><br><span class="line">        jwsString = signedJwt.serialize();</span><br><span class="line">        <span class="keyword">boolean</span> verify = JwsUtils.verify(jwsString, jwsAlgorithmKey);</span><br><span class="line">        System.out.println(MessageFormat.format(<span class="string">"&#123;0&#125; ---&gt; verify: &#123;1&#125;, jwsString: &#123;2&#125;"</span>, jwsAlgorithmName, verify, jwsString));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String id = <span class="string">"sdfsfsdf"</span>;</span><br><span class="line">        <span class="keyword">for</span> (JWEAlgorithm jweAlgorithm : JWE_ALGORITHMS) &#123;</span><br><span class="line">            String algorithm = jweAlgorithm.getName();</span><br><span class="line">            <span class="keyword">for</span> (EncryptionMethod method : METHODS) &#123;</span><br><span class="line">                System.out.println(<span class="string">"---------------------------------------------------------------------------------"</span>);</span><br><span class="line">                String encryptionMethod = method.getName();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// jwe 加解密</span></span><br><span class="line">                    String algorithmKey = JweUtils.genJweAlgorithmKey(id, algorithm, encryptionMethod);</span><br><span class="line">                    String jweString = JweUtils.serialize(jwsString, algorithm, algorithmKey, encryptionMethod);</span><br><span class="line">                    String decrypt = JweUtils.decrypt(jweString, algorithm, algorithmKey);</span><br><span class="line">                    System.out.println(MessageFormat.format(</span><br><span class="line">                            <span class="string">"&#123;0&#125;.&#123;1&#125; ---&gt; jweString: &#123;2&#125;"</span>, algorithm, encryptionMethod, jweString));</span><br><span class="line">                    System.out.println(MessageFormat.format(</span><br><span class="line">                            <span class="string">"&#123;0&#125;.&#123;1&#125; ---&gt; jwsString: &#123;2&#125;"</span>, algorithm, encryptionMethod, decrypt));</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// jws 验证签名</span></span><br><span class="line">                    <span class="keyword">boolean</span> verify = JwsUtils.verify(decrypt, jwsAlgorithmKey);</span><br><span class="line">                    System.out.println(MessageFormat.format(</span><br><span class="line">                            <span class="string">"&#123;0&#125;.&#123;1&#125; ---&gt; verify: &#123;2&#125;"</span>, algorithm, encryptionMethod, verify));</span><br><span class="line">                    SignedJWT signedJwt = SignedJWT.parse(decrypt);</span><br><span class="line">                    System.out.println(MessageFormat.format(</span><br><span class="line">                            <span class="string">"&#123;0&#125;.&#123;1&#125; ---&gt; jwtClaimsSet: &#123;2&#125;"</span>, algorithm, encryptionMethod, signedJwt.getJWTClaimsSet().toString()));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    System.err.println(MessageFormat.format(</span><br><span class="line">                            <span class="string">"&#123;0&#125;.&#123;1&#125; ---&gt; messge: &#123;2&#125;"</span>, algorithm, encryptionMethod, e.getMessage()));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>CommonsRequestLoggingFilter</title>
    <url>/posts/233e0cfa.html</url>
    <content><![CDATA[<h1 id="注册-bean"><a href="#注册-bean" class="headerlink" title="注册 bean"></a>注册 bean</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CommonsRequestLoggingFilter <span class="title">commonsRequestLoggingFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line">    CommonsRequestLoggingFilter filter = <span class="keyword">new</span> CommonsRequestLoggingFilter();</span><br><span class="line">    filter.setIncludeClientInfo(<span class="keyword">true</span>);</span><br><span class="line">    filter.setIncludeQueryString(<span class="keyword">true</span>);</span><br><span class="line">    filter.setIncludePayload(<span class="keyword">true</span>);</span><br><span class="line">    filter.setIncludeHeaders(<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> filter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="在logback-xml配置"><a href="#在logback-xml配置" class="headerlink" title="在logback.xml配置"></a>在logback.xml配置</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework.web.filter.CommonsRequestLoggingFilter"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="日志打印"><a href="#日志打印" class="headerlink" title="日志打印"></a>日志打印</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">19-05-06 14:37:23 DEBUG o.s.w.f.CommonsRequestLoggingFilter.beforeRequest(47) | Before request [uri=/szim/triple.do?action=getJsonUserFeeInfo&amp;encrypt=TJ943tVLlkJmwouCRnJgj6aDOGqm5VBxeLiNqpcIOdUHaByb%2FJ0RK%2FFQvzJcK3TL0aPmKvSdKhNL%2FUl6ZvHznEFR2ohRKF8HTxwaqss9KCZ66AQ4Dx60ZBWrXdju2nlIohMo9O2d0Ia5Bvl6HEpmhQ%3D%3D&amp;ak=0f882bab896ca50e10ef389f12c279c195d7c1810dc3e9e55db6a0057335f148b61761ab383957431d94d5e9982cff0d389021fdf17e25a5843f96cd0a448ef22e47d6abae9bacb5cc7e1cb2ba30a7c0b08d423a5fcb644e2e9392d0a685d0f73a416470d9a074eff6582ad7d05fb2eadb925d798093519c6f1351455dc84296;client=0:0:0:0:0:0:0:1;session=B6FBF9F2B61AA8F5C715A90C2FB1D328;headers=&#123;host=[localhost:8080], connection=[keep-alive], pragma=[no-cache], cache-control=[no-cache], accept=[application/json, text/javascript, */*; q=0.01], dnt=[1], x-requested-with=[XMLHttpRequest], user-agent=[Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1], referer=[http://localhost:8080/szim/triple.do?U=ybFlMQgKMvBjGbYIUs+dhtVOInHIaCqdM3ZmiOQn/r0GvzWE2sMZdzaCSHhclamx56V86dWa+JB3unGmNOwvKQ==&amp;t=1557124281371], accept-encoding=[gzip, deflate, br], accept-language=[zh-CN,zh;q=0.9,en;q=0.8], cookie=[JSESSIONID=B6FBF9F2B61AA8F5C715A90C2FB1D328]&#125;]</span><br><span class="line">19-05-06 14:37:23 DEBUG o.s.w.f.CommonsRequestLoggingFilter.afterRequest(55) | After request [uri=/szim/triple.do?action=getJsonUserFeeInfo&amp;encrypt=TJ943tVLlkJmwouCRnJgj6aDOGqm5VBxeLiNqpcIOdUHaByb%2FJ0RK%2FFQvzJcK3TL0aPmKvSdKhNL%2FUl6ZvHznEFR2ohRKF8HTxwaqss9KCZ66AQ4Dx60ZBWrXdju2nlIohMo9O2d0Ia5Bvl6HEpmhQ%3D%3D&amp;ak=0f882bab896ca50e10ef389f12c279c195d7c1810dc3e9e55db6a0057335f148b61761ab383957431d94d5e9982cff0d389021fdf17e25a5843f96cd0a448ef22e47d6abae9bacb5cc7e1cb2ba30a7c0b08d423a5fcb644e2e9392d0a685d0f73a416470d9a074eff6582ad7d05fb2eadb925d798093519c6f1351455dc84296;client=0:0:0:0:0:0:0:1;session=B6FBF9F2B61AA8F5C715A90C2FB1D328;headers=&#123;host=[localhost:8080], connection=[keep-alive], pragma=[no-cache], cache-control=[no-cache], accept=[application/json, text/javascript, */*; q=0.01], dnt=[1], x-requested-with=[XMLHttpRequest], user-agent=[Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1], referer=[http://localhost:8080/szim/triple.do?U=ybFlMQgKMvBjGbYIUs+dhtVOInHIaCqdM3ZmiOQn/r0GvzWE2sMZdzaCSHhclamx56V86dWa+JB3unGmNOwvKQ==&amp;t=1557124281371], accept-encoding=[gzip, deflate, br], accept-language=[zh-CN,zh;q=0.9,en;q=0.8], cookie=[JSESSIONID=B6FBF9F2B61AA8F5C715A90C2FB1D328]&#125;]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>RestTemplate 支持 https 请求</title>
    <url>/posts/e98e5e02.html</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  RequestConfig.Builder builder = RequestConfig.custom();</span><br><span class="line">  builder</span><br><span class="line">    <span class="comment">// 响应超时时间</span></span><br><span class="line">    .setSocketTimeout(<span class="number">30</span> * <span class="number">1000</span>)</span><br><span class="line">    <span class="comment">// 建立 TCP 超时时间</span></span><br><span class="line">    .setConnectTimeout(<span class="number">10</span> * <span class="number">1000</span>)</span><br><span class="line">    <span class="comment">// 从连接池中获取连接超时时间</span></span><br><span class="line">    .setConnectionRequestTimeout(<span class="number">5</span> * <span class="number">1000</span>)</span><br><span class="line">    .setCookieSpec(CookieSpecs.IGNORE_COOKIES);</span><br><span class="line">  RequestConfig defaultRequestConfig = builder.build();</span><br><span class="line"></span><br><span class="line">  HttpClientBuilder clientBuilder = HttpClientBuilder.create().useSystemProperties();</span><br><span class="line">  clientBuilder.setDefaultRequestConfig(defaultRequestConfig);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 禁用重试</span></span><br><span class="line">  clientBuilder.disableAutomaticRetries();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// SSL or TLS</span></span><br><span class="line">    SSLContext sc = SSLContext.getInstance(<span class="string">"SSL"</span>);</span><br><span class="line">    sc.init(<span class="keyword">null</span>,</span><br><span class="line">            <span class="keyword">new</span> TrustManager[]&#123;<span class="keyword">new</span> X509TrustManager() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> X509Certificate[<span class="number">0</span>];</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;&#125;,</span><br><span class="line">            <span class="keyword">new</span> java.security.SecureRandom());</span><br><span class="line">    <span class="comment">// 设置 http 和 https 协议对应的处理 socket 链接工厂的对象</span></span><br><span class="line">    Registry&lt;ConnectionSocketFactory&gt; registry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</span><br><span class="line">      .register(<span class="string">"http"</span>, PlainConnectionSocketFactory.INSTANCE)</span><br><span class="line">      .register(<span class="string">"https"</span>, <span class="keyword">new</span> SSLConnectionSocketFactory(sc, NoopHostnameVerifier.INSTANCE))</span><br><span class="line">      .build();</span><br><span class="line">    PoolingHttpClientConnectionManager pool = <span class="keyword">new</span> PoolingHttpClientConnectionManager(registry);</span><br><span class="line">    <span class="comment">// 整个连接池的最大支持连接数</span></span><br><span class="line">    pool.setMaxTotal(<span class="number">500</span>);</span><br><span class="line">    <span class="comment">// 当前主机到目的主机的一个路由</span></span><br><span class="line">    pool.setDefaultMaxPerRoute(<span class="number">150</span>);</span><br><span class="line">    clientBuilder.setConnectionManager(pool);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    log.error(<span class="string">"msg: &#123;&#125;"</span>, e.getMessage(), e);</span><br><span class="line">  &#125;</span><br><span class="line">  CloseableHttpClient httpClient = clientBuilder.build();</span><br><span class="line">  HttpComponentsClientHttpRequestFactory factory = <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory(httpClient);</span><br><span class="line"></span><br><span class="line">  RestTemplate restTemplate = <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">  restTemplate.setRequestFactory(<span class="keyword">new</span> BufferingClientHttpRequestFactory(<span class="keyword">new</span> SimpleClientHttpRequestFactory()));</span><br><span class="line">  restTemplate.setInterceptors(Collections.singletonList(<span class="keyword">new</span> RestTemplateLoggingRequestInterceptor()));</span><br><span class="line">  <span class="keyword">return</span> restTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring-boot</tag>
        <tag>RestTemplate</tag>
      </tags>
  </entry>
  <entry>
    <title>spring redirect 导致内存溢出问题核查</title>
    <url>/posts/b575301a.html</url>
    <content><![CDATA[<h1 id="3-x-版本"><a href="#3-x-版本" class="headerlink" title="3.x 版本"></a>3.x 版本</h1><p>这个类AbstractCachingViewResolver里面的viewCache HashMap没有限制大小 </p>
<p>3.x：如果在 controller 返回的 view 是不固定的，如：”redirect:form.html?entityId=” + entityId，由于 entityId 的值会存在 N 个，那么会导致产生 N 个 ViewName 被缓存起来</p>
<a id="more"></a>
<blockquote>
<p>4.x 版本及以上已经修复这个问题，代码如下</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractCachingViewResolver</span> <span class="keyword">extends</span> <span class="title">WebApplicationObjectSupport</span> <span class="keyword">implements</span> <span class="title">ViewResolver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Default maximum number of entries for the view cache: 1024 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_CACHE_LIMIT = <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Dummy marker object for unresolved views in the cache Maps */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> View UNRESOLVED_VIEW = <span class="keyword">new</span> View() &#123;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> String <span class="title">getContentType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(Map&lt;String, ?&gt; model, HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/** The maximum number of entries in the cache */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">int</span> cacheLimit = DEFAULT_CACHE_LIMIT;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Whether we should refrain from resolving views again if unresolved once */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> cacheUnresolved = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Fast access cache for Views, returning already cached instances without a global lock */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Object, View&gt; viewAccessCache = <span class="keyword">new</span> ConcurrentHashMap&lt;Object, View&gt;(DEFAULT_CACHE_LIMIT);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** Map from view key to View instance, synchronized for View creation */</span></span><br><span class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"serial"</span>)</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Object, View&gt; viewCreationCache =</span><br><span class="line">			<span class="keyword">new</span> LinkedHashMap&lt;Object, View&gt;(DEFAULT_CACHE_LIMIT, <span class="number">0.75f</span>, <span class="keyword">true</span>) &#123;</span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">removeEldestEntry</span><span class="params">(Map.Entry&lt;Object, View&gt; eldest)</span> </span>&#123;</span><br><span class="line">					<span class="keyword">if</span> (size() &gt; getCacheLimit()) &#123;</span><br><span class="line">                        <span class="comment">// 超过限制大小，删除老数据</span></span><br><span class="line">						viewAccessCache.remove(eldest.getKey());</span><br><span class="line">						<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure>
<h1 id="4-x-版本"><a href="#4-x-版本" class="headerlink" title="4.x 版本"></a>4.x 版本</h1><p>4.x 版本是这个AbstractAutoProxyCreator这个类里面的advisedBeans ConcurrentHashMap没有限制大小</p>
<p>问题描述：<a href="https://github.com/spring-projects/spring-boot/issues/13771" target="_blank" rel="noopener">https://github.com/spring-projects/spring-boot/issues/13771</a></p>
<p>The problem is that <code>InternalResourceViewResolver</code> calls <code>AutowireCapableBeanFactory.initializeBean(Object existingBean, String beanName)</code> using the complete URL as the <code>beanName</code>. The bean name is then used by <code>AbstractAutoProxyCreator.wrapIfNecessary(Object, String, Object)</code> as the key when it caches the fact that no advice applies to it. </p>
<blockquote>
<p>经测试 spring 5.0.8.RELEASE 还存在这个问题，spring 5.3.8已不存在该问题，其他版本未测试</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String url = <span class="string">"http://localhost:8080/test?uuid"</span> + UUID.randomUUID();</span><br><span class="line"><span class="comment">// 使用 redirect</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"redirect:"</span> + url;</span><br><span class="line"><span class="comment">// 使用 ModelAndView</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ModelAndView(<span class="string">"redirect:"</span> + url);</span><br><span class="line"><span class="comment">// 使用 RedirectView</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ModelAndView(<span class="keyword">new</span> RedirectView(url));</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>redirect</tag>
      </tags>
  </entry>
  <entry>
    <title>spring cors 配置</title>
    <url>/posts/210739bc.html</url>
    <content><![CDATA[<p>Web 项目配置 cors 的三种方式。</p>
<a id="more"></a>
<h1 id="Cors-属性"><a href="#Cors-属性" class="headerlink" title="Cors 属性"></a>Cors 属性</h1><table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>可选项</th>
<th>默认值</th>
<th>有效值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>allow_origins</td>
<td>string</td>
<td>可选</td>
<td>“*”</td>
<td></td>
<td>允许跨域访问的 Origin，格式如：<code>scheme</code>://<code>host</code>:<code>port</code>，比如: <a href="https://blog.yl-online.top">https://blog.yl-online.top</a> 。多个值使用 <code>,</code> 分割，<code>allow_credential</code> 为 <code>false</code> 时可以使用 <code>*</code> 来表示所有 Origin 均允许通过。你也可以在启用了 <code>allow_credential</code> 后使用 <code>**</code> 强制允许所有 Origin 都通过，但请注意这样存在安全隐患。</td>
</tr>
<tr>
<td>allow_methods</td>
<td>string</td>
<td>可选</td>
<td>“*”</td>
<td></td>
<td>允许跨域访问的 Method，比如: <code>GET</code>，<code>POST</code>等。多个值使用 <code>,</code> 分割，<code>allow_credential</code> 为 <code>false</code> 时可以使用 <code>*</code> 来表示所有 Origin 均允许通过。你也可以在启用了 <code>allow_credential</code> 后使用 <code>**</code> 强制允许所有 Method 都通过，但请注意这样存在安全隐患。</td>
</tr>
<tr>
<td>allow_headers</td>
<td>string</td>
<td>可选</td>
<td>“*”</td>
<td></td>
<td>允许跨域访问时请求方携带哪些非 <code>CORS 规范</code> 以外的 Header， 多个值使用 <code>,</code> 分割，<code>allow_credential</code> 为 <code>false</code> 时可以使用 <code>*</code> 来表示所有 Header 均允许通过。你也可以在启用了 <code>allow_credential</code> 后使用 <code>**</code> 强制允许所有 Header 都通过，但请注意这样存在安全隐患。</td>
</tr>
<tr>
<td>expose_headers</td>
<td>string</td>
<td>可选</td>
<td>“*”</td>
<td></td>
<td>允许跨域访问时响应方携带哪些非 <code>CORS 规范</code> 以外的 Header， 多个值使用 <code>,</code> 分割，<code>allow_credential</code> 为 <code>false</code> 时可以使用 <code>*</code> 来表示允许任意 Header 。你也可以在启用了 <code>allow_credential</code> 后使用 <code>**</code> 强制允许任意 Header，但请注意这样存在安全隐患。</td>
</tr>
<tr>
<td>max_age</td>
<td>integer</td>
<td>可选</td>
<td>1800</td>
<td></td>
<td>浏览器缓存 CORS 结果的最大时间，单位为秒，在这个时间范围内浏览器会复用上一次的检查结果，<code>-1</code> 表示不缓存。</td>
</tr>
<tr>
<td>allow_credential</td>
<td>boolean</td>
<td>可选</td>
<td>false</td>
<td></td>
<td>是否允许跨域访问的请求方携带凭据（如 Cookie 等）。根据 CORS 规范，如果设置该选项为 <code>true</code>，那么将不能在其他选项中使用 <code>*</code>。</td>
</tr>
</tbody>
</table>
<h1 id="WebMvcConfigurer"><a href="#WebMvcConfigurer" class="headerlink" title="WebMvcConfigurer"></a>WebMvcConfigurer</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xx.xxx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果使用 spring-security，这里配置会不生效，需要改用 CorsConfigurationSource</span></span><br><span class="line"><span class="comment">     * 参考：https://docs.spring.io/spring-security/site/docs/current/reference/html5/#cors</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry cors 注册器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * When allowCredentials is true,</span></span><br><span class="line"><span class="comment">                 * allowedOrigins cannot contain the special value "*" since that cannot be set on the "Access-Control-Allow-Origin" response header.</span></span><br><span class="line"><span class="comment">                 * To allow credentials to a set of origins,</span></span><br><span class="line"><span class="comment">                 * list them explicitly or consider using "allowedOriginPatterns" instead.</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="comment">// 是否允许跨域访问的请求方携带凭据（如 Cookie 等）。根据 CORS 规范，如果设置该选项为 true，那么将不能在其他选项中使用 *。</span></span><br><span class="line">                .allowCredentials(<span class="keyword">false</span>)</span><br><span class="line">                <span class="comment">// 开放哪些ip、端口、域名的访问权限</span></span><br><span class="line">                .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">                <span class="comment">// .allowedOriginPatterns("*")</span></span><br><span class="line">                <span class="comment">// "GET", "HEAD", "POST", "PUT", "DELETE", "OPTIONS"</span></span><br><span class="line">                .allowedMethods(<span class="string">"*"</span>)</span><br><span class="line">                <span class="comment">// 允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">                .allowedHeaders(<span class="string">"*"</span>)</span><br><span class="line">                <span class="comment">// 暴露哪些头部信息（因为跨域访问默认不能获取全部头部信息）</span></span><br><span class="line">                .exposedHeaders(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="WebSecurityConfigurerAdapter"><a href="#WebSecurityConfigurerAdapter" class="headerlink" title="WebSecurityConfigurerAdapter"></a>WebSecurityConfigurerAdapter</h1><p>参考：<a href="https://docs.spring.io/spring-security/site/docs/current/reference/html5/#cors" target="_blank" rel="noopener">https://docs.spring.io/spring-security/site/docs/current/reference/html5/#cors</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http</span><br><span class="line">            <span class="comment">// by default uses a Bean by the name of corsConfigurationSource</span></span><br><span class="line">            .cors(withDefaults())</span><br><span class="line">            ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果使用了 spring-security，cors 需要这样配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> cors</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsConfigurationSource <span class="title">corsConfigurationSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CorsConfiguration cfg = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">        cfg.setAllowCredentials(<span class="keyword">false</span>);</span><br><span class="line">        cfg.setAllowedOrigins(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        cfg.setAllowedMethods(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        cfg.setAllowedHeaders(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        cfg.setExposedHeaders(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">"/**"</span>, cfg);</span><br><span class="line">        <span class="keyword">return</span> source;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Web-Filter"><a href="#Web-Filter" class="headerlink" title="Web Filter"></a>Web Filter</h1><p>如果以上两种配置方式都不生效，可以试试这种方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xx.xxx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean&lt;CorsFilter&gt; <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CorsConfiguration cfg = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">        cfg.setAllowCredentials(<span class="keyword">false</span>);</span><br><span class="line">        cfg.setAllowedOrigins(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        cfg.setAllowedMethods(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        cfg.setAllowedHeaders(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        cfg.setExposedHeaders(Collections.singletonList(<span class="string">"*"</span>));</span><br><span class="line">        UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">"/**"</span>, cfg);</span><br><span class="line">        FilterRegistrationBean&lt;CorsFilter&gt; filter = <span class="keyword">new</span> FilterRegistrationBean&lt;&gt;();</span><br><span class="line">        filter.setFilter(<span class="keyword">new</span> CorsFilter(source));</span><br><span class="line">        filter.addUrlPatterns(<span class="string">"/*"</span>);</span><br><span class="line">        filter.setOrder(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring-boot</tag>
        <tag>cors</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-cache 动态过期时间配置</title>
    <url>/posts/23adfb31.html</url>
    <content><![CDATA[<h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><ul>
<li>第 1 步<ul>
<li>自定义 CacheResolver</li>
<li>通过 CacheOperationInvocationContext 获取到方法的参数名和参数值</li>
<li>重写一个 cacheName（原始cacheName + “#” + 过期时间拼接在一起）</li>
</ul>
</li>
<li>第 2 步<ul>
<li>重写 CacheManger 的 getCache 方法，通过第一步拼接的 cacheName split 出原始 cacheName 和过期时间</li>
<li>根据 split 出来的 cacheName 和过期时间，初始化一个 RedisCacheConfiguration，并通过 createRedisCache(cacheName, cacheConfiguration) 实例化一个 cache</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><blockquote>
<p>以下代码基于 spring-boot 2.5.2，其他版本可以参考实现</p>
</blockquote>
<h3 id="CacheUtils-java"><a href="#CacheUtils-java" class="headerlink" title="CacheUtils.java"></a>CacheUtils.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存工具</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYMBOL = <span class="string">"#"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建一个新的 cacheName，以实现动态过期时间配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cacheName 原始 cacheName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ttl       过期时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">buildCacheNameForTtl</span><span class="params">(String cacheName, <span class="keyword">long</span> ttl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cacheName + SYMBOL + ttl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] splitCacheNameForTtl(String cacheNameForTtl) &#123;</span><br><span class="line">        <span class="keyword">return</span> cacheNameForTtl.split(SYMBOL, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Expired-java"><a href="#Expired-java" class="headerlink" title="Expired.java"></a>Expired.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Inherited;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义缓存过期时间配置注解，过期时间单位：s（秒）</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     1、&#123;<span class="doctag">@link</span> Expired#el()&#125;优先级比&#123;<span class="doctag">@link</span> Expired#value()&#125;高，优先使用&#123;<span class="doctag">@link</span> Expired#el()&#125;的配置</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Expired &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间，单位：秒，默认：-1（使用全局默认过期时间）</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     与 &#123;<span class="doctag">@link</span> #el()&#125; 属性互斥，优先使用 &#123;<span class="doctag">@link</span> #el()&#125; 配置。</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> -1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间，单位：秒</span></span><br><span class="line"><span class="comment">     * Spring Expression Language (SpEL) expression for computing the expiration time dynamically.</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     与 &#123;<span class="doctag">@link</span> #value()&#125; 属性互斥，优先使用当前配置。</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">el</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TCacheResolver"><a href="#TCacheResolver" class="headerlink" title="TCacheResolver"></a>TCacheResolver</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.AbstractCacheResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.CacheOperationInvocationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.MethodBasedEvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.LocalVariableTableParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.ExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.standard.SpelExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.support.StandardEvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ObjectUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义 &#123;<span class="doctag">@link</span> org.springframework.cache.interceptor.CacheResolver&#125; 以实现动态过期时间配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCacheResolver</span> <span class="keyword">extends</span> <span class="title">AbstractCacheResolver</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LocalVariableTableParameterNameDiscoverer discoverer = <span class="keyword">new</span> LocalVariableTableParameterNameDiscoverer();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TCacheResolver</span><span class="params">(CacheManager cacheManager)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cacheManager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Collection&lt;String&gt; <span class="title">getCacheNames</span><span class="params">(CacheOperationInvocationContext&lt;?&gt; context)</span> </span>&#123;</span><br><span class="line">        Method method = context.getMethod();</span><br><span class="line">        Object[] args = context.getArgs();</span><br><span class="line">        Set&lt;String&gt; cacheNames = context.getOperation().getCacheNames();</span><br><span class="line">        <span class="comment">// Shortcut if no args need to be loaded</span></span><br><span class="line">        <span class="keyword">if</span> (ObjectUtils.isEmpty(args)) &#123;</span><br><span class="line">            <span class="keyword">return</span> cacheNames;</span><br><span class="line">        &#125;</span><br><span class="line">        Expired expired = AnnotationUtils.findAnnotation(method, Expired<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (expired == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> cacheNames;</span><br><span class="line">        &#125;</span><br><span class="line">        String expiredEl = expired.el();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(expiredEl) &amp;&amp; expiredEl.startsWith(<span class="string">"#"</span>)) &#123;</span><br><span class="line">            <span class="comment">// Expose indexed variables as well as parameter names (if discoverable)</span></span><br><span class="line">            String[] paramNames = <span class="keyword">this</span>.discoverer.getParameterNames(method);</span><br><span class="line">            <span class="keyword">int</span> paramCount = (paramNames != <span class="keyword">null</span> ? paramNames.length : method.getParameterCount());</span><br><span class="line">            <span class="keyword">int</span> argsCount = args.length;</span><br><span class="line"></span><br><span class="line">            EvaluationContext eval = <span class="keyword">new</span> StandardEvaluationContext();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paramCount; i++) &#123;</span><br><span class="line">                Object value = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (argsCount &gt; paramCount &amp;&amp; i == paramCount - <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">// Expose remaining arguments as vararg array for last parameter</span></span><br><span class="line">                    value = Arrays.copyOfRange(args, i, argsCount);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argsCount &gt; i) &#123;</span><br><span class="line">                    <span class="comment">// Actual argument found - otherwise left as null</span></span><br><span class="line">                    value = args[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * see &#123;<span class="doctag">@link</span> MethodBasedEvaluationContext#lazyLoadArguments()&#125;</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                eval.setVariable(<span class="string">"a"</span> + i, value);</span><br><span class="line">                eval.setVariable(<span class="string">"p"</span> + i, value);</span><br><span class="line">                <span class="keyword">if</span> (paramNames != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    eval.setVariable(paramNames[i], value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Expression expression = parser.parseExpression(expiredEl);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 这里可能会抛出异常，不用处理，这样有利于程序发现&#123;<span class="doctag">@link</span> Expired#el&#125;配置错误问题</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            Long ttl = expression.getValue(eval, Long<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (ttl == <span class="keyword">null</span> || ttl &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> cacheNames;</span><br><span class="line">            &#125;</span><br><span class="line">            Set&lt;String&gt; names = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (String cacheName : cacheNames) &#123;</span><br><span class="line">                names.add(CacheUtils.buildCacheNameForTtl(cacheName, ttl));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> names;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> expiredValue = expired.value();</span><br><span class="line">            <span class="keyword">if</span> (expiredValue &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> cacheNames;</span><br><span class="line">            &#125;</span><br><span class="line">            Set&lt;String&gt; names = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (String cacheName : cacheNames) &#123;</span><br><span class="line">                names.add(CacheUtils.buildCacheNameForTtl(cacheName, expiredValue));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> names;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TRedisCacheManager-java"><a href="#TRedisCacheManager-java" class="headerlink" title="TRedisCacheManager.java"></a>TRedisCacheManager.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义 RedisCacheManager 缓存管理器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> spring-data-redis 2.0.0.RELEASE</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TRedisCacheManager</span> <span class="keyword">extends</span> <span class="title">RedisCacheManager</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedisCacheConfiguration defaultCacheConfig;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TRedisCacheManager</span><span class="params">(RedisCacheWriter cacheWriter, RedisCacheConfiguration defaultCacheConfig,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">boolean</span> allowInFlightCacheCreation, String... initialCacheNames)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cacheWriter, defaultCacheConfig, allowInFlightCacheCreation, initialCacheNames);</span><br><span class="line">        <span class="keyword">this</span>.defaultCacheConfig = defaultCacheConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ConcurrentMap&lt;String, Cache&gt; cacheMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cache <span class="title">getCache</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"getCache ---&gt; name: &#123;&#125;"</span>, name);</span><br><span class="line">        <span class="comment">// Quick check for existing cache...</span></span><br><span class="line">        Cache cache = <span class="keyword">this</span>.cacheMap.get(name);</span><br><span class="line">        <span class="keyword">if</span> (cache != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> cache;</span><br><span class="line">        &#125;</span><br><span class="line">        String[] array = CacheUtils.splitCacheNameForTtl(name);</span><br><span class="line">        String cacheName = array[<span class="number">0</span>];</span><br><span class="line">        cache = <span class="keyword">super</span>.getCache(cacheName);</span><br><span class="line">        <span class="keyword">if</span> (cache != <span class="keyword">null</span> &amp;&amp; array.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">long</span> ttl = Long.parseLong(array[<span class="number">1</span>]);</span><br><span class="line">            log.info(<span class="string">"getCache ---&gt; cacheName: &#123;&#125;, ttl: &#123;&#125;"</span>, cacheName, ttl);</span><br><span class="line">            RedisCacheConfiguration cacheConfiguration = <span class="keyword">this</span>.defaultCacheConfig</span><br><span class="line">                    .entryTtl(Duration.ofSeconds(ttl));</span><br><span class="line">            cache = <span class="keyword">super</span>.createRedisCache(cacheName, cacheConfiguration);</span><br><span class="line">            cacheMap.put(name, cache);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cache;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TRedisAutoConfiguration-java"><a href="#TRedisAutoConfiguration-java" class="headerlink" title="TRedisAutoConfiguration.java"></a>TRedisAutoConfiguration.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.ObjectProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.AutoConfigureAfter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.cache.CacheProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.data.redis.RedisProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CachingConfigurerSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.CacheErrorHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.CacheResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ResourceLoader;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.CacheStatisticsCollector;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheWriter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.JdkSerializationRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化 redis 相关</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter</span>(value = &#123;RedisAutoConfiguration<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class">@<span class="title">ConditionalOnClass</span>(<span class="title">value</span> </span>= &#123;RedisConnectionFactory<span class="class">.<span class="keyword">class</span>, <span class="title">RedisOperations</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class">@<span class="title">ConditionalOnBean</span>(</span></span><br><span class="line"><span class="class">        <span class="title">value</span> </span>= &#123;</span><br><span class="line">                RedisConnectionFactory<span class="class">.<span class="keyword">class</span></span></span><br><span class="line"><span class="class">        &#125;</span></span><br><span class="line"><span class="class">)</span></span><br><span class="line"><span class="class">@<span class="title">EnableConfigurationProperties</span>(</span>&#123;RedisProperties<span class="class">.<span class="keyword">class</span>, <span class="title">CacheProperties</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class">@<span class="title">EnableCaching</span>(<span class="title">proxyTargetClass</span> </span>= <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TRedisAutoConfiguration</span> <span class="keyword">extends</span> <span class="title">CachingConfigurerSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CacheProperties cacheProperties;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ObjectProvider&lt;RedisCacheConfiguration&gt; redisCacheConfiguration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedisConnectionFactory redisConnectionFactory;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ResourceLoader resourceLoader;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// /**</span></span><br><span class="line">    <span class="comment">//  * 如果 @Cacheable、@CachePut、@CacheEvict 等注解没有配置 key，则使用这个自定义 key 生成器</span></span><br><span class="line">    <span class="comment">//  * &lt;pre&gt;</span></span><br><span class="line">    <span class="comment">//  *     但自定义了缓存的 key 时，难以保证 key 的唯一性，此时最好指定方法名，比如：@Cacheable(value="", key="&#123;#root.methodName, #id&#125;")</span></span><br><span class="line">    <span class="comment">//  * &lt;/pre&gt;</span></span><br><span class="line">    <span class="comment">//  */</span></span><br><span class="line">    <span class="comment">// @Bean</span></span><br><span class="line">    <span class="comment">// @Override</span></span><br><span class="line">    <span class="comment">// public KeyGenerator keyGenerator() &#123;</span></span><br><span class="line">    <span class="comment">//     return new TKeyGenerator();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="comment">// @Bean</span></span><br><span class="line">    <span class="comment">// @Override</span></span><br><span class="line">    <span class="comment">// public CacheResolver cacheResolver() &#123;</span></span><br><span class="line">    <span class="comment">//     return new TCacheResolver(cacheManager());</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="comment">// @Bean</span></span><br><span class="line">    <span class="comment">// @Override</span></span><br><span class="line">    <span class="comment">// public CacheErrorHandler errorHandler() &#123;</span></span><br><span class="line">    <span class="comment">//     return new TCacheErrorHandler();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置 RedisCacheManager，使用 cache 注解管理 redis 缓存</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     这里一定要加上&amp;#64;&#123;<span class="doctag">@link</span> Bean&#125;注解</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RedisCacheConfiguration defaultCacheConfig =</span><br><span class="line">                determineConfiguration(cacheProperties, redisCacheConfiguration, resourceLoader.getClassLoader());</span><br><span class="line">        <span class="comment">// 初始化一个 nonLocking RedisCacheWriter</span></span><br><span class="line">        RedisCacheWriter cacheWriter = RedisCacheWriter.nonLockingRedisCacheWriter(redisConnectionFactory);</span><br><span class="line">        <span class="keyword">boolean</span> enableStatistics = cacheProperties.getRedis().isEnableStatistics();</span><br><span class="line">        CacheStatisticsCollector statisticsCollector = CacheStatisticsCollector.none();</span><br><span class="line">        <span class="keyword">if</span> (enableStatistics) &#123;</span><br><span class="line">            statisticsCollector = CacheStatisticsCollector.create();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!statisticsCollector.equals(CacheStatisticsCollector.none())) &#123;</span><br><span class="line">            cacheWriter = cacheWriter.withStatisticsCollector(statisticsCollector);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> allowInFlightCacheCreation = <span class="keyword">true</span>;</span><br><span class="line">        List&lt;String&gt; cacheNames = cacheProperties.getCacheNames();</span><br><span class="line">        String[] initialCacheNames = <span class="keyword">new</span> String[]&#123;&#125;;</span><br><span class="line">        <span class="keyword">if</span> (!CollectionUtils.isEmpty(cacheNames)) &#123;</span><br><span class="line">            initialCacheNames = cacheNames.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        TRedisCacheManager cm = <span class="keyword">new</span> TRedisCacheManager(cacheWriter, defaultCacheConfig, allowInFlightCacheCreation, initialCacheNames);</span><br><span class="line">        cm.setTransactionAware(enableStatistics);</span><br><span class="line">        <span class="keyword">return</span> cm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 以下代码参考 &#123;<span class="doctag">@link</span> org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration#createConfiguration(CacheProperties, ClassLoader)&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> org.springframework.data.redis.cache.<span class="function">RedisCacheConfiguration <span class="title">determineConfiguration</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            CacheProperties cacheProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">            ObjectProvider&lt;RedisCacheConfiguration&gt; redisCacheConfiguration,</span></span></span><br><span class="line"><span class="function"><span class="params">            ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisCacheConfiguration.getIfAvailable(() -&gt; createConfiguration(cacheProperties, classLoader));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> RedisCacheConfiguration <span class="title">createConfiguration</span><span class="params">(CacheProperties cacheProperties, ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">        CacheProperties.Redis redisProperties = cacheProperties.getRedis();</span><br><span class="line">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig();</span><br><span class="line">        config = config.serializeValuesWith(</span><br><span class="line">                RedisSerializationContext.SerializationPair.fromSerializer(<span class="keyword">new</span> JdkSerializationRedisSerializer(classLoader)));</span><br><span class="line">        <span class="comment">// config = config.serializeKeysWith(STRING_PAIR)</span></span><br><span class="line">        <span class="comment">//         .serializeValuesWith(FASTJSON_PAIR);</span></span><br><span class="line">        Duration timeToLive = redisProperties.getTimeToLive();</span><br><span class="line">        <span class="keyword">if</span> (timeToLive == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 因为未配置 spring.cache.redis.time-to-live，将其设置为 1 小时。</span></span><br><span class="line">            timeToLive = Duration.ofHours(<span class="number">1</span>);</span><br><span class="line">            log.warn(<span class="string">"Because spring.cache.redis.time-to-live is not configured, set it to 1 hour."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        config = config.entryTtl(timeToLive);</span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getKeyPrefix() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            config = config.prefixCacheNameWith(redisProperties.getKeyPrefix());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isCacheNullValues()) &#123;</span><br><span class="line">            config = config.disableCachingNullValues();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isUseKeyPrefix()) &#123;</span><br><span class="line">            config = config.disableKeyPrefix();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><h3 id="TRedisApp-java"><a href="#TRedisApp-java" class="headerlink" title="TRedisApp.java"></a>TRedisApp.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span>(</span><br><span class="line">        exclude = &#123;</span><br><span class="line">                DataSourceAutoConfiguration<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">                <span class="title">HibernateJpaAutoConfiguration</span>.<span class="title">class</span>,</span></span><br><span class="line"><span class="class">                <span class="title">JdbcTemplateAutoConfiguration</span>.<span class="title">class</span>,</span></span><br><span class="line"><span class="class">                <span class="title">DataSourceTransactionManagerAutoConfiguration</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class">        &#125;</span></span><br><span class="line"><span class="class">)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">TRedisApp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(TRedisApp<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">        <span class="keyword">synchronized</span> (TRedisApp<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    TRedisApp<span class="class">.<span class="keyword">class</span>.<span class="title">wait</span>()</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// ignore</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TRedisService-java"><a href="#TRedisService-java" class="headerlink" title="TRedisService.java"></a>TRedisService.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CacheConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.Cacheable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.Caching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@CacheConfig</span>(cacheNames = <span class="string">"redis.v1.service"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TRedisService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Cacheable</span>(</span><br><span class="line">            value = <span class="string">"redis.v2.service"</span>,</span><br><span class="line">            condition = <span class="string">"#cache eq true"</span>,</span><br><span class="line">            unless = <span class="string">"#result == null or #result.empty"</span>)</span><br><span class="line">    <span class="meta">@Caching</span>(</span><br><span class="line">            cacheable = &#123;</span><br><span class="line">                    <span class="meta">@Cacheable</span>(</span><br><span class="line">                            value = <span class="string">"redis.v3.service"</span>,</span><br><span class="line">                            condition = <span class="string">"#cache eq true"</span>,</span><br><span class="line">                            unless = <span class="string">"#result == null or #result.empty"</span>),</span><br><span class="line">                    <span class="meta">@Cacheable</span>(</span><br><span class="line">                            value = <span class="string">"redis.v4.service"</span>,</span><br><span class="line">                            condition = <span class="string">"#cache eq true"</span>,</span><br><span class="line">                            unless = <span class="string">"#result == null or #result.empty"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="meta">@Expired</span>(el = <span class="string">"#expirationTime"</span>)</span><br><span class="line">    <span class="comment">// @Expired(value = 300, el = "#id")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">get</span><span class="params">(<span class="keyword">boolean</span> cache, <span class="keyword">long</span> expirationTime, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"id"</span>, id);</span><br><span class="line">        map.put(<span class="string">"name"</span>, <span class="string">"name-"</span> + id);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">"map: &#123;&#125;"</span>, map);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TRedisTest-java"><a href="#TRedisTest-java" class="headerlink" title="TRedisTest.java"></a>TRedisTest.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.HashOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ListOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.SetOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ZSetOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ActiveProfiles;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= TRedisApp<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ActiveProfiles("redis")</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TRedisTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TRedisService redisService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisConnectionFactory redisConnectionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"redisConnectionFactory: &#123;&#125;"</span>, redisConnectionFactory);</span><br><span class="line">        <span class="keyword">if</span> (redisConnectionFactory <span class="keyword">instanceof</span> LettuceConnectionFactory) &#123;</span><br><span class="line">            LettuceConnectionFactory factory = (LettuceConnectionFactory) redisConnectionFactory;</span><br><span class="line">            log.info(<span class="string">"spring.redis.database: &#123;&#125;"</span>, factory.getDatabase());</span><br><span class="line">            log.info(<span class="string">"spring.redis.host: &#123;&#125;"</span>, factory.getHostName());</span><br><span class="line">            log.info(<span class="string">"spring.redis.port: &#123;&#125;"</span>, factory.getPort());</span><br><span class="line">            log.info(<span class="string">"spring.redis.timeout: &#123;&#125;"</span>, factory.getTimeout());</span><br><span class="line">            log.info(<span class="string">"spring.redis.password: &#123;&#125;"</span>, factory.getPassword());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">            log.info(<span class="string">"service get ---&gt; &#123;&#125;"</span>, redisService.get(<span class="keyword">true</span>, <span class="number">120</span> * i, i + <span class="number">1000</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">            log.info(<span class="string">"service get ---&gt; &#123;&#125;"</span>, redisService.get(<span class="keyword">true</span>, <span class="number">120</span> * i, i + <span class="number">1000</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>cache</tag>
      </tags>
  </entry>
  <entry>
    <title>spring cache 常用缓存注解介绍</title>
    <url>/posts/3bef8a86.html</url>
    <content><![CDATA[<h1 id="spring-cache-常用缓存注解介绍"><a href="#spring-cache-常用缓存注解介绍" class="headerlink" title="spring-cache 常用缓存注解介绍"></a>spring-cache 常用缓存注解介绍</h1><table>
<thead>
<tr>
<th>包地址</th>
<th>注解名</th>
<th>作用域</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>org.springframework.cache.annotation</td>
<td>CacheConfig</td>
<td>类级别</td>
<td>s设置缓存的公共配置</td>
</tr>
<tr>
<td></td>
<td>Cacheable</td>
<td>方法级别</td>
<td>缓存读取操作</td>
</tr>
<tr>
<td></td>
<td>CacheEvict</td>
<td>方法级别</td>
<td>缓存失效操作</td>
</tr>
<tr>
<td></td>
<td>CachePut</td>
<td>方法级别</td>
<td>缓存更新操作</td>
</tr>
<tr>
<td></td>
<td>Caching</td>
<td>方法级别</td>
<td>h混合读取、失效、更新操作</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h1 id="CacheConfig"><a href="#CacheConfig" class="headerlink" title="CacheConfig"></a>CacheConfig</h1><p>主要作用是全局配置，比如配置缓存名称（cacheNames），只需要在类上面使用这个注解配置一次，类下面的方法就默认使用全局配置了。</p>
<h1 id="Cacheable"><a href="#Cacheable" class="headerlink" title="Cacheable"></a>Cacheable</h1><p>这个注解是最重要的，主要实现的是功能在进行读操作的时候，先从缓存中查询，如果查询不到，再走业务流程获取数据，获取成功后，保存到缓存中。</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>默认值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td></td>
<td>缓存的名称，在 spring 配置文件中定义，必须指定至少一个</td>
</tr>
<tr>
<td>cacheNames</td>
<td></td>
<td>缓存的名称，在 spring 配置文件中定义，必须指定至少一个</td>
</tr>
<tr>
<td>key</td>
<td></td>
<td>缓存的 key，可以为空，如果指定要按照 SpEL 表达式编写，如果不指定，则缺省按照方法的所有参数进行组合</td>
</tr>
<tr>
<td>keyGenerator</td>
<td></td>
<td></td>
</tr>
<tr>
<td>cacheManager</td>
<td></td>
<td></td>
</tr>
<tr>
<td>cacheResolver</td>
<td></td>
<td></td>
</tr>
<tr>
<td>condition</td>
<td></td>
<td>缓存的条件，可以为空，使用 SpEL 编写，返回 true 或者 false，只有为 true 才进行缓存。不能使用返回结果</td>
</tr>
<tr>
<td>unless</td>
<td></td>
<td>不缓存的条件，可以为空，使用 SpEL 编写，返回 true 或者 false，只有为 false才进行缓存。可以使用返回结果</td>
</tr>
<tr>
<td>sync</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="CacheEvict"><a href="#CacheEvict" class="headerlink" title="CacheEvict"></a>CacheEvict</h1><p>这个注解主要是配合<code>@Cacheable</code>一起使用，它的主要作用是清除缓存。当进行一些更新、删除操作时，就需要删除缓存。如果不删除缓存就会出现读取不到最新数据的情况。它有一个重要的数据<code>allEntries</code>默认是false。当true是，会清除所有缓存，而不以指定的key为主。</p>
<h1 id="CachePut"><a href="#CachePut" class="headerlink" title="CachePut"></a>CachePut</h1><blockquote>
<p>这个注解总是会把数据缓存，而不会每次检测缓存是否存在</p>
</blockquote>
<h1 id="Caching"><a href="#Caching" class="headerlink" title="Caching"></a>Caching</h1><p>这个注解是<code>Cacheable</code>、<code>CachePut</code>、<code>CacheEvict</code>的综合体，可以使用这个注解包含以上3个注解。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>cache</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring JCL 的坑</title>
    <url>/posts/6c1c14ff.html</url>
    <content><![CDATA[<blockquote>
<p> 关于Spring-JCL日志的坑  </p>
</blockquote>
<p>Spring 5.x版本后，Spring-Core中加入了 Spring-JCL 库直接依赖。</p>
<p>目前很多三方库都会依赖 commons-logging 来输出日志，而 Spring-JCL 是对 commons-logging 拷贝复制。</p>
<p>所以 2 个库同时依赖进入项目，会导致冲突。</p>
<blockquote>
<p>解决</p>
</blockquote>
<p>由于当前项目使用的 slf4j api 来打印日志，所以 exclusion 掉 commons-logging 和 Spring-JCL，引入 slf4j-jcl 库：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式锁</title>
    <url>/posts/4eb3381c.html</url>
    <content><![CDATA[<h1 id="spring-integration-redis"><a href="#spring-integration-redis" class="headerlink" title="spring-integration-redis"></a>spring-integration-redis</h1><blockquote>
<p>初始化 RedisLockRegistry</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RedisLockRegistry <span class="title">redisLockRegistry</span> <span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 60s过期，单位：ms</span></span><br><span class="line">  <span class="keyword">return</span> RedisLockRegistry(factory, <span class="string">"ts-template"</span>, <span class="number">60000L</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>使用</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> RedisLockRegistry redisLockRegistry;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取锁</span></span><br><span class="line">  Lock lock = redisLockRegistry.obtain(message);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 上锁</span></span><br><span class="line">    <span class="keyword">if</span> (lock.tryLock()) &#123;</span><br><span class="line">        <span class="comment">// 业务逻辑</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span>() &#123;</span><br><span class="line">    <span class="comment">// 异常处理</span></span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// 删除当前未锁定的旧锁：要手动调用一下这个函数，否则 RedisLockRegistry 中的 locks 对象会越来越大，因为调用 unlock 之后，不会自动删除 locks 中保存的当前锁的对象。但是调用这个删除逻辑最好是通过定时器去调用，因为如果 locks 对象中数据量很大，每次都要迭代一次会很耗时</span></span><br><span class="line">    redisLockRegistry.expireUnusedOlderThan(<span class="number">10</span>*<span class="number">60</span>*<span class="number">1000L</span>);</span><br><span class="line">    <span class="comment">// 释放锁</span></span><br><span class="line">    lock.unlock();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通过定时器调用 expireUnusedOlderThan</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> RedisLockRegistry redisLockRegistry;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scheduled</span>(fixedDelay=<span class="number">10</span>*<span class="number">60</span>*<span class="number">1000</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">expireUnusedOlderThan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 删除当前未锁定的旧锁</span></span><br><span class="line">    redisLockRegistry.expireUnusedOlderThan(<span class="number">10</span>*<span class="number">60</span>*<span class="number">1000L</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>spring retry 使用</title>
    <url>/posts/9cd0a544.html</url>
    <content><![CDATA[<p><strong>@Retryable</strong></p>
<p>被注解的方法发生异常时会重试 </p>
<table>
<thead>
<tr>
<th>参数</th>
<th>默认值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>value</td>
<td>空</td>
<td>指定发生的异常，进行重试</td>
</tr>
<tr>
<td>include</td>
<td>空</td>
<td>指定异常重试。和value一样，默认空，当exclude也为空时，所有异常都重试</td>
</tr>
<tr>
<td>exclude</td>
<td>空</td>
<td>指定异常不重试。默认空，当include也为空时，所有异常都重试</td>
</tr>
<tr>
<td>maxAttemps</td>
<td>3</td>
<td>重试次数</td>
</tr>
<tr>
<td>backoff</td>
<td>空</td>
<td>重试补偿机制</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p><strong>@Backoff</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>默认值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>delay</td>
<td>1000L</td>
<td>指定延迟时间</td>
</tr>
<tr>
<td>multiplier</td>
<td>0.0D</td>
<td>指定延迟的倍数。比如delay=5000l,multiplier=2时，第一次重试为5秒后，第二次为10秒，第三次为20秒</td>
</tr>
</tbody>
</table>
<p><strong>@Recover</strong> </p>
<p>当重试到达指定次数时，被注解的方法将被回调，可以在该方法中进行日志处理。需要注意的是发生的异常和入参类型一致时才会回调。</p>
<p><strong>示例</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.retry.annotation.Backoff;</span><br><span class="line"><span class="keyword">import</span> org.springframework.retry.annotation.Recover;</span><br><span class="line"><span class="keyword">import</span> org.springframework.retry.annotation.Retryable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/7/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetryService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Retryable</span>(</span><br><span class="line">            value = &#123;Exception<span class="class">.<span class="keyword">class</span>&#125;,</span></span><br><span class="line"><span class="class">            <span class="title">maxAttempts</span> </span>= <span class="number">10</span>,</span><br><span class="line">            backoff = <span class="meta">@Backoff</span>(delay = <span class="number">10000L</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">retry</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"测试 spring retry"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Recover</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exception</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line">        log.error(<span class="string">"errmsg: &#123;&#125;"</span>, e.getMessage(), e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.retry.annotation.EnableRetry;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableRetry</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Common</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SpringApplicationBuilder <span class="title">configureSpringBuilder</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//builder.application().addListeners(new EnvironmentPreparedEventListener());</span></span><br><span class="line">        builder.application().addPrimarySources(Collections.singletonList(App<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        <span class="keyword">return</span> builder.sources(App<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// /**</span></span><br><span class="line">    <span class="comment">//  * for WAR deploy</span></span><br><span class="line">    <span class="comment">//  */</span></span><br><span class="line">    <span class="comment">// @Override</span></span><br><span class="line">    <span class="comment">// protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) &#123;</span></span><br><span class="line">    <span class="comment">//     // // 外部容器部署 web 环境要在这里配置 EnvironmentPreparedEvent 监听器才生效</span></span><br><span class="line">    <span class="comment">//     // builder.application().addListeners(new EnvironmentPreparedEventListener());</span></span><br><span class="line">    <span class="comment">//     // return builder.sources(Application.class);</span></span><br><span class="line">    <span class="comment">//     return super.configure(configureSpringBuilder(builder));</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for JAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// SpringApplication.run(Application.class, args);</span></span><br><span class="line">        SpringApplicationBuilder builder = configureSpringBuilder(<span class="keyword">new</span> SpringApplicationBuilder());</span><br><span class="line">        builder.application().run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>retry</tag>
      </tags>
  </entry>
  <entry>
    <title>常用 spring 框架工具类</title>
    <url>/posts/3378bcc3.html</url>
    <content><![CDATA[<h1 id="Assert-断言"><a href="#Assert-断言" class="headerlink" title="Assert 断言"></a>Assert 断言</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 要求参数 object 必须为非空（Not Null），否则抛出异常，不予放行</span></span><br><span class="line"><span class="comment">// 参数 message 参数用于定制异常信息。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">notNull</span><span class="params">(Object object, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数必须空（Null），否则抛出异常，不予『放行』。</span></span></span><br><span class="line"><span class="function"><span class="comment">// 和 notNull() 方法断言规则相反</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">isNull</span><span class="params">(Object object, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数必须为真（True），否则抛出异常，不予『放行』。</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">isTrue</span><span class="params">(<span class="keyword">boolean</span> expression, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数（List/Set）必须非空（Not Empty），否则抛出异常，不予放行</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">notEmpty</span><span class="params">(Collection collection, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数（String）必须有长度（即，Not Empty），否则抛出异常，不予放行</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hasLength</span><span class="params">(String text, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数（String）必须有内容（即，Not Blank），否则抛出异常，不予放行</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hasText</span><span class="params">(String text, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数是指定类型的实例，否则抛出异常，不予放行</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">isInstanceOf</span><span class="params">(Class type, Object obj, String message)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 要求参数 `subType` 必须是参数 superType 的子类或实现类，否则抛出异常，不予放行</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">isAssignable</span><span class="params">(Class superType, Class subType, String message)</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="ObjectUtils-对象、数组、集合操作"><a href="#ObjectUtils-对象、数组、集合操作" class="headerlink" title="ObjectUtils 对象、数组、集合操作"></a>ObjectUtils 对象、数组、集合操作</h2><blockquote>
<p>获取对象的基本信息</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取对象的类名。参数为 null 时，返回字符串："null" </span></span><br><span class="line"><span class="function">String <span class="title">nullSafeClassName</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 参数为 null 时，返回 0</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nullSafeHashCode</span><span class="params">(Object object)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 参数为 null 时，返回字符串："null"</span></span></span><br><span class="line"><span class="function">String <span class="title">nullSafeToString</span><span class="params">(<span class="keyword">boolean</span>[] array)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 获取对象 HashCode（十六进制形式字符串）。参数为 null 时，返回 0 </span></span></span><br><span class="line"><span class="function">String <span class="title">getIdentityHexString</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 获取对象的类名和 HashCode。参数为 null 时，返回字符串："" </span></span></span><br><span class="line"><span class="function">String <span class="title">identityToString</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 相当于 toString()方法，但参数为 null 时，返回字符串：""</span></span></span><br><span class="line"><span class="function">String <span class="title">getDisplayString</span><span class="params">(Object obj)</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>判断工具</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 判断数组是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(Object[] array)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断参数对象是否是数组</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isArray</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断数组中是否包含指定元素</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">containsElement</span><span class="params">(Object[] array, Object element)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 相等，或同为 null时，返回 true</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">nullSafeEquals</span><span class="params">(Object o1, Object o2)</span></span></span><br><span class="line"><span class="function"><span class="comment">/*</span></span></span><br><span class="line"><span class="function"><span class="comment">判断参数对象是否为空，判断标准为：</span></span></span><br><span class="line"><span class="function"><span class="comment">    Optional: Optional.empty()</span></span></span><br><span class="line"><span class="function"><span class="comment">       Array: length == 0</span></span></span><br><span class="line"><span class="function"><span class="comment">CharSequence: length == 0</span></span></span><br><span class="line"><span class="function"><span class="comment">  Collection: Collection.isEmpty()</span></span></span><br><span class="line"><span class="function"><span class="comment">         Map: Map.isEmpty()</span></span></span><br><span class="line"><span class="function"><span class="comment"> */</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(Object obj)</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>其他</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 向参数数组的末尾追加新元素，并返回一个新数组</span></span><br><span class="line">&lt;A, O extends A&gt; A[] addObjectToArray(A[] array, O obj)</span><br><span class="line"><span class="comment">// 原生基础类型数组 --&gt; 包装类数组</span></span><br><span class="line">Object[] toObjectArray(Object source)</span><br></pre></td></tr></table></figure>
<h1 id="StringUtils"><a href="#StringUtils" class="headerlink" title="StringUtils"></a>StringUtils</h1><blockquote>
<p>字符串判断工具</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 判断字符串是否为 null，或 ""。注意，包含空白符的字符串为非空</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(Object str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断字符串是否是以指定内容结束。忽略大小写</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">endsWithIgnoreCase</span><span class="params">(String str, String suffix)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断字符串是否已指定内容开头。忽略大小写</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">startsWithIgnoreCase</span><span class="params">(String str, String prefix)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 是否包含空白符</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">containsWhitespace</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断字符串非空且长度不为 0，即，Not Empty</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">hasLength</span><span class="params">(CharSequence str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断字符串是否包含实际内容，即非仅包含空白符，也就是 Not Blank</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">hasText</span><span class="params">(CharSequence str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断字符串指定索引处是否包含一个子串。</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">substringMatch</span><span class="params">(CharSequence str, <span class="keyword">int</span> index, CharSequence substring)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 计算一个字符串中指定子串的出现次数</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countOccurrencesOf</span><span class="params">(String str, String sub)</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>字符串操作工具</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查找并替换指定子串</span></span><br><span class="line"><span class="function">String <span class="title">replace</span><span class="params">(String inString, String oldPattern, String newPattern)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 去除尾部的特定字符</span></span></span><br><span class="line"><span class="function">String <span class="title">trimTrailingCharacter</span><span class="params">(String str, <span class="keyword">char</span> trailingCharacter)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 去除头部的特定字符</span></span></span><br><span class="line"><span class="function">String <span class="title">trimLeadingCharacter</span><span class="params">(String str, <span class="keyword">char</span> leadingCharacter)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 去除头部的空白符</span></span></span><br><span class="line"><span class="function">String <span class="title">trimLeadingWhitespace</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 去除头部的空白符</span></span></span><br><span class="line"><span class="function">String <span class="title">trimTrailingWhitespace</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 去除头部和尾部的空白符</span></span></span><br><span class="line"><span class="function">String <span class="title">trimWhitespace</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 删除开头、结尾和中间的空白符</span></span></span><br><span class="line"><span class="function">String <span class="title">trimAllWhitespace</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 删除指定子串</span></span></span><br><span class="line"><span class="function">String <span class="title">delete</span><span class="params">(String inString, String pattern)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 删除指定字符（可以是多个）</span></span></span><br><span class="line"><span class="function">String <span class="title">deleteAny</span><span class="params">(String inString, String charsToDelete)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 对数组的每一项执行 trim() 方法</span></span></span><br><span class="line"><span class="function">String[] <span class="title">trimArrayElements</span><span class="params">(String[] array)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 将 URL 字符串进行解码</span></span></span><br><span class="line"><span class="function">String <span class="title">uriDecode</span><span class="params">(String source, Charset charset)</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>路径相关工具方法</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 解析路径字符串，优化其中的 “..” </span></span><br><span class="line"><span class="function">String <span class="title">cleanPath</span><span class="params">(String path)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 解析路径字符串，解析出文件名部分</span></span></span><br><span class="line"><span class="function">String <span class="title">getFilename</span><span class="params">(String path)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 解析路径字符串，解析出文件后缀名</span></span></span><br><span class="line"><span class="function">String <span class="title">getFilenameExtension</span><span class="params">(String path)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 比较两个两个字符串，判断是否是同一个路径。会自动处理路径中的 “..” </span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">pathEquals</span><span class="params">(String path1, String path2)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 删除文件路径名中的后缀部分</span></span></span><br><span class="line"><span class="function">String <span class="title">stripFilenameExtension</span><span class="params">(String path)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 以 “. 作为分隔符，获取其最后一部分</span></span></span><br><span class="line"><span class="function">String <span class="title">unqualify</span><span class="params">(String qualifiedName)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 以指定字符作为分隔符，获取其最后一部分</span></span></span><br><span class="line"><span class="function">String <span class="title">unqualify</span><span class="params">(String qualifiedName, <span class="keyword">char</span> separator)</span></span></span><br></pre></td></tr></table></figure>
<h1 id="CollectionUtils"><a href="#CollectionUtils" class="headerlink" title="CollectionUtils"></a>CollectionUtils</h1><blockquote>
<p>集合判断工具</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 判断 List/Set 是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(Collection&lt;?&gt; collection)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断 Map 是否为空</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(Map&lt;?,?&gt; map)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断 List/Set 中是否包含某个对象</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">containsInstance</span><span class="params">(Collection&lt;?&gt; collection, Object element)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 以迭代器的方式，判断 List/Set 中是否包含某个对象</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(Iterator&lt;?&gt; iterator, Object element)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断 List/Set 是否包含某些对象中的任意一个</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">containsAny</span><span class="params">(Collection&lt;?&gt; source, Collection&lt;?&gt; candidates)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 判断 List/Set 中的每个元素是否唯一。即 List/Set 中不存在重复元素</span></span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">hasUniqueObject</span><span class="params">(Collection&lt;?&gt; collection)</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>集合操作工具</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将 Array 中的元素都添加到 List/Set 中</span></span><br><span class="line">&lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">mergeArrayIntoCollection</span><span class="params">(Object array, Collection&lt;E&gt; collection)</span>  </span></span><br><span class="line"><span class="function"><span class="comment">// 将 Properties 中的键值对都添加到 Map 中</span></span></span><br><span class="line"><span class="function">&lt;K,V&gt; <span class="keyword">void</span> <span class="title">mergePropertiesIntoMap</span><span class="params">(Properties props, Map&lt;K,V&gt; map)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 返回 List 中最后一个元素</span></span></span><br><span class="line"><span class="function">&lt;T&gt; T <span class="title">lastElement</span><span class="params">(List&lt;T&gt; list)</span>  </span></span><br><span class="line"><span class="function"><span class="comment">// 返回 Set 中最后一个元素</span></span></span><br><span class="line"><span class="function">&lt;T&gt; T <span class="title">lastElement</span><span class="params">(Set&lt;T&gt; set)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 返回参数 candidates 中第一个存在于参数 source 中的元素</span></span></span><br><span class="line"><span class="function">&lt;E&gt; E <span class="title">findFirstMatch</span><span class="params">(Collection&lt;?&gt; source, Collection&lt;E&gt; candidates)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 返回 List/Set 中指定类型的元素。</span></span></span><br><span class="line"><span class="function">&lt;T&gt; T <span class="title">findValueOfType</span><span class="params">(Collection&lt;?&gt; collection, Class&lt;T&gt; type)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 返回 List/Set 中指定类型的元素。如果第一种类型未找到，则查找第二种类型，以此类推</span></span></span><br><span class="line"><span class="function">Object <span class="title">findValueOfType</span><span class="params">(Collection&lt;?&gt; collection, Class&lt;?&gt;[] types)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 返回 List/Set 中元素的类型</span></span></span><br><span class="line"><span class="function">Class&lt;?&gt; <span class="title">findCommonElementType</span><span class="params">(Collection&lt;?&gt; collection)</span></span></span><br></pre></td></tr></table></figure>
<h1 id="FileCopyUtils"><a href="#FileCopyUtils" class="headerlink" title="FileCopyUtils"></a>FileCopyUtils</h1><blockquote>
<p>输入</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 从文件中读入到字节数组中</span></span><br><span class="line"><span class="keyword">byte</span>[] copyToByteArray(File in)</span><br><span class="line"><span class="comment">// 从输入流中读入到字节数组中</span></span><br><span class="line"><span class="keyword">byte</span>[] copyToByteArray(InputStream in)</span><br><span class="line"><span class="comment">// 从输入流中读入到字符串中</span></span><br><span class="line"><span class="function">String <span class="title">copyToString</span><span class="params">(Reader in)</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>输出</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 从字节数组到文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(<span class="keyword">byte</span>[] in, File out)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 从文件到文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">copy</span><span class="params">(File in, File out)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 从字节数组到输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(<span class="keyword">byte</span>[] in, OutputStream out)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 从输入流到输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">copy</span><span class="params">(InputStream in, OutputStream out)</span> </span></span><br><span class="line"><span class="function"><span class="comment">// 从输入流到输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">copy</span><span class="params">(Reader in, Writer out)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 从字符串到输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(String in, Writer out)</span></span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>bootstrap-table 的使用问题</title>
    <url>/posts/b2990e54.html</url>
    <content><![CDATA[<h1 id="自定义分页、排序等参数"><a href="#自定义分页、排序等参数" class="headerlink" title="自定义分页、排序等参数"></a>自定义分页、排序等参数</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// bootstrap table初始化</span></span><br><span class="line">$table.bootstrapTable(&#123;</span><br><span class="line">    url: <span class="string">'$&#123;ctx&#125;/manage/log/list'</span>,</span><br><span class="line">    height: getHeight(),</span><br><span class="line">    striped: <span class="literal">true</span>,</span><br><span class="line">    search: <span class="literal">true</span>,</span><br><span class="line">    showRefresh: <span class="literal">true</span>,</span><br><span class="line">    showColumns: <span class="literal">true</span>,</span><br><span class="line">    minimumCountColumns: <span class="number">2</span>,</span><br><span class="line">    clickToSelect: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// --------------------------------------------------------</span></span><br><span class="line">    <span class="comment">// 自定义分页、排序等参数</span></span><br><span class="line">    <span class="comment">// 如果配置'limit'，则 queryParams 默认参数是 offset、limit、order、search、sort</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    queryParamsType: 'limit',</span></span><br><span class="line"><span class="comment">    queryParams: function (params) &#123;</span></span><br><span class="line"><span class="comment">        return &#123;</span></span><br><span class="line"><span class="comment">            page: params.pageNumber,</span></span><br><span class="line"><span class="comment">            size: params.pageSize,</span></span><br><span class="line"><span class="comment">            search: params.search,</span></span><br><span class="line"><span class="comment">            sort: params.sort,</span></span><br><span class="line"><span class="comment">            order: params.order</span></span><br><span class="line"><span class="comment">        &#125;;</span></span><br><span class="line"><span class="comment">    &#125;,</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">// 这里配置成''，则 queryParams 参数是 pageNumber、pageSize、searchText、sortName、sortOrder</span></span><br><span class="line">    queryParamsType: <span class="string">''</span>,</span><br><span class="line">    queryParams: <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            page: params.pageNumber,</span><br><span class="line">            size: params.pageSize,</span><br><span class="line">            search: params.searchText,</span><br><span class="line">            sort: params.sortName,</span><br><span class="line">            order: params.sortOrder</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// --------------------------------------------------------</span></span><br><span class="line">    detailView: <span class="literal">true</span>,</span><br><span class="line">    detailFormatter: <span class="string">'detailFormatter'</span>,</span><br><span class="line">    pagination: <span class="literal">true</span>,</span><br><span class="line">    paginationLoop: <span class="literal">false</span>,</span><br><span class="line">    sidePagination: <span class="string">'server'</span>,</span><br><span class="line">    silentSort: <span class="literal">false</span>,</span><br><span class="line">    smartDisplay: <span class="literal">false</span>,</span><br><span class="line">    <span class="built_in">escape</span>: <span class="literal">true</span>,</span><br><span class="line">    searchOnEnterKey: <span class="literal">true</span>,</span><br><span class="line">    idField: <span class="string">'id'</span>,</span><br><span class="line">    maintainSelected: <span class="literal">true</span>,</span><br><span class="line">    toolbar: <span class="string">'#toolbar'</span>,</span><br><span class="line">    columns: [</span><br><span class="line">        &#123;<span class="attr">field</span>: <span class="string">'ck'</span>, <span class="attr">checkbox</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">field</span>: <span class="string">'id'</span>, <span class="attr">title</span>: <span class="string">'编号'</span>, <span class="attr">sortable</span>: <span class="literal">true</span>, <span class="attr">align</span>: <span class="string">'right'</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">field</span>: <span class="string">'description'</span>, <span class="attr">title</span>: <span class="string">'操作'</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">field</span>: <span class="string">'username'</span>, <span class="attr">title</span>: <span class="string">'操作用户'</span>, <span class="attr">align</span>: <span class="string">'right'</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
        <tag>bootstrap-table</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs 使用</title>
    <url>/posts/8d0f4649.html</url>
    <content><![CDATA[<h1 id="nvm：node-和-npm-多版本管理"><a href="#nvm：node-和-npm-多版本管理" class="headerlink" title="nvm：node 和 npm 多版本管理"></a>nvm：node 和 npm 多版本管理</h1><blockquote>
<p> windows 安装包下载：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a></p>
</blockquote>
<ul>
<li>配置环境变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># window 下配置</span><br><span class="line">## 假设 nvm 安装目录是D:\nvm，则配置：</span><br><span class="line">NVM_HOME=D:\nvm</span><br><span class="line">NVM_SYMLINK=D:\nvm\nodejs</span><br><span class="line"># D:\nvm\nodejs\bin\node</span><br><span class="line"></span><br><span class="line">## PATH 配置，新增</span><br><span class="line">%NVM_HOME%</span><br><span class="line">%NVM_SYMLINK%</span><br><span class="line"></span><br><span class="line"># mac 在</span><br><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">export NVM_SYMLINK_CURRENT=true</span><br><span class="line">## nvm 加速</span><br><span class="line">export NVM_NODEJS_ORG_MIRROR=&quot;https://npm.taobao.org/mirrors/node&quot;</span><br><span class="line">## 这句一定要放在NVM_DIR、NVM_NODEJS_ORG_MIRROR等配置之后</span><br><span class="line">### This loads nvm</span><br><span class="line">[ -s &quot;$(brew --prefix nvm)/nvm.sh&quot; ] &amp;&amp; . &quot;$(brew --prefix nvm)/nvm.sh&quot;</span><br><span class="line"># source &quot;$(brew --prefix nvm)/nvm.sh&quot;</span><br><span class="line">### This loads nvm bash_completion</span><br><span class="line">[ -s &quot;$(brew --prefix nvm)/etc/bash_completion.d/nvm&quot; ] &amp;&amp; . &quot;$(brew --prefix nvm)/etc/bash_completion.d/nvm&quot;</span><br><span class="line"># ~/.nvm/current/bin/node</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li><p>更换下载源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1、进入 nvm 安装目录，编辑 setting.txt，追加两行代码</span><br><span class="line">node_mirror: https://npm.taobao.org/mirrors/node/</span><br><span class="line"># 配置npm_mirror可能会导致npm、cnpm等安装依赖时各种错误</span><br><span class="line"># npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br><span class="line"></span><br><span class="line"># 2、通过命令行配置</span><br><span class="line">nvm node_mirror https://npm.taobao.org/mirrors/node/</span><br><span class="line"># 配置npm_mirror可能会导致npm、cnpm等安装依赖时各种错误</span><br><span class="line"># nvm npm_mirror https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 nvm 管理版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装最新版本node</span></span><br><span class="line">nvm install latest</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装某一个版本 node</span></span><br><span class="line">nvm install 10.22.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用某一具体版本</span></span><br><span class="line">nvm use 14.3.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出当前已安装的所有版本</span></span><br><span class="line">nvm list</span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载某一具体版本</span></span><br><span class="line">nvm uninstall 14.2.0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>使用nvm管理node、npm，不需要配置npm下载包路径</p>
<!-- more -->
<h1 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># npm install -g cnpm</span><br><span class="line"># npm install -g yarn</span><br><span class="line"></span><br><span class="line"># 查询源地址</span><br><span class="line">yarn config get registry</span><br><span class="line"></span><br><span class="line"># 配置taobao源加速</span><br><span class="line">yarn config set registry &apos;https://registry.npm.taobao.org&apos;</span><br><span class="line"></span><br><span class="line"># 安装组件、插件</span><br><span class="line">yarn add ant-design-vue</span><br><span class="line">yarn add --dev hard-source-webpack-plugin</span><br></pre></td></tr></table></figure>
<h1 id="npm配置"><a href="#npm配置" class="headerlink" title="npm配置"></a>npm配置</h1><p>国内访问外网是很慢的，安装NodeJS是自带的npm地址默认是：<a href="http://registry.npmjs.org，访问很慢，所以一般换成国内镜像地址。" target="_blank" rel="noopener">http://registry.npmjs.org，访问很慢，所以一般换成国内镜像地址。</a></p>
<blockquote>
<p>用户目录下：.npmrc</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 NVM 安装node、npm不需要配置prefix、cache</span><br><span class="line"># prefix=D:\nvm\node_global</span><br><span class="line"># cache=D:\nvm\node_cache</span><br><span class="line">registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通过config命令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org/ npm info underscore</span><br><span class="line"><span class="comment">#（如果配置成功，这个命令会有字符串response）</span></span><br><span class="line">npm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<!-- more -->
<blockquote>
<p>命令行指定</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org/ info underscore</span><br></pre></td></tr></table></figure>
<blockquote>
<p>编辑node_modules/npm/.npmrc加入下面内容</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">registry = https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>
<p>如果上面的npm地址不行的话，可以试试淘宝的npm<br><a href="https://registry.npm.taobao.org或者https://r.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org或者https://r.npm.taobao.org/</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">npm --registry https://registry.npm.taobao.org/ info underscore</span><br></pre></td></tr></table></figure>
<h1 id="npm下载包路径"><a href="#npm下载包路径" class="headerlink" title="npm下载包路径"></a>npm下载包路径</h1><p>在安装完nodejs后，<code>npm install -g jshint</code>是被安装在默认路径（C:\Users\用户名\AppData\Roaming\npm）下的</p>
<p>可以通过修改nodejs安装路径下的node_modules/npm/.npmrc文件<br>prefix=D:\MyTools\nodejs\node_global （修改全局路径）<br>cache=D:\MyTools\nodejs\node_cache （修改全局路径）</p>
<p>请注意prefix、cache不能设置成一样的路径，否则通过npm安装模块时，会报错</p>
<h1 id="npm-使用"><a href="#npm-使用" class="headerlink" title="npm 使用"></a>npm 使用</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -S 是--save 的缩写，它可以让你安装的模块记录到package.json文件当中</span></span><br><span class="line">npm install -S xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是删除模块，也可以删除全局模块</span></span><br><span class="line">npm uninstall xxx</span><br><span class="line">npm uninstall -g xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># -D就是--save-dev 这样安装的包的名称及版本号就会存在package.json的devDependencies这个里面，而--save会将包的名称及版本号放在dependencies里面</span></span><br><span class="line">npm install -D xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 webpack 配置</span></span><br><span class="line">npm run eject</span><br></pre></td></tr></table></figure>
<h1 id="nrm：npm-registry-设置"><a href="#nrm：npm-registry-设置" class="headerlink" title="nrm：npm registry 设置"></a>nrm：npm registry 设置</h1><blockquote>
<p>使用 nrm 进行多 registry 切换</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g nrm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nrm ls</span></span><br><span class="line">D:\Workspace\vuejs-project&gt;nrm ls</span><br><span class="line"></span><br><span class="line">* npm ---- https://registry.npmjs.org/</span><br><span class="line">  cnpm --- http://r.cnpmjs.org/</span><br><span class="line">  taobao - https://registry.npm.taobao.org/</span><br><span class="line">  nj ----- https://registry.nodejitsu.com/</span><br><span class="line">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class="line">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class="line">  edunpm - http://registry.enpmjs.org/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nrm use taobao</span></span><br><span class="line">Registry has been set to: https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>
<h1 id="npm-check检查依赖包版本"><a href="#npm-check检查依赖包版本" class="headerlink" title="npm-check检查依赖包版本"></a>npm-check检查依赖包版本</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 npm-check</span></span><br><span class="line">npm install -g npm-check</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查 npm 包版本</span></span><br><span class="line">npm-check -u -g</span><br><span class="line">npm-check -u -S</span><br><span class="line">npm-check -u -D</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>npm</tag>
        <tag>cnpm</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-cli 2.x 使用</title>
    <url>/posts/58b4b1b8.html</url>
    <content><![CDATA[<blockquote>
<p>安装 vue-cli</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局安装</span></span><br><span class="line">npm install -g vue-cli</span><br></pre></td></tr></table></figure>
<p>如果安装失败，可以使用<code>npm cache clean</code>清理缓存，然后再重新安装</p>
<blockquote>
<p> 生成项目</p>
</blockquote>
<p>首先需要在命令行中进入到工作区间，然后输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vue init webpack vue-project</span><br></pre></td></tr></table></figure>
<p>全局安装<code>webpack</code>命令<code>npm install -g webpack</code></p>
<p>vue-project 是自定义的项目名称，命令执行之后，会在当前目录生成一个以该名称命名的项目文件夹</p>
<blockquote>
<p>proxyTable 代理设置</p>
</blockquote>
<p>前后端分离项目本地测试，可以使用 proxyTable 代理到后台服务器，方便调试</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">    '/api': &#123;</span><br><span class="line">        targer: 'https:localhost:8080/service/api',</span><br><span class="line">        secure: false,</span><br><span class="line">        changeOrigin: true,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">            '^/api': '/'</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用时直接<strong>/api/接口名</strong>就行了 </p>
]]></content>
      <categories>
        <category>vuejs</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>nodejs</tag>
        <tag>vue-cli</tag>
      </tags>
  </entry>
  <entry>
    <title>树结构数据转换</title>
    <url>/posts/bd4212c6.html</url>
    <content><![CDATA[<blockquote>
<p>公共方法</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 树形数据转换</span><br><span class="line"> * @param &#123;*&#125; data</span><br><span class="line"> * @param &#123;*&#125; id</span><br><span class="line"> * @param &#123;*&#125; pid</span><br><span class="line"> */</span><br><span class="line"><span class="built_in">export</span> <span class="keyword">function</span> treeDataTranslate(data, id = <span class="string">'id'</span>, pid = <span class="string">'parentId'</span>) &#123;</span><br><span class="line">  var res = []</span><br><span class="line">  var temp = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (var i = 0; i &lt; data.length; i++) &#123;</span><br><span class="line">    temp[data[i][id]] = data[i]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (var k = 0; k &lt; data.length; k++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (temp[data[k][pid]] &amp;&amp; data[k][id] !== data[k][pid]) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!temp[data[k][pid]][<span class="string">'children'</span>]) &#123;</span><br><span class="line">        temp[data[k][pid]][<span class="string">'children'</span>] = []</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!temp[data[k][pid]][<span class="string">'_level'</span>]) &#123;</span><br><span class="line">        temp[data[k][pid]][<span class="string">'_level'</span>] = 1</span><br><span class="line">      &#125;</span><br><span class="line">      data[k][<span class="string">'_level'</span>] = temp[data[k][pid]]._level + 1</span><br><span class="line">      temp[data[k][pid]][<span class="string">'children'</span>].push(data[k])</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.push(data[k])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vuejs</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>查询 Linux 内核</title>
    <url>/posts/878590fa.html</url>
    <content><![CDATA[<h1 id="arch"><a href="#arch" class="headerlink" title="arch"></a>arch</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yl ~]$ arch</span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：x86_64、x64、AMD64基本上是同一个东西</p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>arch</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux cat 命令</title>
    <url>/posts/be15a742.html</url>
    <content><![CDATA[<h1 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h1><h2 id="统计出现次数"><a href="#统计出现次数" class="headerlink" title="统计出现次数"></a>统计出现次数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># linux统计某一文件中字符串“sent ip”出现的次数：</span></span><br><span class="line">cat nohup.log |grep <span class="string">"sent ip"</span> |wc -l</span><br></pre></td></tr></table></figure>
<h2 id="清空默认文件中的内容"><a href="#清空默认文件中的内容" class="headerlink" title="清空默认文件中的内容"></a>清空默认文件中的内容</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /dev/null &gt; filename</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>cat</tag>
      </tags>
  </entry>
  <entry>
    <title>chage 修改密码策略</title>
    <url>/posts/594be1ea.html</url>
    <content><![CDATA[<h1 id="chage"><a href="#chage" class="headerlink" title="chage"></a>chage</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看密码策略</span></span></span><br><span class="line">chage -l 账号</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码有效期</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Minimum number of days between password change</span></span></span><br><span class="line">chage -m 360 账号</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Maximum number of days between password change</span></span></span><br><span class="line">chage -M 360 账号</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>chage</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux cp 命令</title>
    <url>/posts/2835e3e.html</url>
    <content><![CDATA[<h1 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h1><h2 id="复制文件夹"><a href="#复制文件夹" class="headerlink" title="复制文件夹"></a>复制文件夹</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -r [old <span class="built_in">source</span>] -d [new <span class="built_in">source</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># -p 保持原有文件权限</span></span><br><span class="line">cp -r -p [old <span class="built_in">source</span>] -d [new <span class="built_in">source</span>]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>cp</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux crontab 命令</title>
    <url>/posts/b0b79272.html</url>
    <content><![CDATA[<h1 id="crontab-使用注意事项"><a href="#crontab-使用注意事项" class="headerlink" title="crontab 使用注意事项"></a>crontab 使用注意事项</h1><p>如果通过 crontab 执行<br>1、crontab 无法获取 jdk 变量，要在 java 命令之前写入jdk绝对路径<br>2、要把路径切换到要执行的 sh 路径下<br>注意：二者缺一不可</p>
<a id="more"></a>
<h2 id="查找-jdk-路径的方法"><a href="#查找-jdk-路径的方法" class="headerlink" title="查找 jdk 路径的方法"></a>查找 jdk 路径的方法</h2><ul>
<li><p>1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br><span class="line">/usr/java/jdk1.6.0_45/bin/java</span><br></pre></td></tr></table></figure>
</li>
<li><p>2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">which</span> java</span><br><span class="line">/usr/bin/java</span><br><span class="line">$ ls -lrt /usr/bin/java <span class="comment">#/usr/bin/java是which java查出来的路径</span></span><br><span class="line">lrwxrwxrwx. 1 root root 22 Sep 16  2015 /usr/bin/java -&gt; /etc/alternatives/java</span><br><span class="line">$ ls -lrt /etc/alternatives/java <span class="comment">#/etc/alternatives/java是ls -lrt /usr/bin/java查出来的路径</span></span><br><span class="line"> lrwxrwxrwx. 1 root root 46 Sep 16  2015 /etc/alternatives/java -&gt; /usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="查询-crontab-定时器配置情况"><a href="#查询-crontab-定时器配置情况" class="headerlink" title="查询 crontab 定时器配置情况"></a>查询 crontab 定时器配置情况</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure>
<h2 id="编辑-crontab-定时器"><a href="#编辑-crontab-定时器" class="headerlink" title="编辑 crontab 定时器"></a>编辑 crontab 定时器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line"><span class="comment"># 当 crontab 调用时，错误和标准输出会写成 mail 通知你</span></span><br><span class="line">* * * * * /opt/restart.sh</span><br><span class="line"><span class="comment"># 标准输出重定向到 /dev/null，输出到这里就找不回来了</span></span><br><span class="line">* * * * * /opt/restart.sh &gt; /dev/null</span><br><span class="line"><span class="comment"># 标准输出和错误输出都重定向到 /dev/null</span></span><br><span class="line">* * * * * /opt/restart.sh &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"><span class="comment"># 覆盖输出到指定日志文件</span></span><br><span class="line">* * * * * /opt/restart.sh &gt;/opt/logs/xxxxlog 2&gt;&amp;1</span><br><span class="line"><span class="comment"># 追加输出到指定日志文件</span></span><br><span class="line">* * * * * /opt/restart.sh &gt;&gt;/opt/logs/xxxxlog 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>crontab</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux curl 命令</title>
    <url>/posts/aea02818.html</url>
    <content><![CDATA[<h1 id="查询出口IP"><a href="#查询出口IP" class="headerlink" title="查询出口IP"></a>查询出口IP</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl icanhazip.com</span><br></pre></td></tr></table></figure>
<h1 id="GET-请求"><a href="#GET-请求" class="headerlink" title="GET 请求"></a>GET 请求</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://www.baidu.com?q=xxxx</span><br></pre></td></tr></table></figure>
<h2 id="POST-请求"><a href="#POST-请求" class="headerlink" title="POST 请求"></a>POST 请求</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://ip:port/api/add_user -XPOST -d <span class="string">"send message..."</span></span><br></pre></td></tr></table></figure>
<h2 id="发送-POST-JSON-请求"><a href="#发送-POST-JSON-请求" class="headerlink" title="发送 POST JSON 请求"></a>发送 POST JSON 请求</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -H <span class="string">"Content-Type: application/json"</span> -X POST  --data <span class="string">'&#123;"data":"1"&#125;'</span> http://127.0.0.1/</span><br></pre></td></tr></table></figure>
<h2 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -x 192.168.2.5:3128 https://www.baidu.com?q=xxxx</span><br></pre></td></tr></table></figure>
<h2 id="输出请求信息"><a href="#输出请求信息" class="headerlink" title="输出请求信息"></a>输出请求信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># http_code</span></span><br><span class="line"><span class="comment"># time_connect</span></span><br><span class="line"><span class="comment"># time_starttransfer</span></span><br><span class="line"><span class="comment"># time_total</span></span><br><span class="line"><span class="comment"># size_download</span></span><br><span class="line"><span class="comment"># speed_download</span></span><br><span class="line"><span class="comment"># 参考地址：</span></span><br><span class="line">curl http://www.baidu.com?q=xxxx -so /dev/null -w <span class="string">"%&#123;http_code&#125;\t%&#123;time_connect&#125;\t%&#123;time_starttransfer&#125;\t%&#123;time_total&#125;\t%&#123;size_download&#125;\t%&#123;speed_download&#125;\t"</span></span><br></pre></td></tr></table></figure>
<h1 id="下载文件并重命名"><a href="#下载文件并重命名" class="headerlink" title="下载文件并重命名"></a>下载文件并重命名</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> culr -L &lt;url&gt; -o &lt;filename&gt;</span></span><br><span class="line">curl -L http://mirrors.aliyun.com/repo/Centos-7.repo -o /etc/yum.repos.d/CentOS-Base.repo \</span><br></pre></td></tr></table></figure>
<h1 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mail.txt 内容</span></span><br><span class="line">tee ./mail.txt &lt;&lt;-'EOF'</span><br><span class="line">From:test01@163.com</span><br><span class="line">To:test02@163.com</span><br><span class="line">Subject: test send email</span><br><span class="line"></span><br><span class="line">test send email!!!!!!</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发送邮件</span></span><br><span class="line">curl -s --url "smtp://smtp.163.net" --mail-from "test01@163.com" --user "test01@163.com:123456" --mail-rcpt "test02@163.com" --upload-file mail.txt</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参数说明</p>
</blockquote>
<ul>
<li>–url：邮箱服务</li>
<li>–mail-from：发送者邮箱</li>
<li>–user：发送正邮箱账号密码，账号密码使用冒号隔开</li>
<li>– mail-rcpt：接收者邮箱</li>
<li>–upload-file：邮件内容，写法参考 mail.txt</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>curl</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux du 命令</title>
    <url>/posts/2e023d93.html</url>
    <content><![CDATA[<h1 id="du"><a href="#du" class="headerlink" title="du"></a>du</h1><h2 id="计算当前文件夹下占用空间，排序"><a href="#计算当前文件夹下占用空间，排序" class="headerlink" title="计算当前文件夹下占用空间，排序"></a>计算当前文件夹下占用空间，排序</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">du -sh * | sort -nr</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>du</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux find 命令</title>
    <url>/posts/7b744fec.html</url>
    <content><![CDATA[<h2 id="查找文件并删除"><a href="#查找文件并删除" class="headerlink" title="查找文件并删除"></a>查找文件并删除</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除指定时间前的 jpg 文件</span></span><br><span class="line">find /opt/upload/ -mtime +30 -<span class="built_in">type</span> f -name *.jpg -<span class="built_in">exec</span> rm -f &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除隐藏文件（-fr）</span></span><br><span class="line">find /opt/upload/ -<span class="built_in">type</span> d -name .svn -<span class="built_in">exec</span> rm -fr &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除30天前的文件</span></span><br><span class="line">find /opt/upload -mtime +30 -<span class="built_in">type</span> f -name <span class="string">"*.jpg"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># find: 路径必须在表达式之前，在*前加\</span></span><br><span class="line">find /opt/upload/ -mtime +15 -<span class="built_in">type</span> f -name \*.<span class="built_in">log</span> -<span class="built_in">exec</span> rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<h2 id="打印指定时间前的文件"><a href="#打印指定时间前的文件" class="headerlink" title="打印指定时间前的文件"></a>打印指定时间前的文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find project/upload/ -mtime +30 -<span class="built_in">type</span> f -<span class="built_in">print</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>find</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux ftp 命令</title>
    <url>/posts/3a2165c2.html</url>
    <content><![CDATA[<h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ftp &lt;ip&gt; &lt;port&gt;</span><br></pre></td></tr></table></figure>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">get &lt;file_name&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h1 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h1><ul>
<li><p>put</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">put /path/file.xls</span><br></pre></td></tr></table></figure>
</li>
<li><p>mput</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果有多个文件，每个文件都要确认一次</span></span><br><span class="line">mput /path/*.xls</span><br><span class="line"></span><br><span class="line"><span class="comment"># prompt模式，多个文件也不需要手动确认</span></span><br><span class="line">prompt</span><br><span class="line">mput *.xls</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">prompt</span><br><span class="line">mdelete *.txt</span><br></pre></td></tr></table></figure>
<h1 id="批量删除脚本"><a href="#批量删除脚本" class="headerlink" title="批量删除脚本"></a>批量删除脚本</h1><blockquote>
<p>ftp_clear.sh</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">FTPHOST=<span class="string">"192.168.1.10"</span></span><br><span class="line">USERNAME=<span class="string">"test"</span></span><br><span class="line">PASSWORD=<span class="string">"test_password"</span></span><br><span class="line"></span><br><span class="line">ftp -nv <span class="variable">$FTPHOST</span> &lt;&lt;!FTPRUN</span><br><span class="line">user <span class="variable">$USERNAME</span> <span class="variable">$PASSWORD</span></span><br><span class="line"><span class="built_in">cd</span> test_dir</span><br><span class="line">prompt</span><br><span class="line">mdelete *.txt</span><br><span class="line"><span class="built_in">bye</span></span><br><span class="line">!FTPRUN</span><br></pre></td></tr></table></figure>
<ul>
<li>登入FTP 服务器并传送备份<br>ftp -nv \$FTPHOST</li>
<li>用户名、密码<br>user \$USERNAME \$PASSWORD</li>
<li>进入指定目录<br>cd test_dir</li>
<li>开启prompt模式<br>prompt</li>
<li>批量删除<br>mdelete *.txt</li>
<li>退出<br>bye</li>
</ul>
<blockquote>
<p>crontab 定时器</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*/30 * * * * sh ftp_clear.sh &gt;&gt; ftp_clear.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux grep 命令</title>
    <url>/posts/1f104b3f.html</url>
    <content><![CDATA[<h1 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h1><h2 id="统计出现次数"><a href="#统计出现次数" class="headerlink" title="统计出现次数"></a>统计出现次数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">'sign.*time.*openid'</span> access_p80_weixinv3.log | awk <span class="string">'&#123;a[$1]++&#125;END&#123;for(i in a)print a[i]"\t"i&#125;'</span> | sort -n</span><br></pre></td></tr></table></figure>
<p>4       183.3.234.45<br>10      183.3.234.57<br>20      183.3.234.58</p>
<h1 id="分组统计"><a href="#分组统计" class="headerlink" title="分组统计"></a>分组统计</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -o "正则表达式" temp.txt | sort |uniq -c |sort -k1,1nr</span><br></pre></td></tr></table></figure>
<h2 id="查询前后日志"><a href="#查询前后日志" class="headerlink" title="查询前后日志"></a>查询前后日志</h2><p>grep -5 ‘parttern’ inputfile //打印匹配行的前后5行<br>grep -C 5 ‘parttern’ inputfile //打印匹配行的前后5行<br>grep -A 5 ‘parttern’ inputfile //打印匹配行的后5行<br>grep -B 5 ‘parttern’ inputfile //打印匹配行的前5行</p>
<h1 id="正则：数字"><a href="#正则：数字" class="headerlink" title="正则：数字"></a>正则：数字</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 正则匹配1802****269的手机号码</span></span><br><span class="line">grep <span class="string">'1802[0-9]\&#123;4\&#125;269'</span> info.log</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>grep</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux htop 命令</title>
    <url>/posts/14d84520.html</url>
    <content><![CDATA[<h1 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install epel-release -y</span><br><span class="line">sudo yum install htop -y</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">htop</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>htop</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux lsof 命令</title>
    <url>/posts/fc091577.html</url>
    <content><![CDATA[<h1 id="检测端口未被占用"><a href="#检测端口未被占用" class="headerlink" title="检测端口未被占用"></a>检测端口未被占用</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:&lt;port&gt;</span><br></pre></td></tr></table></figure>
<p>指定进程号，可以查看该进程打开的文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">lsof -p &lt;pid&gt;</span><br></pre></td></tr></table></figure>
<h1 id="查询所有进程的-open-files-数量"><a href="#查询所有进程的-open-files-数量" class="headerlink" title="查询所有进程的 open files 数量"></a>查询所有进程的 open files 数量</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">psof_file=~/psof.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 每次执行前，清空 psof_file 文件内容</span></span><br><span class="line">echo "" &gt; $psof_file</span><br><span class="line"><span class="meta">#</span><span class="bash"> $(ps -eo pid | grep -v PID) 获取所有进程 id</span></span><br><span class="line">for pid in $(ps -eo pid | grep -v PID)</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 查询进程的 open files 数量</span></span><br><span class="line">  do echo $pid":"$(lsof -p $pid|wc -l) &gt;&gt; $psof_file;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$pid</span><span class="string">":"</span>$(lsof -n|grep <span class="variable">$pid</span>|wc -l) &gt;&gt; <span class="variable">$psof_file</span>;</span></span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash"> 对结果进行排序</span></span><br><span class="line">sort -nrk 2 -t: $psof_file</span><br></pre></td></tr></table></figure>
<p>统计各进程打开句柄数：lsof -n|awk ‘{print $2}’|sort|uniq -c|sort -nr</p>
<p>统计各用户打开句柄数：lsof -n|awk ‘{print $3}’|sort|uniq -c|sort -nr</p>
<p>统计各命令打开句柄数：lsof -n|awk ‘{print $1}’|sort|uniq -c|sort -nr</p>
<p>第一列是打开的句柄数，第二列是进程ID。</p>
<p>查看打开句柄总数<br>lsof -n|awk ‘{print $2}’|wc -l<br>查看系统中进程占用的句柄数，根据打开文件句柄的数量降序排列，其中第二列为进程ID：<br>lsof -n|awk ‘{print $2}’|sort|uniq -c|sort -nr|more<br>查询系统中指定进程占用的句柄数<br>lsof -n | grep [PID]| wc -l</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@grg-zhtest1 ~]# lsof -h</span><br><span class="line">lsof 4.87</span><br><span class="line"> latest revision: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/</span><br><span class="line"> latest FAQ: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/FAQ</span><br><span class="line"> latest man page: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/lsof_man</span><br><span class="line"> usage: [-?abhKlnNoOPRtUvVX] [+|-c c] [+|-d s] [+D D] [+|-f[gG]] [+|-e s]</span><br><span class="line"> [-F [f]] [-g [s]] [-i [i]] [+|-L [l]] [+m [m]] [+|-M] [-o [o]] [-p s]</span><br><span class="line">[+|-r [t]] [-s [p:s]] [-S [t]] [-T [t]] [-u s] [+|-w] [-x [fl]] [--] [names]</span><br><span class="line">Defaults in parentheses; comma-separated set (s) items; dash-separated ranges.</span><br><span class="line">  -?|-h list help          -a AND selections (OR)     -b avoid kernel blocks</span><br><span class="line">  -c c  cmd c ^c /c/[bix]  +c w  COMMAND width (9)    +d s  dir s files</span><br><span class="line">  -d s  select by FD set   +D D  dir D tree *SLOW?*   +|-e s  exempt s *RISKY*</span><br><span class="line">  -i select IPv[46] files  -K list tasKs (threads)    -l list UID numbers</span><br><span class="line">  -n no host names         -N select NFS files        -o list file offset</span><br><span class="line">  -O no overhead *RISKY*   -P no port names           -R list paRent PID</span><br><span class="line">  -s list file size        -t terse listing           -T disable TCP/TPI info</span><br><span class="line">  -U select Unix socket    -v list version info       -V verbose search</span><br><span class="line">  +|-w  Warnings (+)       -X skip TCP&amp;UDP* files     -Z Z  context [Z]</span><br><span class="line">  -- end option scan     </span><br><span class="line">  +f|-f  +filesystem or -file names     +|-f[gG] flaGs </span><br><span class="line">  -F [f] select fields; -F? for help  </span><br><span class="line">  +|-L [l] list (+) suppress (-) link counts &lt; l (0 = all; default = 0)</span><br><span class="line">                                        +m [m] use|create mount supplement</span><br><span class="line">  +|-M   portMap registration (-)       -o o   o 0t offset digits (8)</span><br><span class="line">  -p s   exclude(^)|select PIDs         -S [t] t second stat timeout (15)</span><br><span class="line">  -T qs TCP/TPI Q,St (s) info</span><br><span class="line">  -g [s] exclude(^)|select and print process group IDs</span><br><span class="line">  -i i   select by IPv[46] address: [46][proto][@host|addr][:svc_list|port_list]</span><br><span class="line">  +|-r [t[m&lt;fmt&gt;]] repeat every t seconds (15);  + until no files, - forever.</span><br><span class="line">       An optional suffix to t is m&lt;fmt&gt;; m must separate t from &lt;fmt&gt; and</span><br><span class="line">      &lt;fmt&gt; is an strftime(3) format for the marker line.</span><br><span class="line">  -s p:s  exclude(^)|select protocol (p = TCP|UDP) states by name(s).</span><br><span class="line">  -u s   exclude(^)|select login|UID set s</span><br><span class="line">  -x [fl] cross over +d|+D File systems or symbolic Links</span><br><span class="line">  names  select named files or files on named file systems</span><br><span class="line">Anyone can list all files; /dev warnings disabled; kernel ID check disabled.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>lsof</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux nc 命令</title>
    <url>/posts/1f88fa1.html</url>
    <content><![CDATA[<h1 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h1><p>监听端口的网络</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nc -l 8882</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>nc</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux netstat 命令</title>
    <url>/posts/6c05ba39.html</url>
    <content><![CDATA[<h1 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h1><blockquote>
<p>netstat</p>
</blockquote>
<h2 id="通过进程查看占用端口"><a href="#通过进程查看占用端口" class="headerlink" title="通过进程查看占用端口"></a>通过进程查看占用端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># netstat -nap | grep 9836</span></span><br><span class="line">$ netstat -anp | grep &lt;pid&gt;</span><br><span class="line">tcp        0      0 0.0.0.0:8880            0.0.0.0:*               LISTEN      15910/java          </span><br><span class="line">tcp        0      0 0.0.0.0:8881            0.0.0.0:*               LISTEN      20854/java          </span><br><span class="line">tcp        0      0 0.0.0.0:8883            0.0.0.0:*               LISTEN      18394/docker-proxy         </span><br><span class="line">tcp6       0      0 :::8883                 :::*                    LISTEN      18400/docker-proxy  </span><br><span class="line">unix  2      [ ACC ]     STREAM     LISTENING     230283   17888/containerd-sh  /run/containerd/s/f54f5c6b3963ea8fcec7d3c2baefa7fcb70884d50299148a00d747cc3c59980d</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     234595   17888/containerd-sh  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     229049   17888/containerd-sh  /run/containerd/s/f54f5c6b3963ea8fcec7d3c2baefa7fcb70884d50299148a00d747cc3c59980d</span><br><span class="line"></span><br><span class="line">$ netstat -anl|grep 888</span><br><span class="line">tcp        0      0 0.0.0.0:8880            0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:8881            0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:8883            0.0.0.0:*               LISTEN     </span><br><span class="line">tcp6       0      0 :::8883                 :::*                    LISTEN</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>netstat</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux ls 命令</title>
    <url>/posts/53b5960c.html</url>
    <content><![CDATA[<h1 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 统计文件夹中文件数</span></span><br><span class="line">ls -l |grep <span class="string">"^-"</span>|wc -l</span><br></pre></td></tr></table></figure>
<h2 id="保留最新的1个文件夹，删除其他文件夹（使用-d）"><a href="#保留最新的1个文件夹，删除其他文件夹（使用-d）" class="headerlink" title="保留最新的1个文件夹，删除其他文件夹（使用-d）"></a>保留最新的1个文件夹，删除其他文件夹（使用-d）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -t -d /home/yl/api-web-open/logs/undertow-* | tail -n +2 | xargs rm -rf</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>ls</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 nload 查询系统实时带宽</title>
    <url>/posts/c41c8ea0.html</url>
    <content><![CDATA[<h1 id="nload"><a href="#nload" class="headerlink" title="nload"></a>nload</h1><blockquote>
<p>安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install nload</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用 nload 监控网络流量</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 nload 监控网络流量</span></span><br><span class="line">[root@yl ~]$ nload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以在命令行上指定网卡名称</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询网卡名</span></span><br><span class="line">[root@yl ~]$ ifconfig</span><br><span class="line">[root@yl ~]$ nload 网卡名</span><br></pre></td></tr></table></figure>
<p>-m、-a、-t 等参数使用</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>nload</tag>
      </tags>
  </entry>
  <entry>
    <title>route 路由配置</title>
    <url>/posts/4ecf12a.html</url>
    <content><![CDATA[<h1 id="查看路由"><a href="#查看路由" class="headerlink" title="查看路由"></a>查看路由</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@yl ~]$ route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">default         gateway         0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">default         gateway         0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">10.254.39.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0</span><br><span class="line">10.254.39.0     0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br><span class="line">link-local      0.0.0.0         255.255.0.0     U     0      0        0 eth0</span><br><span class="line">172.19.0.0      0.0.0.0         255.255.0.0     U     0      0        0 br-078ffef7667a</span><br></pre></td></tr></table></figure>
<h1 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加一条网络路由</span></span><br><span class="line">route add -net 172.23.3.0/24 gw 10.254.2.254</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除一条网络路由</span></span><br><span class="line">route del -net 172.23.3.0/24 gw 10.254.2.254</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>route</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux rpm 命令</title>
    <url>/posts/ae3631a6.html</url>
    <content><![CDATA[<h1 id="先检测是否这些软件包是否已经安装"><a href="#先检测是否这些软件包是否已经安装" class="headerlink" title="先检测是否这些软件包是否已经安装"></a>先检测是否这些软件包是否已经安装</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep telnet</span><br></pre></td></tr></table></figure>
<h1 id="卸载rpm包"><a href="#卸载rpm包" class="headerlink" title="卸载rpm包"></a>卸载rpm包</h1><blockquote>
<p>如果已经安装了，又不清楚顺序，可以都卸载后统一安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -e telnet-0.17-64.el7.x86_64</span><br></pre></td></tr></table></figure>
<h1 id="安装rpm包"><a href="#安装rpm包" class="headerlink" title="安装rpm包"></a>安装rpm包</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -ivh telnet-0.17-64.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>rpm</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux sed 命令</title>
    <url>/posts/b8ec468d.html</url>
    <content><![CDATA[<h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h1><h2 id="打印指定行数"><a href="#打印指定行数" class="headerlink" title="打印指定行数"></a>打印指定行数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">'12457431, 12457440p'</span> tomcat/logs/catalina.out</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux tail 命令</title>
    <url>/posts/29bd046e.html</url>
    <content><![CDATA[<h1 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h1>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>tail</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux tar 命令</title>
    <url>/posts/bd083454.html</url>
    <content><![CDATA[<h1 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h1><blockquote>
<p>解压</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf xxx.tar.gz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>打包</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zcvf xxx.tar.gz 待压缩的文件名</span><br></pre></td></tr></table></figure>
<p>解压 tar zxvf 文件名.tar.gz</p>
<p>压缩 tar zcvf 文件名.tar.gz 待压缩的文件名</p>
<p>tar -zcvf tomcat.tar.gz –exclude=<em>.log –exclude=</em>.log.<em> –exclude=</em>.out –exclude=<em>.out.</em> –exclude=<em>.tgz.bak –exclude=</em>.war tomcat/</p>
<p>排除文件夹（注意排除的文件夹最后不能加/）</p>
<p>tar -zcvf gitlab.source.tar.gz –exclude=node_modules –exclude=target gitlab/</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>tar</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux telnet 命令</title>
    <url>/posts/683fa9b1.html</url>
    <content><![CDATA[<h1 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet &lt;ip&gt; &lt;port&gt;</span><br></pre></td></tr></table></figure>
<h1 id="ctrl-c-不退出问题解决"><a href="#ctrl-c-不退出问题解决" class="headerlink" title="ctrl+c 不退出问题解决"></a>ctrl+c 不退出问题解决</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先输入</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ctrl+]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在输入</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> quit</span></span><br></pre></td></tr></table></figure>
<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="http://www.rpmfind.net/linux/rpm2html/search.php?query=telnet" target="_blank" rel="noopener">http://www.rpmfind.net/linux/rpm2html/search.php?query=telnet</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>telnet</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux traceroute 命令</title>
    <url>/posts/683fa9b1.html</url>
    <content><![CDATA[<h1 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">traceroute &lt;ip&gt; -nT -p &lt;port&gt;</span><br><span class="line">traceroute baidu.com</span><br></pre></td></tr></table></figure>
<p>windows使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tracert &lt;ip&gt;</span><br><span class="line">tracert baidu.com</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>traceroute</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux unzip 命令</title>
    <url>/posts/64f75729.html</url>
    <content><![CDATA[<h1 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h1><h2 id="解压war、jar、zip、rar等文件"><a href="#解压war、jar、zip、rar等文件" class="headerlink" title="解压war、jar、zip、rar等文件"></a>解压war、jar、zip、rar等文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip -oq /opt/xxx.war -d /opt/ddd</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>unzip</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux vi 命令</title>
    <url>/posts/87207300.html</url>
    <content><![CDATA[<h1 id="vi"><a href="#vi" class="headerlink" title="vi"></a>vi</h1><p>linux文件格式的问题（使用unix格式）<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看文件格式</span></span><br><span class="line">vi 文件名</span><br><span class="line">:<span class="built_in">set</span> ff <span class="comment"># :set fileencoding</span></span><br><span class="line"><span class="comment"># 设置文件格式为unix</span></span><br><span class="line">:<span class="built_in">set</span> ff=unix</span><br><span class="line"><span class="comment"># 保存退出</span></span><br><span class="line">:wq</span><br><span class="line"><span class="comment"># 也可以直接使用</span></span><br><span class="line">dos2unix 文件名</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>vi</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA 插件</title>
    <url>/posts/b7ca9e0f.html</url>
    <content><![CDATA[<h2 id="IntelliJ插件篇"><a href="#IntelliJ插件篇" class="headerlink" title="IntelliJ插件篇"></a>IntelliJ插件篇</h2><h6 id="Maven-Helper"><a href="#Maven-Helper" class="headerlink" title="Maven Helper"></a>Maven Helper</h6><blockquote>
<p>我一般用这款插件来查看maven的依赖树。在不使用此插件的情况下，要想查看maven的依赖树就要使用Maven命令maven dependency:tree来查看依赖。想要查看是否有依赖冲突也可以使用mvn dependency:tree -Dverbose -Dincludes=<groupid>:<artifactid>只查看关心的jar包，但是这样还是需要我执行命令，并且当项目比较复杂的时候，这个过程是比较漫长的。maven helper就能很好的解决这个问题。</artifactid></groupid></p>
</blockquote>
<h6 id="GsonFormat"><a href="#GsonFormat" class="headerlink" title="GsonFormat"></a>GsonFormat</h6><blockquote>
<p>快捷键Alt+S或者鼠标右键选择Generate&gt;GsonFormat</p>
</blockquote>
<a id="more"></a>
<h6 id="InnerBuilder"><a href="#InnerBuilder" class="headerlink" title="InnerBuilder"></a>InnerBuilder</h6><blockquote>
<p>快捷键Alt+Insert、Shift+Alt+B或者鼠标右键选择Generate-&gt;Builder，一般给实体类建立get方法，实体类的属性使用final标记，对于不能空的值，做为Builder构造方法的参数传入，最好有一个实体类做为参数的Builder的构造方法</p>
</blockquote>
<h2 id="IntelliJ-Setting配置篇"><a href="#IntelliJ-Setting配置篇" class="headerlink" title="IntelliJ Setting配置篇"></a>IntelliJ Setting配置篇</h2><h6 id="spelling"><a href="#spelling" class="headerlink" title="spelling"></a>spelling</h6><blockquote>
<p>去掉拼写检测Setting-&gt;inspections-&gt;spelling，去掉勾</p>
</blockquote>
<h6 id="properties编码配置"><a href="#properties编码配置" class="headerlink" title="properties编码配置"></a>properties编码配置</h6><blockquote>
<p>Setting-&gt;Editor-&gt;File Encodings，Default encoding for properties files选择UTF-8，并勾上Transparent native-to-ascii conversion</p>
</blockquote>
<h6 id="修改注释模版"><a href="#修改注释模版" class="headerlink" title="修改注释模版"></a>修改注释模版</h6><blockquote>
<p>Setting-&gt;Editor-&gt;File And Code Templates，选择要修改的文件类型，然后在Includes的File Header中修改</p>
</blockquote>
<h6 id="代码快捷生成（Live-Templates）"><a href="#代码快捷生成（Live-Templates）" class="headerlink" title="代码快捷生成（Live Templates）"></a>代码快捷生成（Live Templates）</h6><blockquote>
<p>可以根据自己需求调整快捷模版，比如sout、soutv、soutm、psvm等</p>
</blockquote>
<h6 id="快捷提示（Code-Completion）"><a href="#快捷提示（Code-Completion）" class="headerlink" title="快捷提示（Code Completion）"></a>快捷提示（Code Completion）</h6><blockquote>
<p>Case sensitive completion可选First letter（首字母匹配）、All（全部匹配）、None（不需要匹配，就是忽略大小写）</p>
</blockquote>
<h6 id="软换行"><a href="#软换行" class="headerlink" title="软换行"></a>软换行</h6><blockquote>
<p>Settings-Editor-General，勾上use soft wraps in editor<br>Settings-&gt;Code Style-&gt;General-&gt;Right margin(columns)<br>Settings-&gt;Code Style-&gt;Java-&gt;Wrapping and Braces-&gt;Ensure rigth margin is not exceeded</p>
</blockquote>
<h6 id="虚拟空格（光标在编辑器的任意位置都可以点）"><a href="#虚拟空格（光标在编辑器的任意位置都可以点）" class="headerlink" title="虚拟空格（光标在编辑器的任意位置都可以点）"></a>虚拟空格（光标在编辑器的任意位置都可以点）</h6><blockquote>
<p>Settings-Editor-General，去掉Allow placement of caret at end of line前面的勾</p>
</blockquote>
<h6 id="折叠代码"><a href="#折叠代码" class="headerlink" title="折叠代码"></a>折叠代码</h6><blockquote>
<p>默认单行方法是折叠的，在settings-Editor-General-Code Folding，取消One-line methods就不会折叠了</p>
</blockquote>
<h6 id="自动保存文件"><a href="#自动保存文件" class="headerlink" title="自动保存文件"></a>自动保存文件</h6><blockquote>
<p>Settings-Appearance &amp; Behivior-System Settings，取消“Synchronize file on frame activation” 和“Save files on framedeactivation”的选择。同时我们选择”Save files automatically”, 并将其设置为30秒，这样IDEA依然可以自动保持文件,所以在每次切换时，你需要按下Ctrl+S保存文件</p>
</blockquote>
<h6 id="修改过未保存的文件，使用-号标识出来"><a href="#修改过未保存的文件，使用-号标识出来" class="headerlink" title="修改过未保存的文件，使用*号标识出来"></a>修改过未保存的文件，使用*号标识出来</h6><p>Settings-Editor-General-Editor Tabs-Mark modified tabs width asterisk</p>
<h2 id="快捷键篇"><a href="#快捷键篇" class="headerlink" title="快捷键篇"></a>快捷键篇</h2><ol>
<li>Ctrl + E：最近打开的文件</li>
<li>Ctrl + Shift + E：最近编辑的文件</li>
<li>Double Shift：跳到特定文件夹</li>
<li>Ctrl + Shift + Enter：快速补全行末分号</li>
<li>Ctrl + Shift + A：Rest Client</li>
<li>Ctrl + Shift + V：粘贴版历史</li>
<li>Alt + Enter：Language Injection功能，将一个字符串标记为 JSON，就可以非常方便地编写 JSON 了，再也不用担心转义的问题了；同时也可以支持简单正则测试能力</li>
<li>Shift + F7：Debug时可以选择进入哪个方法调试</li>
<li>Ctrl + Alt + L：格式化代码</li>
</ol>
<p>##第三方jar包篇</p>
<h6 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson"></a>fastjson</h6><blockquote>
<p>FastJSON序列化特殊字符BUG<br>问题重现：JSON.toJSONString(“\u0001\u0080\u0002”);<br>在1.1.41+的版本已经修正此问题，<a href="https://github.com/alibaba/fastjson/commit/cdf7cb253e961666e2b3c2bdd423abe73ba4324a#diff-0" target="_blank" rel="noopener">https://github.com/alibaba/fastjson/commit/cdf7cb253e961666e2b3c2bdd423abe73ba4324a#diff-0</a></p>
</blockquote>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h6 id="idea-maven乱码"><a href="#idea-maven乱码" class="headerlink" title="idea maven乱码"></a>idea maven乱码</h6><p>配置Maven -&gt; Runner -&gt; VM Options<br>-Dfile.encoding=gbk</p>
]]></content>
      <categories>
        <category>Intellij</category>
      </categories>
  </entry>
  <entry>
    <title>IntelliJ IDEA 插件</title>
    <url>/posts/b7ca9e0f.html</url>
    <content><![CDATA[<p>windows环境下，Intellij idea12中maven操作时，控制台中文乱码问题（编译报错或者clean install时出现的其他错误描述乱码）</p>
<p>在cmd中mvn中文正常显示,log4j打印日志也是ok的。</p>
<p>解决方法：</p>
<p>Setting -&gt; maven -&gt; runner<br>VMoptions: -Dfile.encoding=UTF-8</p>
<p>在idea的vm.propertis加入<br>-Dfile.encoding=UTF-8</p>
]]></content>
      <categories>
        <category>Intellij</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>iTerm 使用</title>
    <url>/posts/2a9fffdd.html</url>
    <content><![CDATA[<h1 id="问题-一：使用-iTerm-免输入密码登录问题。"><a href="#问题-一：使用-iTerm-免输入密码登录问题。" class="headerlink" title="问题 一：使用 iTerm 免输入密码登录问题。"></a>问题 一：使用 iTerm 免输入密码登录问题。</h1><a id="more"></a>
<h1 id="安装-sshpass"><a href="#安装-sshpass" class="headerlink" title="安装 sshpass"></a>安装 sshpass</h1><p>在自己电脑安装 sshpass。</p>
<p>略</p>
<h1 id="iTerm-配置"><a href="#iTerm-配置" class="headerlink" title="iTerm 配置"></a>iTerm 配置</h1><p><img src="/posts/2a9fffdd/iterm-sshpass.png" alt="我是图片"></p>
<blockquote>
<p>配置好对应 ssh 连接后，需要在自己电脑 ssh user@ip 登录一次，否则用 iTerm 首次登录会报错。</p>
</blockquote>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>iTerm</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text 的一些快捷键</title>
    <url>/posts/78ee2138.html</url>
    <content><![CDATA[<h1 id="Sublime-Text-的一些快捷键"><a href="#Sublime-Text-的一些快捷键" class="headerlink" title="Sublime Text 的一些快捷键"></a>Sublime Text 的一些快捷键</h1><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Ctrl+D 选词 （反复按快捷键，即可继续向下同时选中下一个相同的文本进行同时编辑）</span><br><span class="line">Ctrl+G 跳转到相应的行</span><br><span class="line">Ctrl+J 合并行（已选择需要合并的多行时）</span><br><span class="line">Ctrl+L 选择整行（按住-继续选择下行）</span><br><span class="line">Ctrl+M 光标移动至括号内开始或结束的位置</span><br><span class="line">Ctrl+T 词互换</span><br><span class="line">Ctrl+U 软撤销</span><br><span class="line">Ctrl+P 查找当前项目中的文件和快速搜索；输入 @ 查找文件主标题/函数；或者输入 : 跳转到文件某行；</span><br><span class="line">Ctrl+R 快速列出/跳转到某个函数</span><br><span class="line">Ctrl+K Backspace 从光标处删除至行首</span><br><span class="line">Ctrl+K+B 开启/关闭侧边栏</span><br><span class="line">Ctrl+KK 从光标处删除至行尾</span><br><span class="line">Ctrl+K+T 折叠属性</span><br><span class="line">Ctrl+K+U 改为大写</span><br><span class="line">Ctrl+K+L 改为小写</span><br><span class="line">Ctrl+K+0 展开所有</span><br><span class="line">Ctrl+Enter 插入行后（快速换行）</span><br><span class="line">Ctrl+Tab 当前窗口中的标签页切换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ctrl+Shift+A 选择光标位置父标签对儿</span><br><span class="line">Ctrl+Shift+D 复制光标所在整行，插入在该行之前</span><br><span class="line">ctrl+<span class="built_in">shift</span>+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找</span><br><span class="line">Ctrl+Shift+K 删除整行</span><br><span class="line">Ctrl+Shift+L 鼠标选中多行（按下快捷键），即可同时编辑这些行</span><br><span class="line">Ctrl+Shift+M 选择括号内的内容（按住-继续选择父括号）</span><br><span class="line">Ctrl+Shift+P 打开命令面板</span><br><span class="line">Ctrl+Shift+/ 注释已选择内容</span><br><span class="line">Ctrl+Shift+↑可以移动此行代码，与上行互换</span><br><span class="line">Ctrl+Shift+↓可以移动此行代码，与下行互换</span><br><span class="line">Ctrl+Shift+[ 折叠代码</span><br><span class="line">Ctrl+Shift+] 展开代码</span><br><span class="line">Ctrl+Shift+Enter 光标前插入行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ctrl+PageDown 、Ctrl+PageUp 文件按开启的前后顺序切换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ctrl+Z 撤销</span><br><span class="line">Ctrl+Y 恢复撤销</span><br><span class="line">Ctrl+F2 设置/取消书签</span><br><span class="line">Ctrl+/ 注释整行（如已选择内容，同“Ctrl+Shift+/”效果）</span><br><span class="line">Ctrl+鼠标左键 可以同时选择要编辑的多处文本</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Shift+鼠标右键（或使用鼠标中键）可以用鼠标进行竖向多行选择</span><br><span class="line">Shift+F2 上一个书签</span><br><span class="line">Shift+Tab 去除缩进</span><br><span class="line">Alt+Shift+1（非小键盘）窗口分屏，恢复默认1屏</span><br><span class="line">Alt+Shift+2 左右分屏-2列</span><br><span class="line">Alt+Shift+3 左右分屏-3列</span><br><span class="line">Alt+Shift+4 左右分屏-4列</span><br><span class="line">Alt+Shift+5 等分4屏</span><br><span class="line">Alt+Shift+8 垂直分屏-2屏</span><br><span class="line">Alt+Shift+9 垂直分屏-3屏</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ctrl+Shift+分屏序号 将当前焦点页分配到分屏序号页</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Alt+. 闭合当前标签</span><br><span class="line">Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Tab 缩进 自动完成</span><br><span class="line">F2 下一个书签</span><br><span class="line">F6 检测语法错误</span><br><span class="line">F9 行排序(按a-z)</span><br><span class="line">F11 全屏模式</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Sublime Text</category>
      </categories>
      <tags>
        <tag>key</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text 3 的一些常用插件</title>
    <url>/posts/9b6062f9.html</url>
    <content><![CDATA[<h1 id="Sublime-Text-3-的一些常用插件"><a href="#Sublime-Text-3-的一些常用插件" class="headerlink" title="Sublime Text 3 的一些常用插件"></a>Sublime Text 3 的一些常用插件</h1><p>[TOC]</p>
<h2 id="Administrative"><a href="#Administrative" class="headerlink" title="Administrative"></a>Administrative</h2><p>These plugins are kind of ‘meta’ because they are not concerned with writing code.</p>
<ul>
<li>Package Control<br>This package enables you to install other packages. Since build 3124, you can install it within Sublime via Tools ➡ Install Package Control.</li>
<li>AdvancedNewFile<br>A better way to create new files. For instance, it automatically creates a folder when needed.</li>
<li>SideBarEnhacements<br>Adds features such as renaming to the sidebar.</li>
<li>A File Icon<br>Add icons to the files in the sidebar.</li>
<li>ProjectManager<br>Organizing project files by putting them in a central location.</li>
<li>TodoReview<br>Scans files for TODOs and more.</li>
<li>FindKeyConflicts<br>Key conflicts are inevitably when you use a lot of plugins.</li>
<li>Editor Config<br>Maintain consistent coding styles between different editors.</li>
<li>Sync Settings<br>Keep settings in sync via Github-Gist.</li>
</ul>
<a id="more"></a>
<h2 id="General"><a href="#General" class="headerlink" title="General"></a>General</h2><p>Useful for all languages.</p>
<ul>
<li>All Complete<br>Indexes all open files for auto-completion.</li>
<li>BracketHighlighter<br>Improves the already built-in highlighting.</li>
<li>Terminal<br>Open Terminal with current working directory set to the directory of the open file on a hot key.</li>
<li>AlignTab<br>Align your code by <code>:</code>, <code>=</code>, <code>=&gt;</code>, <code>%</code>, <code>,</code>,<code>|</code> or your own RegEx.</li>
<li>GitGutter<br>Displays changes in the gutter (left to the line numbers).</li>
<li>Git<br>Includes some git commands into Sublime.</li>
<li>GitSavvy<br>Full git and GitHub integration.</li>
<li>Gitignore<br>Fetches templates for the .gitignore provided by Github.</li>
<li>DashDoc<br>Open current selection in Dash on a hot key.</li>
<li>Local History<br>Keep a local history of your files. Even though I use git on almost every project, I still don’t commit every change. It gives a better feeling to have the possibility to go back to every change.</li>
</ul>
<h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2><ul>
<li>Tern for Sublime<br>Static Javascript code analyzer with auto-completion, function argument hints, ‘go to definition’ and more. The installation and configuration can be a little bit tricky but it’s worth it. Choose Tern over SublimeCodeIntel (unmaintained) and JavaScript Completions (buggy).</li>
<li>JavaScript &amp; NodeJS Snippets</li>
<li>Console Wrap<br>Fast way to log to console.</li>
<li>JsPrettier<br>Integration of Prettier, the opinionated JavaScript formatter.</li>
<li>Babel<br>Syntax definitions for ES6 JavaScript with React JSX extensions.</li>
<li>TypeScript</li>
<li>Elm Language Support</li>
</ul>
<h2 id="HTML-amp-CSS"><a href="#HTML-amp-CSS" class="headerlink" title="HTML &amp; CSS"></a>HTML &amp; CSS</h2><ul>
<li>Sass<br>Sass is a preprocessor extending CSS and this plugins adds the language support.</li>
<li>SassSolutions<br>Auto-complete variables/mixins from your ‘settings.scss’ file.</li>
<li>CSS3<br>Replaces the built-in CSS support with a more up-to-date information. Includes cssnext support. Follow the instructions to reduce misbehaviour with other plugins.</li>
<li>Emmet<br>Allows you to write HTML very fast. You have to learn their way though.</li>
<li>Color Highlighter</li>
</ul>
<h2 id="Linter"><a href="#Linter" class="headerlink" title="Linter"></a>Linter</h2><ul>
<li>SublimeLinter</li>
<li>SublimeLinter-HTML-tidy</li>
<li>SublimeLinter-contrib-stylelint<br>For CSS. Choose stylelint over SublimeLinter-CSSlint.</li>
<li>SublimeLinter-contrib-SCSS-lint</li>
<li>SublimeLinter-contrib-ESLint</li>
<li>SublimeLinter-flow</li>
<li>SublimeLinter-contrib-elm-make</li>
<li>SublimeLinter-JSON</li>
</ul>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul>
<li>omniMarkupPreviewer<br>使用 <code>ctrl+alt+o</code>打开浏览器实时预览</li>
</ul>
]]></content>
      <categories>
        <category>Sublime Text</category>
      </categories>
      <tags>
        <tag>plugins</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo 2.6.x使用</title>
    <url>/posts/61ed87a1.html</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>代码地址<a href="https://github.com/foreveryang321/java-best-practice/blob/master/dubbo-examples/dubbo-v2.6.x" target="_blank" rel="noopener">dubbo-v2.6.x</a></p>
<ul>
<li>dubbo 2.6.5</li>
<li>dubbo-spring-boot-starter 0.2.0</li>
</ul>
<blockquote>
<p>由于 dubbo-2.6.5 及以下版本的 Reference 还不支持 protocol 属性（dubbo-2.7.0支持了），注解暂时无法指定协议，但是可以使用xml配置指定协议</p>
</blockquote>
<h2 id="启动-provider-端"><a href="#启动-provider-端" class="headerlink" title="启动 provider 端"></a>启动 provider 端</h2><p>访问以下地址来判断<code>provider</code>端使用多协议是否正常</p>
<p><a href="http://localhost:9090/demo/echo?message=rest协议" target="_blank" rel="noopener">http://localhost:9090/demo/echo?message=rest协议</a></p>
<a id="more"></a>
<h2 id="启动-consumer-端"><a href="#启动-consumer-端" class="headerlink" title="启动 consumer 端"></a>启动 consumer 端</h2><p>分别访问以下地址来判断<code>consumer</code>端使用多协议是否正常</p>
<ul>
<li><a href="http://localhost:8080/demo/dubbo?message=使用dubbo协议" target="_blank" rel="noopener">http://localhost:8080/demo/dubbo?message=使用dubbo协议</a></li>
<li><a href="http://localhost:8080/demo/rest?message=使用rest协议" target="_blank" rel="noopener">http://localhost:8080/demo/rest?message=使用rest协议</a></li>
</ul>
<h2 id="提示-AnnotationInjectedBeanPostProcessor-异常"><a href="#提示-AnnotationInjectedBeanPostProcessor-异常" class="headerlink" title="提示 AnnotationInjectedBeanPostProcessor 异常"></a>提示 AnnotationInjectedBeanPostProcessor 异常</h2><p><a href="https://github.com/apache/incubator-dubbo/issues/2869" target="_blank" rel="noopener">issue</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Caused by: java.lang.ClassNotFoundException: com.alibaba.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor</span><br></pre></td></tr></table></figure></p>
<p>解决，添加以下依赖<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2><ul>
<li>java.lang.NoClassDefFoundError: org/jboss/resteasy/client/jaxrs/engines/ApacheHttpClient4Engine</li>
</ul>
<blockquote>
<p>需要添加以下依赖包，该依赖 provider 端无需依赖，consumer 端需要依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.resteasy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>resteasy-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;resteasy-client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>java.lang.RuntimeException: You must use at least one, but no more than one http method annotation on: top.ylonline.dubbo.spring.boot.example.api.EchoService.echo..</li>
</ul>
<blockquote>
<p>出现这个异常，说明要在使用的接口标注：@Path、@POST、@Get等javax.ws.rs.*这个路径下相关注解，不应该在实现类标注</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.ylonline.dubbo.spring.boot.example.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.QueryParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EchoService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * echo</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message msg</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GET</span></span><br><span class="line">    <span class="meta">@Path</span>(<span class="string">"/echo"</span>)</span><br><span class="line">    <span class="function">String <span class="title">echo</span><span class="params">(@QueryParam(<span class="string">"message"</span>)</span> String message)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="dubbo-spring-boot-starter-中-spring-boot-starter-scope-传递问题"><a href="#dubbo-spring-boot-starter-中-spring-boot-starter-scope-传递问题" class="headerlink" title="dubbo-spring-boot-starter 中 spring-boot-starter scope 传递问题"></a>dubbo-spring-boot-starter 中 spring-boot-starter scope 传递问题</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>由于<code>dubbo-spring-boot-starter</code>中依赖了<code>spring-boot-starter</code>的<code>scope</code>是<code>true</code>，会导致其继承<code>spring-boot-starter-test</code>的<code>scope</code>，使其变成<code>test</code><br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Spring Boot dependencies --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>true<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="spring-版本不一致问题"><a href="#spring-版本不一致问题" class="headerlink" title="spring 版本不一致问题"></a>spring 版本不一致问题</h2><ul>
<li><p>项目中 pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.6.5<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-dependencies-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>dubbo-dependencies-bom pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Common libs --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring_version</span>&gt;</span>4.3.16.RELEASE<span class="tag">&lt;/<span class="name">spring_version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Common libs --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-framework-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring_version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>由于<code>spring-boot-starter-parent</code>中的依赖的<code>spring</code>版本是<code>5.0.10
.RELEASE</code>，<code>dubbo-dependencies-bom</code>中依赖了<code>spring-framework-bom</code>，版本是<code>4.3.16
.RELEASE</code>，会导致<code>spring</code>的版本不一致问题</p>
<blockquote>
<p>解决方法：将<code>dubbo-dependencies-bom</code>作为<code>parent</code>，<code>spring-boot-starter-parent</code>放到<code>dependencyManagement</code>中，但是如果这样的话，有可能引发其他依赖问题</p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo 2.7.x使用</title>
    <url>/posts/ed805d7d.html</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>代码地址<a href="https://github.com/foreveryang321/java-best-practice/blob/master/dubbo-examples/dubbo-v2.7.x/" target="_blank" rel="noopener">dubbo-v2.7.x</a></p>
<blockquote>
<p>dubbo 2.7.0<br>duboo-spring-boot-starter 2.7.0</p>
</blockquote>
<h2 id="启动-provider"><a href="#启动-provider" class="headerlink" title="启动 provider"></a>启动 provider</h2><p>访问以下地址来判断<code>provider</code>端使用多协议是否正常</p>
<p>[<a href="http://localhost:9090/top.ylonline.dubbo27x.api.RestService/single/echo?message=rest-protocol]" target="_blank" rel="noopener">http://localhost:9090/top.ylonline.dubbo27x.api.RestService/single/echo?message=rest-protocol]</a><br>(<a href="http://localhost:9090/top.ylonline.dubbo27x.api.RestService/single/echo?message=rest-protocol" target="_blank" rel="noopener">http://localhost:9090/top.ylonline.dubbo27x.api.RestService/single/echo?message=rest-protocol</a>)</p>
<p>[<a href="http://localhost:9090/top.ylonline.dubbo27x.api.MultipleService/multiple/echo?message=dubbo-or-rest-protocol]" target="_blank" rel="noopener">http://localhost:9090/top.ylonline.dubbo27x.api.MultipleService/multiple/echo?message=dubbo-or-rest-protocol]</a><br>(<a href="http://localhost:9090/top.ylonline.dubbo27x.api.MultipleService/multiple/echo?message=dubbo-or-rest-protocol" target="_blank" rel="noopener">http://localhost:9090/top.ylonline.dubbo27x.api.MultipleService/multiple/echo?message=dubbo-or-rest-protocol</a>)</p>
<blockquote>
<p>使用接口的全限类名作为<code>contextpath</code>是dubbo-2.7.0的bug，请看<a href="https://github.com/apache/incubator-dubbo/issues/3445" target="_blank" rel="noopener">issue</a>，此<a href="https://github.com/apache/incubator-dubbo/pull/3479" target="_blank" rel="noopener">PR</a>修复了这个问题</p>
</blockquote>
<a id="more"></a>
<h2 id="启动-consumer"><a href="#启动-consumer" class="headerlink" title="启动 consumer"></a>启动 consumer</h2><p>分别访问以下地址来判断<code>consumer</code>端使用多协议是否正常</p>
<ul>
<li><a href="http://localhost:8080/demo/dubbo?message=dubbo-protocol" target="_blank" rel="noopener">http://localhost:8080/demo/dubbo?message=dubbo-protocol</a></li>
<li><a href="http://localhost:8080/demo/rest?message=rest-protocol" target="_blank" rel="noopener">http://localhost:8080/demo/rest?message=rest-protocol</a></li>
<li><a href="http://localhost:8080/demo/multiple?message=dubbo-or-rest-protocol" target="_blank" rel="noopener">http://localhost:8080/demo/multiple?message=dubbo-or-rest-protocol</a></li>
</ul>
<h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2><h3 id="java-lang-NoClassDefFoundError-org-jboss-resteasy-client-jaxrs-engines-ApacheHttpClient4Engine"><a href="#java-lang-NoClassDefFoundError-org-jboss-resteasy-client-jaxrs-engines-ApacheHttpClient4Engine" class="headerlink" title="java.lang.NoClassDefFoundError: org/jboss/resteasy/client/jaxrs/engines/ApacheHttpClient4Engine"></a>java.lang.NoClassDefFoundError: org/jboss/resteasy/client/jaxrs/engines/ApacheHttpClient4Engine</h3><blockquote>
<p>需要添加以下依赖包，该依赖 provider 端无需依赖，consumer 端需要依赖</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.resteasy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>resteasy-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;resteasy-client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="java-lang-RuntimeException-You-must-use-at-least-one-but-no-more-than-one-http-method-annotation-on-top-ylonline"><a href="#java-lang-RuntimeException-You-must-use-at-least-one-but-no-more-than-one-http-method-annotation-on-top-ylonline" class="headerlink" title="java.lang.RuntimeException: You must use at least one, but no more than one http method annotation on: top.ylonline"></a>java.lang.RuntimeException: You must use at least one, but no more than one http method annotation on: top.ylonline</h3><p>.dubbo.spring.boot.example.api.EchoService.echo..</p>
<blockquote>
<p>出现这个异常，说明要在使用的接口标注：@Path、@POST、@Get等javax.ws.rs.*这个路径下相关注解，不应该在实现类标注</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.ylonline.dubbo.spring.boot.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.QueryParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/single"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RestService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * echo</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message msg</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GET</span></span><br><span class="line">    <span class="meta">@Path</span>(<span class="string">"/echo"</span>)</span><br><span class="line">    <span class="function">String <span class="title">echo</span><span class="params">(@QueryParam(<span class="string">"message"</span>)</span> String message)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Duplicate-application-configs"><a href="#Duplicate-application-configs" class="headerlink" title="Duplicate application configs"></a>Duplicate application configs</h3><p>本人提了一个<a href="https://github.com/apache/incubator-dubbo-spring-boot-project/issues/451" target="_blank" rel="noopener">issue</a></p>
<p>当使用<code>org.apache.dubbo:dubbo-spring-boot-starter</code> 2.7.0，同时使用xml作为<code>dubbo</code>的配置时，会出现以下异常：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Caused by: java.lang.IllegalStateException: Duplicate application configs: &lt;dubbo:application name=&quot;dubbo-consumer-2.7.x&quot; valid=&quot;true&quot; id=&quot;dubbo-consumer-2.7.x&quot; prefix=&quot;dubbo.application&quot; /&gt; and &lt;dubbo:application valid=&quot;false&quot; prefix=&quot;dubbo.application&quot; /&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>main 类<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(</span><br><span class="line">        exclude = &#123;</span><br><span class="line">                DataSourceAutoConfiguration<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">                <span class="title">WebSocketServletAutoConfiguration</span>.<span class="title">class</span>,</span></span><br><span class="line"><span class="class">                <span class="title">JmxAutoConfiguration</span>.<span class="title">class</span></span></span><br><span class="line"><span class="class">        &#125;</span></span><br><span class="line"><span class="class">)</span></span><br><span class="line"><span class="class">@<span class="title">ImportResource</span>(<span class="title">locations</span> </span>= &#123;<span class="string">"classpath:dubbo.xml"</span>&#125;)</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboConsumer270</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DubboConsumer270<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>dubbo.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">"http://dubbo.apache.org/schema/dubbo"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://dubbo.apache.org/schema/dubbo</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://dubbo.apache.org/schema/dubbo/dubbo.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">"dubbo-consumer-2.7.x"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo:parameter</span> <span class="attr">key</span>=<span class="string">"qos.enable"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dubbo:application</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">"zookeeper://192.168.56.101:2181"</span> <span class="attr">client</span>=<span class="string">"curator"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:consumer</span> <span class="attr">check</span>=<span class="string">"false"</span> <span class="attr">client</span>=<span class="string">"netty"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:reference</span> <span class="attr">id</span>=<span class="string">"dubboService"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">interface</span>=<span class="string">"top.ylonline.dubbo27x.api.DubboService"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>pom.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.0.6.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Dubbo zookeeper registry dependency --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.29.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>21.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- dubbo --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- zk registry dependency --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>解决方法：</p>
<ul>
<li>去掉<code>dubbo-spring-boot-starter</code>依赖，使用<code>xml</code>方式配置<code>dubbo</code></li>
<li>不使用<code>xml</code>方式配置<code>dubbo</code>，单单使用<code>dubbo-spring-boot-starter</code>方式</li>
</ul>
<h3 id="No-such-extension-org-apache-dubbo-metadata-store-MetadataReportFactory-by-name-redis"><a href="#No-such-extension-org-apache-dubbo-metadata-store-MetadataReportFactory-by-name-redis" class="headerlink" title="No such extension org.apache.dubbo.metadata.store.MetadataReportFactory by name redis"></a>No such extension org.apache.dubbo.metadata.store.MetadataReportFactory by name redis</h3><p>问题描述请看：<a href="https://github.com/apache/incubator-dubbo/issues/3514" target="_blank" rel="noopener">issue</a></p>
<p>本人提交了一个<a href="https://github.com/apache/incubator-dubbo/pull/3515" target="_blank" rel="noopener">PR</a>修复了此问题</p>
<p>同时，也可以添加以下依赖来解决这个问题<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-metadata-report-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-metadata-report-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo 优雅停机 restart 脚本</title>
    <url>/posts/a6adaf74.html</url>
    <content><![CDATA[<h1 id="优雅停机"><a href="#优雅停机" class="headerlink" title="优雅停机"></a>优雅停机</h1><ul>
<li>使用 kill -9 pid 不能优雅停机</li>
<li>使用 kill pid 可以优雅停机</li>
</ul>
<a id="more"></a>
<h1 id="停机脚本"><a href="#停机脚本" class="headerlink" title="停机脚本"></a>停机脚本</h1><blockquote>
<p>restart.sh</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">export LANG=en_US.UTF-8</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_144</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$CLASSPATH</span><br><span class="line"></span><br><span class="line">cd `dirname $0`</span><br><span class="line">CURRENT_DIR=`pwd`</span><br><span class="line">LOGS_DIR=$CURRENT_DIR/logs</span><br><span class="line">STDOUT_FILE=$CURRENT_DIR/logs/stdout.log</span><br><span class="line">PROJECT_HOME=$CURRENT_DIR/project</span><br><span class="line">JAR_FILE=$PROJECT_HOME/dubbo-provider.jar</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> pid</span></span><br><span class="line">PIDS=`ps -ef | grep java | grep -v grep | grep "$JAR_FILE" | awk '&#123;print $2&#125;'`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Graceful shutdown</span></span><br><span class="line">function gracefulShutdown()&#123;</span><br><span class="line">    if [ -z "$PIDS" ]; then</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE does not started!" | tee -a $STDOUT_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE kill $PIDS begining" | tee -a $STDOUT_FILE</span><br><span class="line">        for PID in $PIDS ; do</span><br><span class="line">            kill $PID &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">            echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE kill $PID success" | tee -a $STDOUT_FILE</span><br><span class="line">        done</span><br><span class="line"></span><br><span class="line">        # check for graceful shutdown</span><br><span class="line">        COUNT=0</span><br><span class="line">        while [ $COUNT -lt 1 ]; do</span><br><span class="line">            sleep 1</span><br><span class="line">            COUNT=1</span><br><span class="line">            for PID in $PIDS ; do</span><br><span class="line">                PID_EXIST=`ps -f -p $PID | grep java`</span><br><span class="line">                if [ -n "$PID_EXIST" ]; then</span><br><span class="line">                    COUNT=0</span><br><span class="line">                    break</span><br><span class="line">                fi</span><br><span class="line">            done</span><br><span class="line">        done</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function operate()&#123;</span><br><span class="line">    if [[ "$1" = "kill" ]]; then</span><br><span class="line">        gracefulShutdown</span><br><span class="line">    elif [[ "$1" = "start" ]] ; then</span><br><span class="line">        cd $PROJECT_HOME</span><br><span class="line">        # starting</span><br><span class="line">        nohup $JAVA_HOME/bin/java -server -Xms1g -Xmx1g -Xss256k -Dloader.path=$PROJECT_HOME/lib/ -Djava.io.tmpdir=$LOGS_DIR -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$LOGS_DIR/$PIDS.hprof -Ddubbo.protocol.port=20882 -Dspring.profiles.active=pro -jar $JAR_FILE &gt;&gt; $STDOUT_FILE 2&gt;&amp;1 &amp;</span><br><span class="line">        PIDS=`ps -ef | grep java | grep -v grep | grep "$JAR_FILE" | awk '&#123;print $2&#125;'`</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE started OK! pid: $PIDS" | tee -a $STDOUT_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE is not support $1" | tee -a $STDOUT_FILE</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [[ "$1" = "start" || "$1" = "check" ]]; then</span><br><span class="line">    if [ -n "$PIDS" ]; then</span><br><span class="line">        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE already started! pid: $PIDS" &gt;&gt; $STDOUT_FILE</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    operate start</span><br><span class="line">elif [[ "$1" = "" || "$1" = "restart" ]]; then</span><br><span class="line">    operate kill</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE starting" | tee -a $STDOUT_FILE</span><br><span class="line">    operate start</span><br><span class="line">elif [[ "$1" = "kill" ]]; then</span><br><span class="line">    operate kill</span><br><span class="line">else</span><br><span class="line">    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $JAR_FILE is not support $1" | tee -a $STDOUT_FILE</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sh restart.sh start <span class="comment"># 启动</span></span><br><span class="line">sh restart.sh <span class="comment"># 重启</span></span><br><span class="line">sh restart.sh restart <span class="comment"># 重启</span></span><br><span class="line">sh restart.sh check <span class="comment"># 检测服务是否启动，没有启动，则启动之，否则不做其他操作</span></span><br><span class="line">sh restart.sh <span class="built_in">kill</span> <span class="comment"># kill 掉已启动的服务进程</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>shell</tag>
        <tag>alibaba</tag>
        <tag>Dubbo</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo 多协议配置</title>
    <url>/posts/90506ac1.html</url>
    <content><![CDATA[<p>本文主要阐述，<a href="http://dubbo.apache.org/zh-cn/" target="_blank" rel="noopener">Dubbo</a> 多协议、单协议多端口实现</p>
<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>dubbo 2.6.5、2.7.0</p>
<p>dubbo-spring-boot-starter 0.2.0</p>
<h1 id="多协议实现"><a href="#多协议实现" class="headerlink" title="多协议实现"></a>多协议实现</h1><h2 id="在-application-yml-中添加如下配置"><a href="#在-application-yml-中添加如下配置" class="headerlink" title="在 application.yml 中添加如下配置"></a>在 application.yml 中添加如下配置</h2><p>首先要开启多协议的配置开关，再通过 protocols 指定多协议</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">  	<span class="comment"># 开启多个配置绑定</span></span><br><span class="line">    <span class="attr">multiple:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 多协议配置</span></span><br><span class="line">  <span class="attr">protocols:</span></span><br><span class="line">    <span class="attr">dubbo:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">20885</span></span><br><span class="line">      <span class="attr">server:</span> <span class="string">netty4</span></span><br><span class="line">    <span class="attr">rest:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">rest</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">server:</span> <span class="string">netty</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<blockquote>
<ul>
<li>开启了多协议之后，可以使用<code>@Service(protocol = {&quot;dubbo&quot;, &quot;rest&quot;})</code>指定协议类型</li>
<li>如果不需要多协议，也要明确指定其中一个协议<code>@Service(protocol = {&quot;dubbo&quot;})</code></li>
<li><code>rest.server</code>可以是<code>servlet</code>、<code>jetty</code>、<code>tomcat</code>、<code>netty</code>，这里以<code>netty4</code>为例</li>
</ul>
<p>对比单协议的配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&gt;</span> <span class="attr">dubbo:</span></span><br><span class="line"><span class="string">&gt;</span>   <span class="attr">protocol:</span></span><br><span class="line"><span class="string">&gt;</span>     <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line"><span class="string">&gt;</span>     <span class="attr">port:</span> <span class="number">20885</span></span><br><span class="line"><span class="string">&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>如果是单协议配置，不能这样指定协议<code>@Service(protocol = {&quot;dubbo&quot;})</code>，否则会报错找不到<code>dubbo compent</code></p>
</blockquote>
<p>要在<code>pom.xml</code>引入 <code>resteasy</code> 的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.resteasy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>resteasy-jaxrs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.26.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.resteasy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>resteasy-netty4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.26.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Dubbo-Service-指定多个协议"><a href="#Dubbo-Service-指定多个协议" class="headerlink" title="Dubbo Service 指定多个协议"></a>Dubbo Service 指定多个协议</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@javax</span>.ws.rs.Path(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@javax</span>.ws.rs.GET</span><br><span class="line">    <span class="meta">@javax</span>.ws.rs.Path(<span class="string">"/say-hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(@javax.ws.rs.QueryParam(<span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>rest相关的<code>Path</code>、<code>GET</code>、<code>POST</code>要在接口上配置</p>
</blockquote>
<h2 id="验证-rest-服务"><a href="#验证-rest-服务" class="headerlink" title="验证 rest 服务"></a>验证 rest 服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl http://localhost:8080/demo/say-hello?name=forever</span></span><br><span class="line">Hello, forever!</span><br></pre></td></tr></table></figure>
<h1 id="单协议多端口实现"><a href="#单协议多端口实现" class="headerlink" title="单协议多端口实现"></a>单协议多端口实现</h1><h2 id="在-application-yml-中添加如下配置-1"><a href="#在-application-yml-中添加如下配置-1" class="headerlink" title="在 application.yml 中添加如下配置"></a>在 application.yml 中添加如下配置</h2><p>首先要开启多协议的配置开关，再通过 protocols 指定多协议</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">  	<span class="comment"># 开启多个配置绑定</span></span><br><span class="line">    <span class="attr">multiple:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 多协议配置</span></span><br><span class="line">  <span class="attr">protocols:</span></span><br><span class="line">    <span class="attr">dubbo:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">20885</span></span><br><span class="line">      <span class="attr">server:</span> <span class="string">netty4</span></span><br><span class="line">    <span class="attr">dubbo2:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">20886</span></span><br><span class="line">      <span class="attr">server:</span> <span class="string">netty4</span></span><br></pre></td></tr></table></figure>
<h2 id="Dubbo-Service-指定多个协议-1"><a href="#Dubbo-Service-指定多个协议-1" class="headerlink" title="Dubbo Service 指定多个协议"></a>Dubbo Service 指定多个协议</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.dubbo.config.annotation.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Service(</span></span><br><span class="line"><span class="comment">//         protocol = &#123;"dubbo", "dubbo2"&#125;</span></span><br><span class="line"><span class="comment">// )</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, "</span> + name + <span class="string">"!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>@Service 不配置 protocol，默认使用所有协议</p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo 配置相关说明</title>
    <url>/posts/1432ba6.html</url>
    <content><![CDATA[<h1 id="线程池类型"><a href="#线程池类型" class="headerlink" title="线程池类型"></a>线程池类型</h1><h2 id="dubbo-提供了4中线程池类型"><a href="#dubbo-提供了4中线程池类型" class="headerlink" title="dubbo 提供了4中线程池类型"></a><code>dubbo</code> 提供了4中线程池类型</h2><ul>
<li><p>fixed</p>
<blockquote>
<p>固定大小线程池，启动时建立线程，不关闭，一直持有(缺省)</p>
</blockquote>
<ul>
<li><p>core-size</p>
<p>默认值：200，<code>可配置</code></p>
</li>
<li><p>max-size</p>
<p>默认值：200，<code>可配置</code></p>
</li>
<li><p>queue-size</p>
<p>默认值：0，<code>可配置</code></p>
<ul>
<li>等于 0 时：SynchronousQueue</li>
<li>不等于 0 时：LinkedBlockingQueue</li>
</ul>
</li>
<li><p>keep-alive</p>
<p>默认值：0</p>
</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>cached</p>
<blockquote>
<p>缓存线程池，空闲一分钟自动删除，需要时重建</p>
</blockquote>
<ul>
<li><p>core-size</p>
<p>默认值：0，<code>可配置</code></p>
</li>
<li><p>max-size</p>
<p>默认值：Integer.MAX_VALUE，<code>可配置</code></p>
</li>
<li><p>queue-size</p>
<p>默认值：0，<code>可配置</code></p>
<ul>
<li>等于 0 时：SynchronousQueue</li>
<li>不等于 0 时：LinkedBlockingQueue</li>
</ul>
</li>
<li><p>keep-alive</p>
<p>默认值：60 * 1000(ms)，<code>可配置</code></p>
</li>
</ul>
</li>
<li><p>limited</p>
<blockquote>
<p>可伸缩线程池，但池中的线程数只会增长不会收缩。</p>
<p>可能只增长不收缩的目的是为了避免收缩时突然来了大流量引起的性能问题</p>
</blockquote>
<ul>
<li><p>core-size</p>
<p>默认值：0，<code>可配置</code></p>
</li>
<li><p>max-size</p>
<p>默认值：200，<code>可配置</code></p>
</li>
<li><p>queue-size</p>
<p>默认值：0，<code>可配置</code></p>
<ul>
<li>等于 0 时：SynchronousQueue</li>
<li>不等于 0 时：LinkedBlockingQueue</li>
</ul>
</li>
<li><p>keep-alive</p>
<p>默认值：Long.MAX_VALUE</p>
</li>
</ul>
</li>
<li><p>eager</p>
<blockquote>
<p>优先创建<code>Worker</code>线程。在任务数量大于<code>core-size</code>但是小于<code>max-size</code>时，优先创建<code>Worker</code>来处理任务。当任务数量大于<code>max-size</code>时，将任务放入阻塞队列中</p>
</blockquote>
<ul>
<li><p>core-size</p>
<p>默认值：0，<code>可配置</code></p>
</li>
<li><p>max-size</p>
<p>默认值：Integer.MAX_VALUE，<code>可配置</code></p>
</li>
<li><p>queue-size</p>
<p>默认值：1，<code>可配置</code></p>
<ul>
<li>等于 0 时：SynchronousQueue</li>
<li>不等于 0 时：LinkedBlockingQueue</li>
</ul>
</li>
<li><p>keep-alive</p>
<p>默认值：60 * 1000(ms)，<code>可配置</code></p>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>ThreadPoolExecutor参数</th>
<th>对应Dubbo URL参数</th>
<th>对应Dubbo配置项</th>
</tr>
</thead>
<tbody>
<tr>
<td>core-size</td>
<td>corethreads</td>
<td>fixed：<br>dubbo.provider.threads<br>dubbo.protocol.threads<br>其他（没有在配置类中暴露出来）：<br>dubbo.provider.corethreads<br>dubbo.protocol.corethreads（2.6.6及以前的版本ProtocolConfig中没有这个参数，2.7.0后的版本已经添加上去）</td>
</tr>
<tr>
<td>max-size</td>
<td>threads</td>
<td>dubbo.provider.threads<br>dubbo.protocol.threads</td>
</tr>
<tr>
<td>queue-size</td>
<td>queues</td>
<td>dubbo.provider.queues<br>dubbo.protocol.queues</td>
</tr>
<tr>
<td>keep-alive</td>
<td>alive</td>
<td>没有在配置类中暴露出来<br>dubbo.provider.alive<br>dubbo.protocol.alive</td>
</tr>
</tbody>
</table>
<h2 id="队列类型"><a href="#队列类型" class="headerlink" title="队列类型"></a>队列类型</h2><ul>
<li><p>SynchronousQueue</p>
<ul>
<li><p>它的同步原理是，当生成者线程准备将元素放入这个队列时，如果这时没有消费者线程来，它就一直wait，等到有消费者线程来了，消费者线程把元素取走，他就可以返回true了。</p>
</li>
<li><p>同样的，当消费者准备从这个队列取元素时，如果这时正好有生产者线程来时，他就把元素取走返回true，否则就一直在那等生产者线程来。</p>
</li>
</ul>
</li>
<li><p>LinkedBlockingQueue</p>
<ul>
<li>add：方法在添加元素的时候，若超出了度列的长度会直接抛出异常</li>
<li>put：若向队尾添加元素的时候发现队列已经满了会发生阻塞一直等待空间，以加入元素</li>
<li>offer：在添加元素时，如果发现队列已满无法添加的话，会直接返回false</li>
</ul>
</li>
</ul>
<p>其他函数：</p>
<ul>
<li><p>poll：若队列为空，返回null</p>
</li>
<li><p>remove：若队列为空，抛出NoSuchElementException异常</p>
</li>
<li><p>take：若队列为空，发生阻塞，等待有元素</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>alibaba</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Nacos 初探</title>
    <url>/posts/c706fd60.html</url>
    <content><![CDATA[<p><a href="https://nacos.io/zh-cn/" target="_blank" rel="noopener">Nacos</a> 是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p>
<blockquote>
<p>以下内容都是基于spring-boot + nacos</p>
</blockquote>
<h1 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h1><p>项目：<a href="https://github.com/foreveryang321/java-best-practice/blob/master/nacos-examples/nacos-spring-boot-example" target="_blank" rel="noopener">nacos-spring-boot-example</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-config-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nacos:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.101</span><span class="string">:8848</span></span><br><span class="line"><span class="comment">#    namespace: '0278390f-21e8-40ae-b46d-fac0ebb7af97'</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>namespace是命名空间 ID，不能配置命名空间名称。如果不配置namespace，默认使用public</p>
</blockquote>
<h1 id="在-Nacos-控制台新建配置"><a href="#在-Nacos-控制台新建配置" class="headerlink" title="在 Nacos 控制台新建配置"></a>在 Nacos 控制台新建配置</h1><p><strong>Data ID</strong>：szim.properties</p>
<p><strong>Group</strong>：DEFAULT_GROUP</p>
<p><strong>配置内容</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id=1</span><br><span class="line">name=forever杨</span><br></pre></td></tr></table></figure>
<h1 id="App-java"><a href="#App-java" class="headerlink" title="App.java"></a>App.java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.annotation.NacosConfigListener;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.api.config.annotation.NacosValue;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.spring.context.annotation.config.EnableNacosConfig;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.nacos.spring.context.annotation.config.NacosPropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableNacosConfig</span></span><br><span class="line"><span class="meta">@NacosPropertySource</span>(dataId = App.DATA_ID)</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String DATA_ID = <span class="string">"szim.properties"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(App<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NacosConfigListener</span>(</span><br><span class="line">            dataId = App.DATA_ID,</span><br><span class="line">            timeout = <span class="number">500</span></span><br><span class="line">    )</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChange</span><span class="params">(String newContent)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        log.info(<span class="string">"onChange: &#123;&#125;"</span>, newContent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Order</span>(Ordered.LOWEST_PRECEDENCE - <span class="number">1</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommandLineRunner <span class="title">secondCommandLineRunner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SecondCommandLineRunner();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondCommandLineRunner</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">        <span class="meta">@NacosValue</span>(<span class="string">"$&#123;id:unknown&#125;"</span>)</span><br><span class="line">        <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@NacosValue</span>(<span class="string">"$&#123;name:unknown&#125;"</span>)</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            log.info(<span class="string">"id: &#123;&#125;, name: &#123;&#125;"</span>, id, name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="支持的配置方式"><a href="#支持的配置方式" class="headerlink" title="支持的配置方式"></a>支持的配置方式</h1><h2 id="yaml文件"><a href="#yaml文件" class="headerlink" title="yaml文件"></a>yaml文件</h2><blockquote>
<p>支持的格式</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.redis.host:</span> <span class="number">192.168</span><span class="number">.199</span><span class="number">.101</span></span><br><span class="line"><span class="attr">spring.redis.port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>不支持的格式</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.199</span><span class="number">.101</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>据说后续版本会支持这种格式</p>
</blockquote>
<h2 id="properties文件"><a href="#properties文件" class="headerlink" title="properties文件"></a>properties文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.redis.host = 192.168.199.101</span><br><span class="line">spring.redis.port = 6379</span><br></pre></td></tr></table></figure>
<h2 id="读取配置"><a href="#读取配置" class="headerlink" title="读取配置"></a>读取配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;spring.redis.port&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String host;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NacosValue</span>(value = <span class="string">"$&#123;spring.redis.port&#125;"</span>, autoRefreshed = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">private</span> String port;</span><br></pre></td></tr></table></figure>
<h1 id="Spring-Value注解和-Nacos-NacosValue-注解"><a href="#Spring-Value注解和-Nacos-NacosValue-注解" class="headerlink" title="Spring @Value注解和 Nacos @NacosValue 注解"></a>Spring @Value注解和 Nacos @NacosValue 注解</h1><table>
<thead>
<tr>
<th>注解</th>
<th>是否支持动态更新</th>
<th>补充</th>
</tr>
</thead>
<tbody>
<tr>
<td>@Value</td>
<td>否</td>
<td></td>
</tr>
<tr>
<td>@NacosValue</td>
<td>是</td>
<td>前提需配置autoRefreshed=true</td>
</tr>
</tbody>
</table>
<blockquote>
<p>1.3.0+ 版本使用分布式存储启动命令：sh bin/startup.sh  -p embedded</p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>Nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>druid 开启监控</title>
    <url>/posts/e95a2fe2.html</url>
    <content><![CDATA[<blockquote>
<p>依赖包</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>在 application.yml 中配置 StatFilter 相关</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">aop:</span></span><br><span class="line">    <span class="attr">proxy-target-class:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=bkimDB)))</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">f5AOzZUQ/nGxSSc0iYT0yRlq9+21dzQNHkdv+IKlkIf/I99NZdiAh/3vzUCjRg005FSb0T/LjqwoWuvqzPrv5g==</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">keep-alive:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="string">'x'</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">config:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">connection-properties:</span> <span class="string">config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJqw3NwlMJmXvcUbhlOn7VttbKPegs99ToSlKhlvDf4YD04OaD86/csdIVHgKcaCkYWfY3XIh/vJtUOf/QEwG+0CAwEAAQ==</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">        <span class="comment"># 1.1.13版本及以上，还需要配置allow、deny</span></span><br><span class="line">        <span class="attr">allow:</span></span><br><span class="line">        <span class="attr">deny:</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="string">oracle</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">hibernate:</span></span><br><span class="line">        <span class="attr">dialect:</span> <span class="string">org.hibernate.dialect.Oracle10gDialect</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>关键配置是</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">        <span class="comment"># 1.1.13版本及以上，还需要配置allow、deny</span></span><br><span class="line">        <span class="attr">allow:</span></span><br><span class="line">        <span class="attr">deny:</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>访问监控页面</p>
</blockquote>
<p>http(s)://host:port/project-name/druid/index.html</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>druid</tag>
      </tags>
  </entry>
  <entry>
    <title>druid 打印 sql 日志</title>
    <url>/posts/bee514fe.html</url>
    <content><![CDATA[<blockquote>
<p>依赖包</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>在 application.yml 中配置 slf4j.enabled=true</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:oracle:thin:@ip:port</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">keep-alive:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="string">'x'</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">slf4j:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#          connection-log-enabled: true</span></span><br><span class="line"><span class="comment">#          connection-log-error-enabled: true</span></span><br><span class="line"><span class="comment">#          connection-close-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          connection-commit-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          connection-connect-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          connection-connect-before-log-enabled: true</span></span><br><span class="line"><span class="comment">#          connection-rollback-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-log-error-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-close-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-create-after-log-enabled: true</span></span><br><span class="line">          <span class="attr">statement-executable-sql-log-enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#          statement-execute-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-execute-batch-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-execute-query-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-execute-update-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-parameter-clear-log-enable: true</span></span><br><span class="line"><span class="comment">#          statement-parameter-set-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-prepare-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          statement-prepare-call-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          result-set-log-enabled: true</span></span><br><span class="line"><span class="comment">#          result-set-log-error-enabled: true</span></span><br><span class="line"><span class="comment">#          result-set-close-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          result-set-next-after-log-enabled: true</span></span><br><span class="line"><span class="comment">#          result-set-open-after-log-enabled: true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在 logback.xml 中配置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span> <span class="attr">debug</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.charset"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.path"</span> <span class="attr">value</span>=<span class="string">"./logs"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.pattern"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">"%d&#123;yy-MM-dd HH:mm:ss&#125; %p %t %c&#123;2&#125;.%M\\(%L\\) | %m%n"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logger.maxHistory"</span> <span class="attr">value</span>=<span class="string">"7"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"stdout"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"$&#123;logger.charset&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;logger.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- druid --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;logger name="druid.sql.Connection" level="debug"/&gt;</span></span><br><span class="line"><span class="comment">    &lt;logger name="druid.sql.DataSource" level="debug"/&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"druid.sql.Statement"</span> <span class="attr">level</span>=<span class="string">"debug"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;logger name="druid.sql.ResultSet" level="debug"/&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"stdout"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>sql 日志</p>
</blockquote>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.Statement.statementLog(134) | &#123;conn-10003, pstmt-20002&#125; created. select user0_.id as id1_0_, user0_.openid as openid2_0_ from user user0_ where user0_.openid=?</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.Statement.statementLog(134) | &#123;conn-10003, pstmt-20002&#125; Parameters : [oTlSg04-KUsQZc_OCKyDCALMizxw]</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.Statement.statementLog(134) | &#123;conn-10003, pstmt-20002&#125; Types : [VARCHAR]</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.Statement.statementLog(134) | &#123;conn-10003, pstmt-20002, rs-50001&#125; query executed. 20.335752 millis. select user0_.id as id1_0_, user0_.openid as openid2_0_ from user user0_ where user0_.openid=?</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.ResultSet.resultSetLog(139) | &#123;conn-10003, pstmt-20002, rs-50001&#125; open</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.ResultSet.resultSetLog(139) | &#123;conn-10003, pstmt-20002, rs-50001&#125; Header: [ID1_0_, OPENID2_0_]</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.ResultSet.resultSetLog(139) | &#123;conn-10003, pstmt-20002, rs-50001&#125; Result: [14248992, oTlSg04-KUsQZc_OCKyDCALMizxw]</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.ResultSet.resultSetLog(139) | &#123;conn-10003, pstmt-20002, rs-50001&#125; closed</span><br><span class="line">[18-06-05 11:56:40 DEBUG] main d.s.Statement.statementLog(134) | &#123;conn-10003, pstmt-20002&#125; clearParameters.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>druid</tag>
      </tags>
  </entry>
  <entry>
    <title>druid 打印慢 sql 日志</title>
    <url>/posts/c236a064.html</url>
    <content><![CDATA[<blockquote>
<p>依赖包</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>在 application.yml 中配置 StatFilter 相关</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">aop:</span></span><br><span class="line">    <span class="attr">proxy-target-class:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=bkimDB)))</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">f5AOzZUQ/nGxSSc0iYT0yRlq9+21dzQNHkdv+IKlkIf/I99NZdiAh/3vzUCjRg005FSb0T/LjqwoWuvqzPrv5g==</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">keep-alive:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="string">'x'</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">slow-sql-millis:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">config:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">web-stat-filter:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">connection-properties:</span> <span class="string">config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJqw3NwlMJmXvcUbhlOn7VttbKPegs99ToSlKhlvDf4YD04OaD86/csdIVHgKcaCkYWfY3XIh/vJtUOf/QEwG+0CAwEAAQ==</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="string">oracle</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">hibernate:</span></span><br><span class="line">        <span class="attr">dialect:</span> <span class="string">org.hibernate.dialect.Oracle10gDialect</span></span><br></pre></td></tr></table></figure>
<p>关键配置是</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">slow-sql-millis:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>慢 sql 日志</p>
</blockquote>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">19-04-18 15:09:46 ERROR pool-2-thread-1 com.alibaba.druid.filter.stat.StatFilter.internalAfterStatementExecute(478) | slow sql 20 millis. select * from ( select token0_.id as id1_0_, token0_.curr as curr2_0_, token0_.ip as ip3_0_, token0_.serviceno as serviceno4_0_, token0_.ticket as ticket5_0_, token0_.token as token6_0_, token0_.vtime as vtime7_0_ from im_wx_token token0_ where token0_.curr=? and token0_.serviceno=? ) where rownum &lt;= ?["1","gh_de5f1fdc39ec",1]</span><br><span class="line">19-04-18 15:09:46 ERROR pool-2-thread-1 com.alibaba.druid.filter.stat.StatFilter.internalAfterStatementExecute(478) | slow sql 11 millis. select token0_.id as id1_0_0_, token0_.curr as curr2_0_0_, token0_.ip as ip3_0_0_, token0_.serviceno as serviceno4_0_0_, token0_.ticket as ticket5_0_0_, token0_.token as token6_0_0_, token0_.vtime as vtime7_0_0_ from im_wx_token token0_ where token0_.id=?[303547228245069824]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>alibaba</tag>
        <tag>druid</tag>
      </tags>
  </entry>
  <entry>
    <title>druid 连接池配置介绍</title>
    <url>/posts/facb8eb2.html</url>
    <content><![CDATA[<p>druid连接池配置</p>
<ul>
<li><p>filters=stat<br>属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：<br>监控统计用的 filter:stat<br>日志用的 filter:log4j<br>防御sql注入的 filter:wall</p>
</li>
<li><p>initialSize=5<br>初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，默认：0</p>
</li>
<li><p>minIdle=5<br>最小连接池数量</p>
</li>
<li><p>maxActive=30<br>最大连接池数量，默认：8</p>
</li>
<li><p>maxWait=60000<br>获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。</p>
</li>
</ul>
  <a id="more"></a>
<ul>
<li><p>poolPreparedStatements=true<br>是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。默认：false</p>
</li>
<li><p>maxOpenPreparedStatements=20<br>要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100。默认：-1</p>
</li>
<li><p>timeBetweenEvictionRunsMillis=90000<br>有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明</p>
</li>
<li><p>minEvictableIdleTimeMillis=1800000<br>连接保持空闲而不被驱逐的最长时间（单位：ms）</p>
</li>
<li><p>validationQuery=SELECT 1 FROM DUAL</p>
</li>
<li><p>testWhileIdle=true<br>建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。默认：false</p>
</li>
<li><p>testOnBorrow=false<br>申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认：true</p>
</li>
<li><p>testOnReturn=false<br>归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认：false</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>alibaba</tag>
        <tag>druid</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab-ci.yml 配置详情</title>
    <url>/posts/9c6b8737.html</url>
    <content><![CDATA[<h1 id="全局关键字"><a href="#全局关键字" class="headerlink" title="全局关键字"></a>全局关键字</h1><h2 id="stages"><a href="#stages" class="headerlink" title="stages"></a>stages</h2><p><code>stages</code>用于定义流水线全局可使用的阶段，阶段元素的顺序既是作业执行的顺序。</p>
<a id="more"></a>
<p>官方默认预定义的5个阶段（按顺序）：<code>.pre</code>、<code>build</code>、<code>test</code>、<code>deploy</code>、<code>.post</code>。</p>
<ul>
<li><p>相同阶段作业<code>并行执行</code>。默认情况下<code>Gitlab Runner</code>运行器只会同时执行一个作业，只有满足以下条件<code>之一</code>时才会真正的并行执行：</p>
<ul>
<li>作业运行在<code>不同的</code>运行器上</li>
<li>修改<code>Gitlab Runner</code>运行器<code>config.toml</code> <code>concurrent</code>设置，默认是1</li>
</ul>
</li>
<li><p>默认情况下，上一个阶段作业全部运行成功后，才会运行下一阶段作业</p>
</li>
<li><p>如果作业没定义阶段，则默认使用<code>test</code>阶段</p>
</li>
<li><p>默认情况下，任何一个前置作业失败，<code>commit</code>提交会被标记为<code>fail</code>状态，并且下一阶段作业都不会运行。</p>
</li>
<li><p><code>.pre</code>保证永远是管道中的第一阶段</p>
</li>
<li><p><code>.post</code>保证永远是管道中的最后一个阶段</p>
</li>
<li><p>用户自定义的阶段，在<code>.pre</code>之后，<code>.post</code>之前执行，<code>.pre</code>和<code>.post</code>顺序是不可变的，比如以下配置是等同的：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">.pre</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">a</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">b</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">.post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">a</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">.pre</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">b</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">.post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">a</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">b</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="workflow"><a href="#workflow" class="headerlink" title="workflow"></a>workflow</h2><p>略</p>
<h2 id="include"><a href="#include" class="headerlink" title="include"></a>include</h2><p>略</p>
<h1 id="关键字描述"><a href="#关键字描述" class="headerlink" title="关键字描述"></a>关键字描述</h1><h2 id="stage"><a href="#stage" class="headerlink" title="stage"></a>stage</h2><p><code>stage</code>定义每个作业所处的阶段。作业没有第一<code>stage</code>的话，默认是<code>test</code>阶段。</p>
<h2 id="before-script"><a href="#before-script" class="headerlink" title="before_script"></a>before_script</h2><p><code>before_script</code>用于定义在所有作业之前需要执行的命令。比如安装软件、安装依赖、更新代码等。</p>
<h2 id="script"><a href="#script" class="headerlink" title="script"></a>script</h2><p><code>script</code>是定义作业中唯一必须参数，用于配置运行器需要执行的脚本。所有作业都必须有一个<code>script</code>配置，如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure>
<p>表示<code>job1</code>作业需要执行命令输出“hello world”。</p>
<h2 id="after-script"><a href="#after-script" class="headerlink" title="after_script"></a>after_script</h2><p><code>after_script</code>用于定义在所有作业（即使作业执行失败）之后需要执行的命名。比如：清理缓存、清空工作区间等。</p>
<p>如果作业<code>timeout</code>或<code>cancelled</code>，<code>after_script</code>命令不会执行。</p>
<h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><p><code>image</code>是指定作业使用的<code>Docker</code>镜像。</p>
<h2 id="extends"><a href="#extends" class="headerlink" title="extends"></a>extends</h2><p>略</p>
<h2 id="services"><a href="#services" class="headerlink" title="services"></a>services</h2><p><code>services</code>是指定使用<code>Docker</code>镜像服务。</p>
<h2 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h2><p>在管道中使用<code>rules</code>来定义包含或排除作业。</p>
<p><code>rules</code>按顺序计算，直到第一次匹配成功为止。当匹配成功时，在管道中，作业要么被包含或被排除，具体取决于配置。</p>
<p><code>rules</code>替换<code>only/except</code>，并且它们不能在同一个作业中一起使用。</p>
<p><code>rules</code>接受一个用下列方法定义的规则数组，可以多个组合在一起使用：</p>
<ul>
<li><code>if</code></li>
<li><code>changes</code></li>
<li><code>exists</code></li>
<li><code>allow_failuree</code></li>
<li><code>variables</code></li>
<li><code>when</code>（未定义时默认为：<code>on_success</code>）</li>
</ul>
<h3 id="rules-if"><a href="#rules-if" class="headerlink" title="rules:if"></a>rules:if</h3><p>使用<code>rules:if</code>子句指定何时将作业添加到管道：</p>
<ul>
<li>如果<code>if</code>语句为<code>true</code>，则将作业添加到管道中。</li>
<li>如果<code>if</code>语句为<code>true</code>，但是与<code>when:never</code>结合使用，则不会将作业添加到管道中。</li>
<li>如果<code>if</code>语句都不为<code>true</code>，则不会将作业添加到管道中。</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">"Hello, Rules!"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">'$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature/ &amp;&amp; $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH'</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">never</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">'$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature/'</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">manual</span></span><br><span class="line">      <span class="attr">allow_failure:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">'$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'</span></span><br></pre></td></tr></table></figure>
<p>其他细节：</p>
<ul>
<li>如果<code>rule</code>匹配且未定义<code>when</code>，则该规则将为作业定义<code>when</code>，默认为<code>on_success</code>。</li>
<li>可以为每个<code>rule</code>定义一次<code>when</code>，或者为将适用于所有规则的<code>job</code>级别定义一次<code>when</code>。<code>job</code>级别和<code>rule</code>中的<code>when</code>不能混为一谈。</li>
<li>与<code>script</code>中的变量不同，<code>rule</code>中的变量格式为<code>$VARIABLE</code>。</li>
</ul>
<h3 id="rules-changes"><a href="#rules-changes" class="headerlink" title="rules:changes"></a>rules:changes</h3><p>使用<code>rules:changes</code>通过检查对特定文件的更改来指定何时将作业添加到管道中。</p>
<blockquote>
<p>仅在<code>branched</code>管道或<code>merge_requests</code>管道中使用<code>rules:changes</code>。</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker build:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">my-image:$CI_COMMIT_REF_SLUG</span> <span class="string">.</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="comment"># 1、如果是合并请求</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">'$CI_PIPELINE_SOURCE == "merge_request_event"'</span></span><br><span class="line">      <span class="attr">changes:</span></span><br><span class="line">        <span class="comment"># 2、检查Dockerfile是否有更改</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Dockerfile</span></span><br><span class="line">      <span class="comment"># 3、作为手动作业添加到管道中</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">manual</span></span><br><span class="line">      <span class="comment"># 4、即使作业没有被触发，管道也会继续运行</span></span><br><span class="line">      <span class="attr">allow_failure:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>其他细节：</p>
<ul>
<li><code>rules:changes</code>工作方式与<code>only:changes</code>和<code>except:changes</code>相同。</li>
<li>你可以使用<code>when:never</code>来实现类似于<code>except:changes</code>的规则。</li>
</ul>
<h3 id="rules-exists"><a href="#rules-exists" class="headerlink" title="rules:exists"></a>rules:exists</h3><p>使用<code>exists</code>用于在存储库中存在某些文件时运行作业。</p>
<p>例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">my-image:$CI_COMMIT_REF_SLUG</span> <span class="string">.</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">exists:</span></span><br><span class="line">        <span class="comment"># Dockerfile存在于存储库中的任何位置，作业都会运行</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Dockerfile</span></span><br></pre></td></tr></table></figure>
<p>其他细节：</p>
<ul>
<li>Glob patterns are interpreted with Ruby <a href="https://docs.ruby-lang.org/en/2.7.0/File.html#method-c-fnmatch" target="_blank" rel="noopener"><code>File.fnmatch</code></a> with the flags <code>File::FNM_PATHNAME | File::FNM_DOTMATCH | File::FNM_EXTGLOB</code>.</li>
<li>出于性能考虑，<code>GitLab</code>最多匹配<code>10,000</code>个已存在的模式或文件路径。超过<code>10,000</code>个文件时，<code>exists</code>规则总是假定项目中有的匹配。</li>
</ul>
<h3 id="rules-allow-failure"><a href="#rules-allow-failure" class="headerlink" title="rules:allow_failure"></a>rules:allow_failure</h3><p><code>rules:allow_failure</code>允许作业失败而不停止管道。</p>
<p><code>allow_failure:true</code>和<code>when:manual</code>结合使用，管道会继续运行，无需等待手动作业的结果。而<code>allow_failure:false</code>与<code>when:manual</code>结合会导致管道等待手动作业运行后再继续。</p>
<p>例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">"Hello, Rules!"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">'$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">manual</span></span><br><span class="line">      <span class="attr">allow_failure:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="rules-variables"><a href="#rules-variables" class="headerlink" title="rules:variables"></a>rules:variables</h3><p>在<code>rules</code>中使用<code>variables</code>为特定的条件定义变量。</p>
<p>例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="attr">DEPLOY_VARIABLE:</span> <span class="string">"default-deploy"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$CI_COMMIT_REF_NAME</span> <span class="string">==</span> <span class="string">$CI_DEFAULT_BRANCH</span></span><br><span class="line">      <span class="attr">variables:</span> <span class="comment"># Override DEPLOY_VARIABLE defined</span></span><br><span class="line">        <span class="attr">DEPLOY_VARIABLE:</span> <span class="string">"deploy-production"</span> <span class="comment"># at the job level.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$CI_COMMIT_REF_NAME</span> <span class="string">=~</span> <span class="string">/feature/</span></span><br><span class="line">      <span class="attr">variables:</span></span><br><span class="line">        <span class="attr">IS_A_FEATURE:</span> <span class="string">"true"</span> <span class="comment"># Define a new variable.</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"Run script with $DEPLOY_VARIABLE as an argument"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"Run another script if $IS_A_FEATURE exists"</span></span><br></pre></td></tr></table></figure>
<h2 id="only-和-except"><a href="#only-和-except" class="headerlink" title="only 和 except"></a>only 和 except</h2><p><code>only</code>和<code>except</code>用于做限制策略，控制何时向管道添加作业。</p>
<ul>
<li><code>only</code>用来定义什么时候运行作业。</li>
<li><code>except</code>用来定义什么时候不运行作业。</li>
</ul>
<p>策略规则：</p>
<ul>
<li><code>only</code>和<code>except</code>可以同时使用。</li>
<li><code>only</code>和<code>except</code>可以使用正则表达式。</li>
<li><code>only</code>和<code>except</code>可以使用特殊关键字。比如：<code>api</code>、<code>branches</code>、<code>chat</code>、<code>external</code>、<code>external_pull_requests</code>、<code>merge_requests</code>、<code>pipelines</code>、<code>pushes</code>、<code>schedules</code>、<code>tags</code>、<code>triggers</code>、<code>web</code>等。</li>
<li><code>only</code>和<code>except</code>允许指定过滤<code>forks</code>作业的存储库路径。</li>
</ul>
<p>可以使用四个关键词：</p>
<ul>
<li><code>refs</code></li>
<li><code>variables</code></li>
<li><code>changes</code></li>
<li><code>kubernetes</code></li>
</ul>
<h3 id="only-refs-except-refs"><a href="#only-refs-except-refs" class="headerlink" title="only:refs/except:refs"></a>only:refs/except:refs</h3><p>使用<code>only:refs</code>和<code>except:refs</code>关键字来控制什么时候根据分支名称（branches）或管道类型（pipeline types）向管道中添加作业。</p>
<ul>
<li><p>分支名称，比如： <code>main</code> or <code>my-feature-branch</code>。</p>
</li>
<li><p>匹配分支的正则表达式，比如 <code>/^feature-.*/</code>。</p>
</li>
<li><p>以下关键字</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>关键字</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>api</td>
<td>用于由管道<code>API</code>触发的管道。理解：当一个pipline被另一个piplines api所触发时(不是触发器API)。</td>
</tr>
<tr>
<td>branches</td>
<td>当一个分支被push上来。</td>
</tr>
<tr>
<td>chat</td>
<td>用于使用<code>GitLab ChatOps</code>命令创建的管道。</td>
</tr>
<tr>
<td>external</td>
<td>当您使用除<code>GitLab</code>之外的<code>CI</code>服务时，比如：<code>Jenkins</code>。</td>
</tr>
<tr>
<td>external_pull_requests</td>
<td>当<code>GitHub</code>上的外部拉取请求被创建或更新时。</td>
</tr>
<tr>
<td>merge_requests</td>
<td>用于创建或更新合并请求时创建的管道。</td>
</tr>
<tr>
<td>pipilines</td>
<td>对于使用带有<code>CI_JOB_TOKEN</code>的<code>API</code>或<code>trigger</code>关键字创建的多项目管道。</td>
</tr>
<tr>
<td>pushes</td>
<td>用于由<code>git push</code>事件触发的管道，包括用于<code>branches</code>和<code>tags</code>。</td>
</tr>
<tr>
<td>schedules</td>
<td>针对预定好的<code>pipline</code>计划而言。</td>
</tr>
<tr>
<td>tags</td>
<td>当一个打了tag标记的Release被提交时。</td>
</tr>
<tr>
<td>triggers</td>
<td>用于使用<code>trigger token</code>创建的管道。</td>
</tr>
<tr>
<td>web</td>
<td>在<code>GitLab WEB</code>页面上<code>Pipelines</code>标签页下，按下<code>run pipline</code>的情况。</td>
</tr>
</tbody>
</table>
<p>例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/^issue-.*$/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">merge_requests</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job2:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span></span><br><span class="line">  <span class="attr">except:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/^stable-branch.*$/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">schedules</span></span><br></pre></td></tr></table></figure>
<p>其他细节：</p>
<ul>
<li><p>预定的管道运行在特定的分支上，所以配置了<code>only: braches</code>的作业也会运行在预定的管道上。添加<code>except: schedules</code>以防止只有配置了<code>only: branches</code>的作业在预定的管道上运行。</p>
</li>
<li><p><code>only</code>或<code>except</code>没有使用任何关键字，则等同于<code>only: refs</code>或<code>except: refs</code>。以下<code>job1</code>和<code>job2</code>是等同的：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">'job1'</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">  	<span class="bullet">-</span> <span class="string">branches</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job2:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">'job2'</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="attr">refs:</span></span><br><span class="line">    	<span class="bullet">-</span> <span class="string">branches</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>如果作业没有使用<code>only</code>、<code>except</code>或者<code>rules</code>，则默认<code>only</code>是<code>branches</code>和<code>tags</code>。以下<code>job1</code>和<code>job2</code>是等同的：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">'job1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job2:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">'job2'</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">branches</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tags</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="only-variables-except-variables"><a href="#only-variables-except-variables" class="headerlink" title="only:variables/except:variables"></a>only:variables/except:variables</h3><p>根据<a href="https://docs.gitlab.com/ee/ci/variables/index.html" target="_blank" rel="noopener">CI/CD variables</a>的状态，使用<code>only:variables</code>或<code>except:variables</code>关键字来控制何时向管道中添加作业。</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">'job'</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="attr">variables:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$RELEASE</span> <span class="string">==</span> <span class="string">"staging"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$STAGING</span></span><br></pre></td></tr></table></figure>
<p>你可以使用<code>except:variables</code>来根据提交消息排除作业</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">end-to-end:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">rake</span> <span class="string">test:end-to-end</span></span><br><span class="line">  <span class="attr">except:</span></span><br><span class="line">    <span class="attr">variables:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$CI_COMMIT_MESSAGE</span> <span class="string">=~</span> <span class="string">/skip-end-to-end-tests/</span></span><br></pre></td></tr></table></figure>
<p>可以使用<code>&amp;&amp;</code>和<code>||</code>来构建更复杂的变量表达式</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">This</span> <span class="string">rule</span> <span class="string">uses</span> <span class="string">parentheses.</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="attr">variables:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">($CI_COMMIT_BRANCH</span> <span class="string">==</span> <span class="string">"main"</span> <span class="string">||</span> <span class="string">$CI_COMMIT_BRANCH</span> <span class="string">==</span> <span class="string">"develop"</span><span class="string">)</span> <span class="string">&amp;&amp;</span> <span class="string">$MY_VARIABLE</span></span><br></pre></td></tr></table></figure>
<h3 id="only-changes-except-changes"><a href="#only-changes-except-changes" class="headerlink" title="only:changes/except:changes"></a>only:changes/except:changes</h3><p>当<code>Git push</code>事件修改文件时，使用<code>changes</code>关键字和 <code>only</code>来运行作业，或<code>except</code>来跳过作业。</p>
<ul>
<li>文件路径。</li>
<li>单个目录的通配符路径，例如<code>path/to/directory/*</code>，或一个目录及其所有子目录，例如<code>path/to/directory/**/*</code>。</li>
<li>所有具有相同或多个扩展名的文件的通配符(glob)路径，例如<code>*.md</code>或<code>path/to/directory/*.{rb、py sh}</code>。</li>
<li>用双引号括起来的根目录或所有目录中的文件的通配符路径。例如<code>&quot;*.json&quot;</code>或<code>&quot;**/*.json&quot;</code>。</li>
</ul>
<p><code>change</code>可以用于以下<code>refs</code>：</p>
<ul>
<li><p><code>branches</code></p>
</li>
<li><p><code>external_pull_requests</code></p>
</li>
<li><p><code>merge_requests</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker build service one:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">my-service-one-image:$CI_COMMIT_REF_SLUG</span> <span class="string">.</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="attr">refs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">merge_requests</span></span><br><span class="line">    <span class="attr">changes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Dockerfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service-one/**/*</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker build:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">my-image:$CI_COMMIT_REF_SLUG</span> <span class="string">.</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="attr">refs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">branches</span></span><br><span class="line">    <span class="attr">changes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Dockerfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker/scripts/*</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">dockerfiles/**/*</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">more_scripts/*.&#123;rb,py,sh&#125;</span></span><br></pre></td></tr></table></figure>
<p>其他细节</p>
<ul>
<li>如果使用除<code>branches</code>、<code>external_pull_requests</code>或<code>merge_requests</code> 之外的引用，则<code>changes</code>无法确定给定文件是新文件还是旧文件，因此总是返回<code>true</code>。</li>
<li>如果使用<code>only:changes</code>与其他<code>refs</code>配置，则作业会忽略<code>changes</code>且始终运行。</li>
<li>如果使用<code>except:changes</code>与其他<code>refs</code>配置，则作业会忽略<code>changes</code>且永远不会运行。</li>
</ul>
<h3 id="only-kubernetes-except-kubernetes"><a href="#only-kubernetes-except-kubernetes" class="headerlink" title="only:kubernetes/except:kubernetes"></a>only:kubernetes/except:kubernetes</h3><p>略</p>
<h2 id="needs"><a href="#needs" class="headerlink" title="needs"></a>needs</h2><p>使用<code>needs:</code>乱序执行作业。使用<code>needs</code>的作业之间的关系可以可视化为有向无环图。</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h2><p>使用<code>tags</code>从项目可用的所有<code>Gitlab Runner</code>列表中选择特定的运行器。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ruby</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">postgres</span></span><br></pre></td></tr></table></figure>
<h2 id="allow-failure"><a href="#allow-failure" class="headerlink" title="allow_failure"></a>allow_failure</h2><p>让作业失败而不影响CI套件的其他部分时，使用<code>allow_failure</code>，默认：<code>false</code>，除了使用<code>when:manual</code>语法的手动作业。</p>
<p>在使用<code>rules:</code>的作业中，所有作业默认为<code>allow_failure:false</code>，包括<code>when:manual</code>作业。</p>
<p>当<code>allow_failure</code>设置为<code>true</code>且作业失败时，作业在UI中显示橙色警告。但是，管道的逻辑流认为作业成功/通过，它是非阻塞。</p>
<p>在下面的例子中，<code>job1</code>和<code>job2</code>并行运行。如果<code>job1</code>失败，它不会停止下一个阶段的运行，因为它被标记为<code>allow_failure: true</code>:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">execute_script_that_will_fail</span></span><br><span class="line">  <span class="attr">allow_failure:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job2:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">execute_script_that_will_succeed</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job3:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">deploy_to_staging</span></span><br></pre></td></tr></table></figure>
<h3 id="allow-failure-exit-codes"><a href="#allow-failure-exit-codes" class="headerlink" title="allow_failure:exit_codes"></a>allow_failure:exit_codes</h3><p>使用<code>allow_failure:exit_codes</code>动态控制是否应该允许作业失败。您可以列出不认为失败的退出码。如果有任何其他退出代码，作业将失败：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"Run a script that results in exit code 1. This job fails."</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">exit</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">allow_failure:</span></span><br><span class="line">    <span class="attr">exit_codes:</span> <span class="number">137</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job2:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"Run a script that results in exit code 137. This job is allowed to fail."</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">exit</span> <span class="number">137</span></span><br><span class="line">  <span class="attr">allow_failure:</span></span><br><span class="line">    <span class="attr">exit_codes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">137</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">255</span></span><br></pre></td></tr></table></figure>
<h2 id="when"><a href="#when" class="headerlink" title="when"></a>when</h2><p>使用<code>when</code>来实现在失败时或失败后运行的作业。</p>
<p><code>when</code>的有效值为：</p>
<ul>
<li><code>on_success</code>（默认）-只有当前置阶段的所有作业都成功时才执行作业，或者因为它们具有<code>allow_failure: true</code>而被认为成功时才执行作业。</li>
<li><code>on_failure</code> - 只有在前置阶段至少有一个作业失败时才执行作业。</li>
<li><code>always</code> - 执行作业而不考虑前置阶段作业的状态。</li>
<li><code>manual</code> - 手动执行工作。</li>
<li><code>delayed</code> - 将作业的执行延迟一段指定的时间。<code>GitLab</code> 11.14中新增特性。</li>
<li><code>never</code><ul>
<li>根据作业规则，不执行作业。</li>
<li>根据<a href="https://docs.gitlab.com/ee/ci/yaml/#workflow" target="_blank" rel="noopener">workflow:rules</a>，不运行流水线。</li>
</ul>
</li>
</ul>
<h3 id="when-manual"><a href="#when-manual" class="headerlink" title="when:manual"></a>when:manual</h3><p>手动作业是一种不会自动执行的作业，必须由用户显式启动。一般在部署到生产环境时使用手动作业。当管道启动时，手动作业显示为跳过，而不会自动运行。</p>
<h3 id="when-delayed"><a href="#when-delayed" class="headerlink" title="when:delayed"></a>when:delayed</h3><p>使用<code>when:delayed</code>执行脚本，或者避免作业立即进入挂起状态。</p>
<p>可以使用<code>start_in</code>关键字设置句点。默认<code>start_in</code>的值是以秒为单位的运行时间，除非提供了一个单位。<code>start_in</code>必须小于等于一周。有效值的示例包括：</p>
<ul>
<li><code>&#39;5&#39;</code></li>
<li><code>5 seconds</code></li>
<li><code>30 minutes</code></li>
<li><code>1 day</code></li>
<li><code>1 week</code></li>
</ul>
<p>当一个阶段包含一个被延迟的作业时，延迟的作业完成后，管道才会继续运行。</p>
<p>与其他类型的作业类似，延迟作业的计时器只有在前一个阶段通过后才会启动。</p>
<p>下面的示例创建了一个名为<code>job1</code>的作业，在前一个阶段完成30分钟后执行：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">echo</span> <span class="string">'job1'</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">delayed</span></span><br><span class="line">  <span class="attr">start_in:</span> <span class="number">30</span> <span class="string">minutes</span></span><br></pre></td></tr></table></figure>
<h2 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h2><p>略</p>
<h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><p>使用缓存指定要在作业之间缓存的文件和目录列表。只能使用本地工作副本中的路径。</p>
<h3 id="cache-paths"><a href="#cache-paths" class="headerlink" title="cache:paths"></a>cache:paths</h3><p>使用cache:paths关键字选择要缓存的文件或目录。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rspec:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"This job uses a cache."</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">binaries-cache</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="comment">#  缓存binaries目录下所有apk文件</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">binaries/*.apk</span></span><br><span class="line">      <span class="comment"># 缓存 .config 文件</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.config</span></span><br></pre></td></tr></table></figure>
<h3 id="cache-key"><a href="#cache-key" class="headerlink" title="cache:key"></a>cache:key</h3><p>使用<code>cache:key</code>给每个缓存一个唯一的标识键。使用相同<code>cache key</code>的所有作业使用相同的缓存，包括在不同的管道中。</p>
<p>如果不设置，则默认密钥为<code>default</code>。所有带有<code>cache:</code>但没有<code>cache:key</code>的作业都共享<code>default</code>的缓存。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">cache-job:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"This job uses a cache."</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">binaries-cache-$CI_COMMIT_REF_SLUG</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">binaries/</span></span><br></pre></td></tr></table></figure>
<p>其他细节：</p>
<ul>
<li>如果是<code>windows</code>系统下，需要把<code>$</code>替换成<code>%</code>，比如：<code>%CI_COMMIT_REF_SLUG%</code>。</li>
<li><code>cache:key</code>不能包含<ul>
<li><code>/</code>符号，等价于<code>URI</code>编码<code>%2F</code>。</li>
<li>仅<code>.</code>符号(任何数字)，等价于<code>URI</code>编码的<code>%2E</code>。</li>
</ul>
</li>
<li>缓存是在作业之间共享的，为不同的作业使用不同的路径，或设置不同的<code>cache:key</code>，否则缓存内容会被覆盖。</li>
</ul>
<h3 id="cache-key-files"><a href="#cache-key-files" class="headerlink" title="cache:key:files"></a><code>cache:key:files</code></h3><p>当<code>一个</code>或<code>两个</code>特定文件发生变化时，使用<code>cache:key:files</code>生成一个新的密钥。<code>cache:key:files</code>允许重用一些缓存，并减少重建的次数，可以加快后续管道运行的速度。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">cache-job:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"This job uses a cache."</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">key:</span></span><br><span class="line">      <span class="attr">files:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Gemfile.lock</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">package.json</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">vendor/ruby</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node_modules</span></span><br></pre></td></tr></table></figure>
<p>其他细节：</p>
<ul>
<li><code>cache key</code>是一个<code>SHA</code>签名，它根据每个列出的更改的文件的最新提交计算得出。如果在提交中没有任何文件变动，则默认为<code>default</code>。</li>
</ul>
<h3 id="cache-key-prefix"><a href="#cache-key-prefix" class="headerlink" title="cache:key:prefix"></a><code>cache:key:prefix</code></h3><p>使用<code>cache:key:prefix</code>与<code>cache:key:files</code>结合计算<code>SHA</code>签名组合。</p>
<ul>
<li>字符串</li>
<li>预设的<code>variables</code></li>
<li>二者结合</li>
</ul>
<h3 id="cache-untracked"><a href="#cache-untracked" class="headerlink" title="cache:untracked"></a>cache:untracked</h3><p>使用<code>cache:untracked:true</code>来缓存<code>Git</code>库中所有未被跟踪的文件。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rspec:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">untracked:</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 结合 cache:paths 使用</span></span><br><span class="line"><span class="attr">rspec:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">untracked:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">binaries/</span></span><br></pre></td></tr></table></figure>
<h3 id="cache-when"><a href="#cache-when" class="headerlink" title="cache:when"></a>cache:when</h3><p>使用<code>cache:when</code>根据作业的状态，来定义何时需要缓存。</p>
<ul>
<li><code>on_success</code> - 默认</li>
<li><code>on_failure</code></li>
<li><code>always</code></li>
</ul>
<h3 id="cache-policy"><a href="#cache-policy" class="headerlink" title="cache:policy"></a>cache:policy</h3><p>如果要更改<code>cache</code>的上传和下载行为，使用<code>cache:policy</code>。默认情况下，作业在启动时下载缓存，在作业结束时上传更改到缓存。</p>
<p>缓存策略可选项：</p>
<ul>
<li><code>pull</code></li>
<li><code>push</code></li>
<li><code>pull-push</code> - 默认</li>
</ul>
<h2 id="artifacts"><a href="#artifacts" class="headerlink" title="artifacts"></a>artifacts</h2><p>使用<code>artifacts</code>把指定的文件和目录的列表都附加到作业，无论作业返回<code>success</code>、<code>fails</code>还是<code>always</code>状态。</p>
<p>作业完成后，<code>artifacts</code>被发送到<code>GitLab</code>。如果大小不大于最大<code>artifacts</code>大小限制（有大小限制，可以手动修改配置支持更大的大小），可以在<code>GitLab UI</code>下载它们。</p>
<h3 id="dependencies"><a href="#dependencies" class="headerlink" title="dependencies"></a>dependencies</h3><p>略</p>
<h3 id="artifacts-exclude"><a href="#artifacts-exclude" class="headerlink" title="artifacts:exclude"></a>artifacts:exclude</h3><p><code>exclude</code>用来防止将文件添加到<code>artifacts</code>存档中。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">artifacts:</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">binaries/</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">binaries/**/*.o</span></span><br></pre></td></tr></table></figure>
<h3 id="artifacts-expire-in"><a href="#artifacts-expire-in" class="headerlink" title="artifacts:expire_in"></a>artifacts:expire_in</h3><p>使用<code>expire_in</code>指定作业<code>artifacts</code>在过期和删除之前存储的时间。如果未定义过期时间，则默认为：30天。</p>
<p><code>expire_in</code>设置不生效：</p>
<ul>
<li>Artifacts from the latest job, unless this keeping the latest job artifacts is:<ul>
<li><a href="https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#keep-artifacts-from-most-recent-successful-jobs" target="_blank" rel="noopener">Disabled at the project level</a>.</li>
<li><a href="https://docs.gitlab.com/ee/user/admin_area/settings/continuous_integration.html#keep-the-latest-artifacts-for-all-jobs-in-the-latest-successful-pipelines" target="_blank" rel="noopener">Disabled instance-wide</a>.</li>
</ul>
</li>
<li>Pipeline artifacts. It’s not possible to specify an expiration date for these:<ul>
<li>Pipeline artifacts from the latest pipeline are kept forever.</li>
<li>Other pipeline artifacts are erased after one week.</li>
</ul>
</li>
</ul>
<p><code>expire_in</code>默认以<code>秒</code>为单位。有效值包括：</p>
<ul>
<li><code>&#39;42&#39;</code></li>
<li><code>42 seconds</code></li>
<li><code>3 mins 4 sec</code></li>
<li><code>2 hrs 20 min</code></li>
<li><code>2h20min</code></li>
<li><code>6 mos 1 day</code></li>
<li><code>47 yrs 6 mos and 4d</code></li>
<li><code>3 weeks and 2 days</code></li>
<li><code>never</code></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">job:</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="comment"># 使 artifacts 在上传一周后过期</span></span><br><span class="line">    <span class="attr">expire_in:</span> <span class="number">1</span> <span class="string">week</span></span><br></pre></td></tr></table></figure>
<p>要覆盖过期日期并保护工件不被自动删除，可以执行以下操作：</p>
<ul>
<li>使用<code>Gitlab</code>页面上的<code>Keep</code>按钮。</li>
<li>配置<code>expire_in</code>为<code>never</code>。</li>
</ul>
<h3 id="artifacts-expose-as"><a href="#artifacts-expose-as" class="headerlink" title="artifacts:expose_as"></a>artifacts:expose_as</h3><p>略</p>
<h3 id="artifacts-name"><a href="#artifacts-name" class="headerlink" title="artifacts:name"></a>artifacts:name</h3><p>使用<code>name</code>指令来定义创建的<code>artifacts</code>存档的名称。</p>
<h3 id="artifacts-paths"><a href="#artifacts-paths" class="headerlink" title="artifacts:paths"></a>artifacts:paths</h3><p><code>paths</code>是相对于项目目录(<code>$CI_PROJECT_DIR</code>)的，不接链接到它的外部。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">release-job:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mvn</span> <span class="string">package</span> <span class="string">-U</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">target/*.war</span></span><br></pre></td></tr></table></figure>
<h3 id="artifacts-public"><a href="#artifacts-public" class="headerlink" title="artifacts:public"></a>artifacts:public</h3><p>略</p>
<h3 id="artifacts-reports"><a href="#artifacts-reports" class="headerlink" title="artifacts:reports"></a>artifacts:reports</h3><p>略</p>
<h3 id="artifacts-untracked"><a href="#artifacts-untracked" class="headerlink" title="artifacts:untracked"></a>artifacts:untracked</h3><p>略</p>
<h3 id="artifacts-when"><a href="#artifacts-when" class="headerlink" title="artifacts:when"></a>artifacts:when</h3><p>略</p>
<h2 id="coverage"><a href="#coverage" class="headerlink" title="coverage"></a>coverage</h2><p>略</p>
<h2 id="retry"><a href="#retry" class="headerlink" title="retry"></a>retry</h2><p>使用<code>retry</code>来配置任务在失败时重试的次数。</p>
<p>当作业失败时，将再次处理该作业，直到达到<code>retry</code>指定的限制为止。取值范围<code>0</code>~<code>2</code>（最多重试两次，总共三次）。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">test:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">rspec</span></span><br><span class="line">  <span class="attr">retry:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">test:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">rspec</span></span><br><span class="line">  <span class="attr">retry:</span></span><br><span class="line">    <span class="attr">max:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">runner_system_failur</span></span><br></pre></td></tr></table></figure>
<p> <code>when</code> 的取值可以是：</p>
<ul>
<li><code>always</code>: Retry on any failure (default).</li>
<li><code>unknown_failure</code>: Retry when the failure reason is unknown.</li>
<li><code>script_failure</code>: Retry when the script failed.</li>
<li><code>api_failure</code>: Retry on API failure.</li>
<li><code>stuck_or_timeout_failure</code>: Retry when the job got stuck or timed out.</li>
<li><code>runner_system_failure</code>: Retry if there is a runner system failure (for example, job setup failed).</li>
<li><code>missing_dependency_failure</code>: Retry if a dependency is missing.</li>
<li><code>runner_unsupported</code>: Retry if the runner is unsupported.</li>
<li><code>stale_schedule</code>: Retry if a delayed job could not be executed.</li>
<li><code>job_execution_timeout</code>: Retry if the script exceeded the maximum execution time set for the job.</li>
<li><code>archived_failure</code>: Retry if the job is archived and can’t be run.</li>
<li><code>unmet_prerequisites</code>: Retry if the job failed to complete prerequisite tasks.</li>
<li><code>scheduler_failure</code>: Retry if the scheduler failed to assign the job to a runner.</li>
<li><code>data_integrity_failure</code>: Retry if there is a structural integrity problem detected.</li>
</ul>
<h2 id="timeout"><a href="#timeout" class="headerlink" title="timeout"></a>timeout</h2><p>使用<code>timeout</code>为特定作业配置超时时间。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">build:</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">build.sh</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">3</span> <span class="string">hours</span> <span class="number">30</span> <span class="string">minutes</span></span><br></pre></td></tr></table></figure>
<h2 id="parallel"><a href="#parallel" class="headerlink" title="parallel"></a>parallel</h2><p>略</p>
<h2 id="trigger"><a href="#trigger" class="headerlink" title="trigger"></a>trigger</h2><p>使用<code>trigger</code>来定义下游管道触发器。当<code>GitLab</code>启动<code>trigger</code>作业时，将创建下游管道。</p>
<p>带有<code>trigger</code>的作业只能使用有限的关键字集合。例如，不能使用<code>script</code>、<code>before_script</code>或<code>after_script</code>运行命令。</p>
<p>可以使用<code>trigger</code>创建2中不同类型的下游管道：</p>
<ul>
<li><a href="https://docs.gitlab.com/ee/ci/pipelines/multi_project_pipelines.html#define-multi-project-pipelines-in-your-gitlab-ciyml-file" target="_blank" rel="noopener">多项目管道</a></li>
<li><a href="https://docs.gitlab.com/ee/ci/pipelines/parent_child_pipelines.html" target="_blank" rel="noopener">父子管道</a></li>
</ul>
<h3 id="多项目管道：基本语法"><a href="#多项目管道：基本语法" class="headerlink" title="多项目管道：基本语法"></a>多项目管道：基本语法</h3><p>可以使用<code>trigger</code>来配置一个完成路径的下游项目触发器：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">staging:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">my/deployment</span></span><br></pre></td></tr></table></figure>
<h3 id="多项目管道：复杂语法"><a href="#多项目管道：复杂语法" class="headerlink" title="多项目管道：复杂语法"></a>多项目管道：复杂语法</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、通过分支名称创建下游管道</span></span><br><span class="line"><span class="attr">staging:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">project:</span> <span class="string">my/deployment</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">stable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、通过触发管道的状态创建下游管道</span></span><br><span class="line"><span class="attr">trigger_job:</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">project:</span> <span class="string">my/project</span></span><br><span class="line">    <span class="attr">strategy:</span> <span class="string">depend</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、通过上游管道状态创建下游管道</span></span><br><span class="line"><span class="attr">upstream_bridge:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">needs:</span></span><br><span class="line">    <span class="attr">pipeline:</span> <span class="string">other/project</span></span><br></pre></td></tr></table></figure>
<h3 id="父子管道：触发语法"><a href="#父子管道：触发语法" class="headerlink" title="父子管道：触发语法"></a>父子管道：触发语法</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、通过子管道配置的YAML文件的路径</span></span><br><span class="line"><span class="attr">trigger_job:</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">include:</span> <span class="string">path/to/child-pipeline.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、通过触发管道的状态创建子管道</span></span><br><span class="line"><span class="attr">trigger_job:</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">include:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">local:</span> <span class="string">path/to/child-pipeline.yml</span></span><br><span class="line">    <span class="attr">strategy:</span> <span class="string">depend</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、使用（动态生成的）配置文件触发子管道</span></span><br><span class="line"><span class="attr">generate-config:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span> <span class="string">generate-ci-config</span> <span class="string">&gt;</span> <span class="string">generated-config.yml</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">generated-config.yml</span></span><br><span class="line"><span class="attr">child-pipeline:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">include:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">artifact:</span> <span class="string">generated-config.yml</span></span><br><span class="line">        <span class="attr">job:</span> <span class="string">generate-config</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、使用来自另一个项目的文件触发子管道</span></span><br><span class="line"><span class="attr">child-pipeline:</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">include:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">project:</span> <span class="string">'my-group/my-pipeline-library'</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">'main'</span></span><br><span class="line">        <span class="attr">file:</span> <span class="string">'/path/to/child-pipeline.yml'</span></span><br></pre></td></tr></table></figure>
<h3 id="trigger-strategy"><a href="#trigger-strategy" class="headerlink" title="trigger:strategy"></a>trigger:strategy</h3><p>默认情况下，一旦创建了下游管道，触发器作业就会以成功状态完成。</p>
<p>使用<code>strategy:depend</code>强制<code>trigger</code>作业等待下游(多项目或父子)管道完成。此设置使<code>trigger</code>作业以<code>running</code>状态等待，知道触发管道完成。此时，<code>trigger</code>作业完成并与下游作业展示相同的状态。</p>
<p>此设置可以帮助您保持管道执行的线性。</p>
<h3 id="通过调用API触发管道"><a href="#通过调用API触发管道" class="headerlink" title="通过调用API触发管道"></a>通过调用API触发管道</h3><p>要强制重新构建特定的<code>branch</code>、<code>tag</code>或<code>comnit</code>，可以使用<code>trigger</code> <code>token</code>的调用API。<a href="https://docs.gitlab.com/ee/ci/triggers/index.html" target="_blank" rel="noopener">更多信息请查看</a>。</p>
<h2 id="interruptible"><a href="#interruptible" class="headerlink" title="interruptible"></a>interruptible</h2><p>自动取消旧的流水线</p>
<p><code>interruptible:true</code>表示如果一个正在运行的作业因新的管道运行而变得冗余时，则中断正在运行的作业，去运行新的管道。默认：<code>false</code>（不可中断）。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">step-1:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="comment"># 休眠 120s，可测试中断特性</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span> <span class="number">120</span></span><br><span class="line">  <span class="comment"># 需要在 gitlab 后台 CI/CD Settings 开启 Auto-cancel redundant pipelines 配置，否则不会生效</span></span><br><span class="line">  <span class="attr">interruptible:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="resource-group"><a href="#resource-group" class="headerlink" title="resource_group"></a>resource_group</h3><p>安全部署，一个分支只有一个管道在执行。只有前面的管道执行完成了，才会执行新的管道作业。</p>
<h3 id="release"><a href="#release" class="headerlink" title="release"></a>release</h3><p>略</p>
<h2 id="variables"><a href="#variables" class="headerlink" title="variables"></a>variables</h2><p>变量分为两种：</p>
<ul>
<li><p>在<code>.gitlab-ci.yml</code>、<code>Gitlab UI -&gt; Settings -&gt; CI/CD -&gt; Variables</code>或者api中定义的变量，更多详情请查看<a href="https://docs.gitlab.com/ee/ci/variables/index.html#custom-cicd-variables" target="_blank" rel="noopener">Custom variables</a>。</p>
</li>
<li><p><code>Gitlab</code>预设的变量，更多详情请查看<a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html" target="_blank" rel="noopener">Predefined_variables</a></p>
<p>查看、获取所有预设变量</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">variables:</span></span><br><span class="line">  <span class="attr">CI_HARBOR_REGISTER_URL:</span> <span class="string">'https://example.com'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">get_all_var:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="comment"># 打印所有变量到日志中，包括自定义变量、预设变量</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span></span><br></pre></td></tr></table></figure>
<p>打印日志如下所示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Executing "step_script" stage of the job script</span><br><span class="line">Using docker image sha256:b0757c55a1fdbb59c378fd34dde3e12bd25f68094dd69546cf5ca00ddbaa7a33 for docker:stable with digest docker@sha256:fd4d028713fd05a1fb896412805daed82c4a0cc84331d8dad00cb596d7ce3e3a ...</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span></span></span><br><span class="line">export CI='true'</span><br><span class="line">export CI_API_V4_URL='http://192.168.1.123:8888/api/v4'</span><br><span class="line">export CI_BUILDS_DIR='/builds'</span><br><span class="line">export CI_BUILD_BEFORE_SHA='551a3e95d5e4f15e8f79e97ec03aa2fd82699b9e'</span><br><span class="line">export CI_BUILD_ID='61'</span><br><span class="line">export CI_BUILD_NAME='get_all_var'</span><br><span class="line">export CI_BUILD_REF='ca1dcc591e8c38f715a5cf49a7480d36c692bcdf'</span><br><span class="line">export CI_BUILD_REF_NAME='master'</span><br><span class="line">export CI_BUILD_REF_SLUG='master'</span><br><span class="line">export CI_BUILD_STAGE='test'</span><br><span class="line">export CI_BUILD_TOKEN='[MASKED]'</span><br><span class="line">export CI_COMMIT_AUTHOR='YangLi &lt;yl@yl-online.top&gt;'</span><br><span class="line">export CI_COMMIT_BEFORE_SHA='551a3e95d5e4f15e8f79e97ec03aa2fd82699b9e'</span><br><span class="line">export CI_COMMIT_BRANCH='master'</span><br><span class="line">export CI_COMMIT_DESCRIPTION=''</span><br><span class="line">export CI_COMMIT_MESSAGE='Update .gitlab-ci.yml file'</span><br><span class="line">export CI_COMMIT_REF_NAME='master'</span><br><span class="line">export CI_COMMIT_REF_PROTECTED='true'</span><br><span class="line">export CI_COMMIT_REF_SLUG='master'</span><br><span class="line">export CI_COMMIT_SHA='ca1dcc591e8c38f715a5cf49a7480d36c692bcdf'</span><br><span class="line">export CI_COMMIT_SHORT_SHA='ca1dcc59'</span><br><span class="line">export CI_COMMIT_TIMESTAMP='2021-07-14T01:55:04+00:00'</span><br><span class="line">export CI_COMMIT_TITLE='Update .gitlab-ci.yml file'</span><br><span class="line">export CI_CONCURRENT_ID='0'</span><br><span class="line">export CI_CONCURRENT_PROJECT_ID='0'</span><br><span class="line">export CI_CONFIG_PATH='.gitlab-ci.yml'</span><br><span class="line">export CI_DEFAULT_BRANCH='master'</span><br><span class="line">export CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX='192.168.1.123:8888/app_tech/dependency_proxy/containers'</span><br><span class="line">export CI_DEPENDENCY_PROXY_PASSWORD='[MASKED]'</span><br><span class="line">export CI_DEPENDENCY_PROXY_SERVER='192.168.1.123:8888'</span><br><span class="line">export CI_DEPENDENCY_PROXY_USER='gitlab-ci-token'</span><br><span class="line">export CI_DISPOSABLE_ENVIRONMENT='true'</span><br><span class="line">export CI_JOB_ID='61'</span><br><span class="line">export CI_JOB_JWT='[MASKED]'</span><br><span class="line">export CI_JOB_NAME='get_all_var'</span><br><span class="line">export CI_JOB_STAGE='test'</span><br><span class="line">export CI_JOB_STARTED_AT='2021-07-14T01:55:07Z'</span><br><span class="line">export CI_JOB_STATUS='running'</span><br><span class="line">export CI_JOB_TOKEN='[MASKED]'</span><br><span class="line">export CI_JOB_URL='http://192.168.1.123:8888/app_tech/Cloud-Web/-/jobs/61'</span><br><span class="line">export CI_HARBOR_REGISTER_URL='https://example.com'</span><br><span class="line">export CI_NODE_TOTAL='1'</span><br><span class="line">export CI_PAGES_DOMAIN='example.com'</span><br><span class="line">export CI_PAGES_URL='http://app_tech.example.com/Cloud-Web'</span><br><span class="line">export CI_PIPELINE_CREATED_AT='2021-07-14T01:55:05Z'</span><br><span class="line">export CI_PIPELINE_ID='31'</span><br><span class="line">export CI_PIPELINE_IID='17'</span><br><span class="line">export CI_PIPELINE_SOURCE='push'</span><br><span class="line">export CI_PIPELINE_URL='http://192.168.1.123:8888/app_tech/Cloud-Web/-/pipelines/31'</span><br><span class="line">export CI_PROJECT_CONFIG_PATH='.gitlab-ci.yml'</span><br><span class="line">export CI_PROJECT_DIR='/builds/app_tech/Cloud-Web'</span><br><span class="line">export CI_PROJECT_ID='4'</span><br><span class="line">export CI_PROJECT_NAME='Cloud-Web'</span><br><span class="line">export CI_PROJECT_NAMESPACE='app_tech'</span><br><span class="line">export CI_PROJECT_PATH='app_tech/Cloud-Web'</span><br><span class="line">export CI_PROJECT_PATH_SLUG='application-technology-Cloud-Web'</span><br><span class="line">export CI_PROJECT_REPOSITORY_LANGUAGES='vue,javascript,scss,css,html'</span><br><span class="line">export CI_PROJECT_ROOT_NAMESPACE='app_tech'</span><br><span class="line">export CI_PROJECT_TITLE='Cloud-Web'</span><br><span class="line">export CI_PROJECT_URL='http://192.168.1.123:8888/app_tech/Cloud-Web'</span><br><span class="line">export CI_PROJECT_VISIBILITY='private'</span><br><span class="line">export CI_REGISTRY_PASSWORD='[MASKED]'</span><br><span class="line">export CI_REGISTRY_USER='gitlab-ci-token'</span><br><span class="line">export CI_REPOSITORY_URL='http://gitlab-ci-token:[MASKED]@192.168.1.123:8888/app_tech/Cloud-Web.git'</span><br><span class="line">export CI_RUNNER_DESCRIPTION='docker'</span><br><span class="line">export CI_RUNNER_EXECUTABLE_ARCH='linux/amd64'</span><br><span class="line">export CI_RUNNER_ID='10'</span><br><span class="line">export CI_RUNNER_REVISION='c1edb478'</span><br><span class="line">export CI_RUNNER_SHORT_TOKEN='9sgAhwLC'</span><br><span class="line">export CI_RUNNER_TAGS='docker'</span><br><span class="line">export CI_RUNNER_VERSION='14.0.1'</span><br><span class="line">export CI_SERVER='yes'</span><br><span class="line">export CI_SERVER_HOST='192.168.1.123'</span><br><span class="line">export CI_SERVER_NAME='GitLab'</span><br><span class="line">export CI_SERVER_PORT='8888'</span><br><span class="line">export CI_SERVER_PROTOCOL='http'</span><br><span class="line">export CI_SERVER_REVISION='02b97bd2a77'</span><br><span class="line">export CI_SERVER_URL='http://192.168.1.123:8888'</span><br><span class="line">export CI_SERVER_VERSION='13.12.4'</span><br><span class="line">export CI_SERVER_VERSION_MAJOR='13'</span><br><span class="line">export CI_SERVER_VERSION_MINOR='12'</span><br><span class="line">export CI_SERVER_VERSION_PATCH='4'</span><br><span class="line">export DOCKER_HOST='unix:///var/run/docker.sock'</span><br><span class="line">export DOCKER_TLS_CERTDIR='/certs'</span><br><span class="line">export DOCKER_VERSION='19.03.14'</span><br><span class="line">export FF_CMD_DISABLE_DELAYED_ERROR_LEVEL_EXPANSION='false'</span><br><span class="line">export FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR='false'</span><br><span class="line">export FF_ENABLE_BASH_EXIT_CODE_CHECK='false'</span><br><span class="line">export FF_GITLAB_REGISTRY_HELPER_IMAGE='true'</span><br><span class="line">export FF_NETWORK_PER_BUILD='false'</span><br><span class="line">export FF_SKIP_DOCKER_MACHINE_PROVISION_ON_CREATION_FAILURE='false'</span><br><span class="line">export FF_SKIP_NOOP_BUILD_STAGES='true'</span><br><span class="line">export FF_USE_DIRECT_DOWNLOAD='true'</span><br><span class="line">export FF_USE_FASTZIP='false'</span><br><span class="line">export FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY='false'</span><br><span class="line">export FF_USE_NEW_BASH_EVAL_STRATEGY='false'</span><br><span class="line">export FF_USE_POWERSHELL_PATH_RESOLVER='false'</span><br><span class="line">export FF_USE_WINDOWS_LEGACY_PROCESS_STRATEGY='true'</span><br><span class="line">export GITLAB_CI='true'</span><br><span class="line">export GITLAB_FEATURES=''</span><br><span class="line">export GITLAB_USER_EMAIL='yl@yl-online.top'</span><br><span class="line">export GITLAB_USER_ID='6'</span><br><span class="line">export GITLAB_USER_LOGIN='yl'</span><br><span class="line">export GITLAB_USER_NAME='YangLi'</span><br><span class="line">export HOME='/root'</span><br><span class="line">export HOSTNAME='runner-9sgahwlc-project-4-concurrent-0'</span><br><span class="line">export OLDPWD='/'</span><br><span class="line">export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'</span><br><span class="line">export PWD='/builds/app_tech/Cloud-Web'</span><br><span class="line">export SHLVL='3'</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="预填充变量：手动管道"><a href="#预填充变量：手动管道" class="headerlink" title="预填充变量：手动管道"></a>预填充变量：手动管道</h3><p>使用<code>value</code>和<code>description</code>，来定义管道级(全局)变量，这些变量在<code>手动运行管道</code>时被预先填充：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">variables:</span></span><br><span class="line">  <span class="attr">DEPLOY_ENVIRONMENT:</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">"staging"</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">"The deployment target. Change this variable to 'test' or 'production' if needed."</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在手动运行管道时，不能将<code>作业级</code>变量设置为预填充。</p>
</blockquote>
<h3 id="CI-CD变量"><a href="#CI-CD变量" class="headerlink" title="CI/CD变量"></a>CI/CD变量</h3><p>用于配置运行器如何处理Git请求，包括：</p>
<ul>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-strategy" target="_blank" rel="noopener"><code>GIT_STRATEGY</code></a></li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-submodule-strategy" target="_blank" rel="noopener"><code>GIT_SUBMODULE_STRATEGY</code></a></li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-checkout" target="_blank" rel="noopener"><code>GIT_CHECKOUT</code></a></li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-clean-flags" target="_blank" rel="noopener"><code>GIT_CLEAN_FLAGS</code></a></li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-fetch-extra-flags" target="_blank" rel="noopener"><code>GIT_FETCH_EXTRA_FLAGS</code></a></li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#shallow-cloning" target="_blank" rel="noopener"><code>GIT_DEPTH</code></a> (浅克隆)</li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#custom-build-directories" target="_blank" rel="noopener"><code>GIT_CLONE_PATH</code></a> (自定义构建目录)</li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#artifact-and-cache-settings" target="_blank" rel="noopener"><code>TRANSFER_METER_FREQUENCY</code></a> (artifact/cache 更新频率)</li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#artifact-and-cache-settings" target="_blank" rel="noopener"><code>ARTIFACT_COMPRESSION_LEVEL</code></a> (artifact archiver 压缩级别)</li>
<li><a href="https://docs.gitlab.com/ee/ci/runners/configure_runners.html#artifact-and-cache-settings" target="_blank" rel="noopener"><code>CACHE_COMPRESSION_LEVEL</code></a> (cache archiver 压缩级别)</li>
</ul>
<h2 id="YAML-特性"><a href="#YAML-特性" class="headerlink" title="YAML 特性"></a>YAML 特性</h2><h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p>用于在文档中复制或继承内容。</p>
<ul>
<li><code>&amp;</code> 用来设置锚点名</li>
<li><code>&lt;&lt;</code>表示将给定的散列合并到当前散列中</li>
<li><code>*</code>表示引用的锚点名</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">.job_template:</span> <span class="meta">&amp;job_configuration</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">ruby:2.6</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test1:</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*job_configuration</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test1</span> <span class="string">project</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test2:</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*job_configuration</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test2</span> <span class="string">project</span></span><br></pre></td></tr></table></figure>
<p>等同于</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">.job_template:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">ruby:2.6</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test1:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">ruby:2.6</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test1</span> <span class="string">project</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test2:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">ruby:2.6</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test2</span> <span class="string">project</span></span><br></pre></td></tr></table></figure>
<h3 id="隐藏作业"><a href="#隐藏作业" class="headerlink" title="隐藏作业"></a>隐藏作业</h3><blockquote>
<p>不会被执行</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一种、注释掉</span></span><br><span class="line"><span class="comment"># hidden_job:</span></span><br><span class="line"><span class="comment">#   script:</span></span><br><span class="line"><span class="comment">#     - run test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二种、以`.`开头命名</span></span><br><span class="line"><span class="string">.hidden_job:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">run</span> <span class="string">test</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>gitlab</tag>
        <tag>ci</tag>
        <tag>cd</tag>
      </tags>
  </entry>
  <entry>
    <title>docker gitlab安装和配置</title>
    <url>/posts/a4f9cef0.html</url>
    <content><![CDATA[<h1 id="使用docker安装"><a href="#使用docker安装" class="headerlink" title="使用docker安装"></a>使用docker安装</h1><blockquote>
<p>docker-compose.yaml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ts_gitlab</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-ce:13.2.6-ce.0</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8082:8082"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./data:/var/opt/gitlab"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./logs:/var/log/gitlab"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"./config:/etc/gitlab"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/etc/localtime:/etc/localtime"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">GITLAB_OMNIBUS_CONFIG:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">external_url</span> <span class="string">"http://ip:8082"</span></span><br><span class="line">        <span class="string">gitlab_rails['time_zone']=CST</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<p><code>GITLAB_OMNIBUS_CONFIG</code>查看<a href="https://docs.gitlab.com/omnibus/docker/" target="_blank" rel="noopener">https://docs.gitlab.com/omnibus/docker/</a></p>
<h1 id="编辑站点信息"><a href="#编辑站点信息" class="headerlink" title="编辑站点信息"></a>编辑站点信息</h1><blockquote>
<p>vi /etc/gitlab.rb</p>
</blockquote>
<p>配置</p>
<p>gitlab-ctl reconfigure</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab-runner 配置</title>
    <url>/posts/504f0829.html</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote>
<p>目录结构</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 宿主机通过root登录，可以使用普通用户登录</span></span><br><span class="line">[root@yl-mac gitlab-runner]# tree</span><br><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   └── config.toml</span><br><span class="line">├── ssh</span><br><span class="line">│   └── config</span><br><span class="line">│   └── id_rsa</span><br><span class="line">│   └── id_rsa.pub</span><br><span class="line">└── docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 权限</span></span><br><span class="line">[root@yl-mac gitlab-runner]# ll</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 2 root root 4096 Sep  9 11:49 config</span><br><span class="line">-rw-r--r-- 1 root root  343 Sep 13 08:33 docker-compose.yml</span><br><span class="line">drwxrwxrwx 2 root root 4096 Sep 13 08:39 ssh</span><br><span class="line"></span><br><span class="line">[root@yl-mac gitlab-runner]# ll ssh/</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 100 65533   25 Sep 13 08:38 config</span><br><span class="line">-rw------- 1 100 65533 2622 Sep 13 08:38 id_rsa</span><br><span class="line">-rw-r--r-- 1 100 65533  581 Sep 13 08:38 id_rsa.pub</span><br><span class="line">-rw-r--r-- 1 100 65533  692 Sep 13 08:42 known_hosts</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>docker-compose.xml</p>
</blockquote>
<p>不需提前建<code>config</code>目录</p>
<p>提前建<code>ssh</code>目录，并配置权限<code>chmod -R 777 ssh</code>，<code>755</code>、<code>766</code>权限都不行</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab-runner:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-runner:alpine-v14.0.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitlab-runner</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">gitlab-runner</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/etc/gitlab-runner</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./ssh:/home/gitlab-runner/.ssh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line"><span class="comment">#    ports:</span></span><br><span class="line"><span class="comment">#      - "8093:8083"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h1 id="注册-runner-实例"><a href="#注册-runner-实例" class="headerlink" title="注册 runner 实例"></a>注册 runner 实例</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入容器</span></span><br><span class="line">docker exec -it gitlab-runner sh</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 注册 java 编译类型实例，支持 maven 环境的编译</span></span><br><span class="line">gitlab-runner register --non-interactive --executor "docker"  --docker-image maven:3.6.1-jdk-8-alpine --docker-volumes '/root/.m2:/root/.m2' --url "gitlab 服务地址" --registration-token "gitlab token" --description "maven" --tag-list "maven" --run-untagged="true" --locked="false" --output-limit="40960" --docker-pull-policy="if-not-present"</span><br><span class="line"><span class="meta">#</span><span class="bash"> --docker-privileged</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注册 gradle</span></span><br><span class="line">gitlab-runner register --non-interactive --executor "docker"  --docker-image gradle:7.1.1-jdk8 --docker-volumes '/root/.gradle:/home/gradle/.gradle' --docker-volumes '/var/run/docker.sock:/var/run/docker.sock' --url "gitlab 服务地址" --registration-token "gitlab token" --description "gradle" --tag-list "gradle" --run-untagged="true" --locked="false" --output-limit="40960" --docker-pull-policy="if-not-present"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注册 docker 编译类型实例，支持 docker 镜像打包等环境的编译</span></span><br><span class="line">gitlab-runner register --non-interactive --executor "docker"  --docker-image docker:20.10.7 --docker-volumes '/var/run/docker.sock:/var/run/docker.sock' --url "gitlab 服务地址" --registration-token "gitlab token" --description "docker" --tag-list "docker" --run-untagged="true" --locked="false" --output-limit="40960" --docker-pull-policy="if-not-present"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注册 docker-compose 实例</span></span><br><span class="line">gitlab-runner register --non-interactive --executor "docker" --docker-image docker/compose:alpine-1.29.2 --docker-volumes '/var/run/docker.sock:/var/run/docker.sock' --url "gitlab 服务地址" --registration-token "gitlab token" --description "docker-compose" --tag-list "docker-compose" --run-untagged="true" --locked="false" -output-limit="40960" --docker-pull-policy="if-not-present"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注册 shell 执行环境</span></span><br><span class="line">gitlab-runner register --non-interactive --executor "shell"  --url "gitlab 服务地址" --registration-token "gitlab token" --description "shell" --tag-list "shell" --run-untagged="true" --locked="false" --output-limit="40960"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 取消注册：通过 name</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab-runner unregister --name docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 取消所有注册</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab-runner unregister --all-runners</span></span><br></pre></td></tr></table></figure>
<p>注册后，会生成以下<code>gitlab-runner</code> 的<code>config.toml</code>配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  #listen_address = &quot;[::]:8093&quot; #  listen on all available interfaces on port 8093</span><br><span class="line">  #advertise_address = &quot;ip:8093&quot; # gitlab-runner 服务</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = &quot;maven&quot;</span><br><span class="line">  url = &quot;gitlab 服务地址&quot;</span><br><span class="line">  token = &quot;gitlab token&quot;</span><br><span class="line">  executor = &quot;docker&quot;</span><br><span class="line">  # 默认是4096</span><br><span class="line">  output_limit = 40960</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line">    [runners.cache.azure]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = false</span><br><span class="line">    image = &quot;maven:3.3.3-jdk-8&quot;</span><br><span class="line">    privileged = false</span><br><span class="line">    disable_entrypoint_overwrite = false</span><br><span class="line">    oom_kill_disable = false</span><br><span class="line">    disable_cache = false</span><br><span class="line">    volumes = [&quot;/root/.m2:/root/.m2&quot;, &quot;/cache&quot;]</span><br><span class="line">    shm_size = 0</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = &quot;docker&quot;</span><br><span class="line">  url = &quot;gitlab 服务地址&quot;</span><br><span class="line">  token = &quot;gitlab token&quot;</span><br><span class="line">  executor = &quot;docker&quot;</span><br><span class="line">  # 默认是4096</span><br><span class="line">  output_limit = 40960</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line">    [runners.cache.azure]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = false</span><br><span class="line">    image = &quot;docker:stable&quot;</span><br><span class="line">    privileged = false</span><br><span class="line">    disable_entrypoint_overwrite = false</span><br><span class="line">    oom_kill_disable = false</span><br><span class="line">    disable_cache = false</span><br><span class="line">    volumes = [&quot;/cache&quot;, &quot;/var/run/docker.sock:/var/run/docker.sock&quot;]</span><br><span class="line">    shm_size = 0</span><br><span class="line">[[runners]]</span><br><span class="line">  name = &quot;shell&quot;</span><br><span class="line">  output_limit = 40960</span><br><span class="line">  url = &quot;gitlab 服务地址&quot;</span><br><span class="line">  token = &quot;gitlab token&quot;</span><br><span class="line">  executor = &quot;shell&quot;</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line">    [runners.cache.azure]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>下载 gitlab-runner 执行 .gitlab-ci.yml 流水线可能需要使用到的镜像</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 必须</span></span><br><span class="line">docker pull gitlab/gitlab-runner-helper:x86_64-c1edb478</span><br><span class="line">docker pull registry.gitlab.com/gitlab-org/gitlab-runner/gitlab-runner-helper:x86_64-c1edb478</span><br><span class="line"><span class="meta">#</span><span class="bash"> 可能使用到</span></span><br><span class="line">docker pull docker:20.10.7</span><br><span class="line">docker pull maven:3.6.1-jdk-8-alpine</span><br><span class="line">docker pull node:xxxx</span><br><span class="line">docker pull openjdk:xxxx</span><br></pre></td></tr></table></figure>
<h1 id="gitlab-runner-容器-SSH-免密登录远程主机"><a href="#gitlab-runner-容器-SSH-免密登录远程主机" class="headerlink" title="gitlab-runner 容器 SSH 免密登录远程主机"></a>gitlab-runner 容器 SSH 免密登录远程主机</h1><h2 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker-compose 先做 ssh 目录的持久化，再进入容器执行构建秘钥命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决权限问题，在宿主机执行</span></span><br><span class="line">chmod -R 777 ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 以 gilab-runner 用户登录容器（不能使用root）</span></span><br><span class="line">docker exec -it -u gitlab-runner gitlab-runner sh</span><br><span class="line">cd ~</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<h2 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h2><p>解决 Pseudo-terminal will not be allocated because stdin is not a terminal 问题<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 以 gilab-runner 用户登录容器（不能使用root）</span></span><br><span class="line">tee ~/.ssh/config &lt;&lt;-'EOF'</span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<h2 id="受控主机"><a href="#受控主机" class="headerlink" title="受控主机"></a>受控主机</h2><p>将<code>id_rsa.pub</code>里面的内容追加到受控主机的<code>~/.ssh/authorized_keys</code>即可。</p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol>
<li><p>Maven 持久化问题</p>
<p>解决：因为<code>Mave</code>n容器默认的路径为：<code>/root/.m2</code>，所以gitlab-runner注册的时候，持久化这个路径就行了，使用<code>--docker-volumes &#39;/root/.m2:/root/.m2&#39;</code></p>
</li>
<li><p>Job’s log exceeded limit of 4194304 bytes.</p>
<p>解决：在<code>gitlab-runner</code>的<code>config.toml</code>加上<code>output_limit</code>配置，默认是<code>4096（4MB）</code></p>
</li>
<li><p>ERROR: Uploading artifacts as “archive” to coordinator… too large archive</p>
<p>解决：<code>admin area</code> -&gt; <code>settings</code> -&gt; <code>ci/cd</code> -&gt; <code>Continuous Integration and Deployment</code> -&gt; <code>Maximum artifacts size (MB)</code></p>
</li>
<li><p>Gradle 持久化问题</p>
<p>解决：因为<code>Gradle</code>容器默认的路径为：<code>/home/gradle/.gradle</code>，所以<code>gitlab-runner</code>注册的时候，持久化这个路径就行了，使用<code>--docker-volumes &#39;/root/.gradle:/home/gradle/.gradle&#39;</code></p>
</li>
</ol>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>gitlab</tag>
        <tag>gitlab-runner</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo github ignorecase</title>
    <url>/posts/18219b06.html</url>
    <content><![CDATA[<h1 id="Hexo-部署到-Github-Pages-文件夹大小写问题"><a href="#Hexo-部署到-Github-Pages-文件夹大小写问题" class="headerlink" title="Hexo 部署到 Github Pages 文件夹大小写问题"></a>Hexo 部署到 Github Pages 文件夹大小写问题</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>使用 Hexo 部署博客到 Github Pages 时经常会遇到文件夹大小写问题导致的 404问题。</p>
<p>例如 Hexo 生成了一个 javasccript Category文件夹，但是我后来把它改成了 Javasccript，即 javasccript 的首字母大写了。Hexo会生成正确，但部署到 Github 上却老是不正确。</p>
<a id="more"></a>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>git 默认忽略文件名大小写，所以即使文件夹大小写变更，git 也检测不到。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>1、进入到博客项目中 .deploy_git文件夹，修改 .git 下的 config 文件，将 ignorecase=true 改为 ignorecase=false<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./deploy_git/.git</span><br><span class="line">vi config</span><br></pre></td></tr></table></figure></p>
<p>2、删除博客项目中 .deploy_git 文件夹下的所有文件，并 push 到 Github 上, 这一步是清空你的 github.io 项目中所有文件。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./deploy_git/</span><br><span class="line">git rm -rf *</span><br><span class="line">git commit -m <span class="string">'clean'</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></p>
<p>3、使用 Hexo 再次生成及部署<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">hexo clean &amp;&amp; hexo d -g</span><br><span class="line"><span class="comment"># hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>项目使用 gitlab-ci 做持续集成持续部署</title>
    <url>/posts/837de91.html</url>
    <content><![CDATA[<p>本教程中使用到的 maven、gradle、docker、docker-compose、shell 类型 runner，需要提前创建好，参考：。</p>
<a id="more"></a>
<h1 id="Maven-项目构建"><a href="#Maven-项目构建" class="headerlink" title="Maven 项目构建"></a>Maven 项目构建</h1><blockquote>
<p>.gitlab-ci.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">.pre</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="comment"># 如果需要使用到 mvn 命令，这里 tags 需要指定 maven，如果同时用到 docker 命令，可配置多个：比如 maven、docker</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">maven</span></span><br><span class="line">    <span class="attr">before_script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">mvn</span> <span class="string">-v</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">    <span class="comment"># 当前在项目根目录</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">    <span class="comment"># 执行打包</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mvn</span> <span class="string">clean</span> <span class="string">package</span> <span class="string">-DskipTests=true</span></span><br><span class="line">    <span class="attr">artifacts:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">      <span class="comment"># 把打包好的项目缓存起来，供后续的 stage 阶段使用</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./target/*.jar</span></span><br></pre></td></tr></table></figure>
<h1 id="Gradle-项目构建"><a href="#Gradle-项目构建" class="headerlink" title="Gradle 项目构建"></a>Gradle 项目构建</h1><blockquote>
<p>.gitlab-ci.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pre:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">.pre</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="comment"># 如果需要使用到 gradle 命令，这里 tags 需要指定 gradle</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gradle</span></span><br><span class="line">  <span class="attr">before_script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gradle</span> <span class="string">-v</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">    <span class="comment"># -x test：跳过测试；--build cache：开启cache、--parallel：开启并行模式，减少构建时间</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gradle</span> <span class="string">build</span> <span class="string">-x</span> <span class="string">test</span> <span class="string">--parallel</span> <span class="string">--build-cache</span> <span class="string">--warning-mode</span> <span class="string">all</span> <span class="string">--stacktrace</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="comment"># 把打包好的项目缓存起来，供后续的 stage 阶段使用</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./build/libs/maxkey-mgt.jar</span></span><br></pre></td></tr></table></figure>
<h1 id="构建-Docker-镜像"><a href="#构建-Docker-镜像" class="headerlink" title="构建 Docker 镜像"></a>构建 Docker 镜像</h1><p>这里使用的几个变量是在 gitlab 配置好的<br>harbor地址：$CI_HARBOR_REGISTRY<br>harbor登录用户：$CI_HARBOR_REGISTRY_USER<br>harbor登录密码：$CI_HARBOR_REGISTRY_PASSWORD</p>
<blockquote>
<p>.gitlab-ci.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">build_mgt:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="comment"># 如果单单用到 docker 命令，tags 可以指定 docker 即可</span></span><br><span class="line">    <span class="comment"># - docker</span></span><br><span class="line">    <span class="comment"># 如果同时用到 docker 和 docker-compose 命令，tags 可以指定 docker-compose</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker-compose</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="attr">BUILD_IMAGE_NAME:</span> <span class="string">"wx-admin:$CI_PIPELINE_ID"</span></span><br><span class="line">    <span class="attr">BUILD_PATH:</span> <span class="string">wx-admin</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cd</span> <span class="string">$BUILD_PATH</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pwd</span></span><br><span class="line">    <span class="comment"># 进入到有 Dockerfile 的目录，执行命令构建镜像，注意最后的‘.’号</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">$BUILD_IMAGE_NAME</span> <span class="string">.</span></span><br><span class="line">    <span class="comment"># 如果需要 push 到 harbor，需要 tag 一下</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">tag</span> <span class="string">$BUILD_IMAGE_NAME</span> <span class="string">$CI_HARBOR_REGISTRY_IMAGE/$BUILD_IMAGE_NAME</span></span><br><span class="line">    <span class="comment"># 登录 harbor</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">$CI_HARBOR_REGISTRY</span> <span class="string">-u</span> <span class="string">$CI_HARBOR_REGISTRY_USER</span> <span class="string">-p</span> <span class="string">$CI_HARBOR_REGISTRY_PASSWORD</span></span><br><span class="line">    <span class="comment"># 将镜像 push 到远端 harbor</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$CI_HARBOR_REGISTRY_IMAGE/$BUILD_IMAGE_NAME</span></span><br><span class="line">    <span class="comment"># 镜像已经 push 到远端 harbor，本地镜像可删除掉，节省空间</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rmi</span> <span class="string">$CI_HARBOR_REGISTRY_IMAGE/$BUILD_IMAGE_NAME</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">rmi</span> <span class="string">$BUILD_IMAGE_NAME</span></span><br><span class="line">    <span class="comment"># docker-compose 中可以使用环境变量</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">IMAGE=$CI_HARBOR_REGISTRY_IMAGE/$BUILD_IMAGE_NAME</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">export</span> <span class="string">FOLDER=/data/docker/wx-admin</span></span><br><span class="line">    <span class="comment"># 使用 docker-compose 部署项目</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">down</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">-d</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>docker-compose.yml<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">wx-admin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">"$&#123;IMAGE&#125;"</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wx-admin</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"$&#123;FOLDER&#125;/logs:/home/grg/logs"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"TZ=Asia/Shanghai"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="SSH-部署到远程主机"><a href="#SSH-部署到远程主机" class="headerlink" title="SSH 部署到远程主机"></a>SSH 部署到远程主机</h1><blockquote>
<p>.gitlab-ci.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy_mgt:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="comment"># 如果需要用到 ssh、scp等命令，这里 tage 需要指定 shell</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">shell</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">SERVER:</span> <span class="string">yl@127.0.0.1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">IMAGE:</span> <span class="string">"wx-admin:$CI_PIPELINE_ID"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">FOLDER:</span> <span class="string">/data/docker/wx-admin</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="comment"># 需要先在受控主机上建好项目部署目录</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ssh</span> <span class="string">-t</span> <span class="string">$SERVER</span> <span class="string">"mkdir -p $FOLDER"</span></span><br><span class="line">    <span class="comment"># 进入目录</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">cd</span> <span class="string">$FOLDER</span></span><br><span class="line">    <span class="comment"># 发送项目的 docker-compose.yml 文件到目录先</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">scp</span> <span class="string">-o</span> <span class="string">StrictHostKeyChecking=no</span> <span class="string">-o</span> <span class="string">UserKnownHostsFile=/dev/null</span> <span class="string">-r</span> <span class="string">docker-compose.yml</span> <span class="string">$SERVER:$FOLDER</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ssh</span> <span class="string">-t</span> <span class="string">$SERVER</span> <span class="string">"cd $FOLDER &amp;&amp; export IMAGE=$IMAGE &amp;&amp; export FOLDER=$FOLDER &amp;&amp; docker-compose down &amp;&amp; docker-compose up -d"</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>docker-compose.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">wx-admin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">"$&#123;IMAGE&#125;"</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wx-admin</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"$&#123;FOLDER&#125;/logs:/home/grg/logs"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"TZ=Asia/Shanghai"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>
<h2 id="gitlab-runner-免密登录受控主机"><a href="#gitlab-runner-免密登录受控主机" class="headerlink" title="gitlab-runner 免密登录受控主机"></a>gitlab-runner 免密登录受控主机</h2><blockquote>
<p> 情况一：受控主机已经存在~/.ssh/authorized_keys</p>
</blockquote>
<p>将 gitlab-runner 的 id_rsa.pub 追加到 受控主机的 authorized_keys 文件</p>
<p>参考命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 gitlab-runner 用户登录 gitlab-runner 容器</span></span><br><span class="line">docker exec -it -u gitlab-runner gitlab-runner sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器内执行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 进入用户目录</span></span></span><br><span class="line">cd ~</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 拷贝公钥到受控主机</span></span></span><br><span class="line">ssh-copy-id -i .ssh/id_rsa.pub -p22 user@ip</span><br></pre></td></tr></table></figure>
<p>也可以自己手动 copy 过去。</p>
<p>注意：容器内.ssh/id_rsa.pub已经最好持久化到宿主机。</p>
<blockquote>
<p>情况二：受控主机不存在~/.ssh/ authorized_keys</p>
</blockquote>
<p>在受控主机创建目录和文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果没有.ssh目录，手动创建</span></span><br><span class="line">cd ~</span><br><span class="line">mkdir .ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果没有 authorized_keys 文件，手动创建一个</span></span><br><span class="line">cd .ssh</span><br><span class="line">touch authorized_keys</span><br></pre></td></tr></table></figure>
<p>配置权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将.ssh目录的权限为700</span></span><br><span class="line">cd ~</span><br><span class="line">chmod -R 700 .ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将 authorized_keys 目录的权限为600</span></span><br><span class="line">cd ~/.ssh</span><br><span class="line">chmod -R 600 authorized_keys</span><br></pre></td></tr></table></figure>
<p>接下来可按照<code>情况一</code>步骤操作。</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker-compose</tag>
        <tag>gitlab</tag>
        <tag>gitlab-runner</tag>
        <tag>maven</tag>
        <tag>gitlab-ci</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo初体验</title>
    <url>/posts/2dba5ee9.html</url>
    <content><![CDATA[<h1 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>去官网现在并安装，这里安装路径选到D:\nodejs</p>
<h2 id="改变原有的环境变量"><a href="#改变原有的环境变量" class="headerlink" title="改变原有的环境变量"></a>改变原有的环境变量</h2><p>我们要先配置npm的全局模块的存放路径以及cache的路径，例如我希望将以上两个文件夹放在NodeJS的主目录下，便在NodeJs下建立”node_global”及”node_cache”两个文件夹，输入以下命令改变npm配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;D:\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure></p>
<p>这个不配置也可以？（在系统环境变量添加系统变量NODE_PATH，输入路径D:\nodejs\node_global\node_modules）<br>此后所安装的模块都会安装到改路径下</p>
<h2 id="安装淘宝npm（cnpm）"><a href="#安装淘宝npm（cnpm）" class="headerlink" title="安装淘宝npm（cnpm）"></a>安装淘宝npm（cnpm）</h2><h3 id="输入以下命令"><a href="#输入以下命令" class="headerlink" title="输入以下命令"></a>输入以下命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<h3 id="输入cnpm-v输入是否正常"><a href="#输入cnpm-v输入是否正常" class="headerlink" title="输入cnpm -v输入是否正常"></a>输入cnpm -v输入是否正常</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="安装部署hexo-github-page"><a href="#安装部署hexo-github-page" class="headerlink" title="安装部署hexo + github page"></a>安装部署hexo + github page</h1><h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>本地目录 <code>hexo</code> 文件夹，进去这个文件夹，依次执行下面的命令<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># Hexo随后会自动在目标文件夹建立网站所需要的文件</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p>
<!-- more -->
<p>启动本地Hexo服务<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p>
<p>Create a new post<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">'blog name'</span></span><br></pre></td></tr></table></figure></p>
<p>在hexo new文章时，需要stop server，否则会出现2次这个文章</p>
<p>执行下面的命令，将markdown文件生成静态网页<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></p>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git</span><br></pre></td></tr></table></figure>
<p>配置主题 <code>_config.yml</code> 文件，修改里面的 <code>theme</code> 为 <code>hexo-theme-yilia</code></p>
<h2 id="配置github仓库"><a href="#配置github仓库" class="headerlink" title="配置github仓库"></a>配置github仓库</h2><p>在<code>_config.yml</code> 文件最后添加如下内容<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/xxx/xxx.github.io.git</span></span><br><span class="line">  <span class="comment"># ssh模式</span></span><br><span class="line">  <span class="comment">#repository: https://github.com/xxx/xxx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p>
<p>配置好后，依次执行<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>
<p>出现 <code>Deploy done: git</code> 说明配置成功</p>
<p>如果提示 <code>ERROR Deployer not found: git</code>，则要安装 <code>hexo-deployer-git</code> 插件<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>
<p>部署到github，每次部署可以执行一下命令<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>在你本地的 <code>hexo</code> 项目根目录的 <code>source</code> 目录下创建 <code>CNAME</code> 文件，并在 <code>CNAME</code> 中输入绑定的域名</p>
<h2 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h2><h3 id="hexo-d出现错误"><a href="#hexo-d出现错误" class="headerlink" title="hexo d出现错误"></a>hexo d出现错误</h3><p>执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo d出现一下错误，多试几次又成功了，之后没有继续追查问题<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fatal: TaskCanceledException encountered.</span><br><span class="line">   ▒▒ȡ▒▒һ▒▒▒▒▒▒</span><br><span class="line">bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (exit code 1)</span><br><span class="line">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: fatal: TaskCanceledException encountered.</span><br><span class="line">   ��ȡ��һ��������</span><br><span class="line">bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (exit code 1)</span><br><span class="line">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class="line"></span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (D:\Workspace\foreveryang321.github.io\node_modules\hexo-util\lib\spawn.js:37:17)</span><br><span class="line">    at emitTwo (events.js:106:13)</span><br><span class="line">    at ChildProcess.emit (events.js:191:7)</span><br><span class="line">    at ChildProcess.cp.emit (D:\Workspace\foreveryang321.github.io\node_modules\cross-spawn\lib\enoent.js:40:29)</span><br><span class="line">    at maybeClose (internal/child_process.js:886:16)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)</span><br></pre></td></tr></table></figure></p>
<h2 id="图片显示问题"><a href="#图片显示问题" class="headerlink" title="图片显示问题"></a>图片显示问题</h2><p>使用<code>hexo-abbrlink</code>和<a href="mailto:`hexo-asset-image@0.0.3" target="_blank" rel="noopener">`hexo-asset-image@0.0.3</a>`会导致图片路径问题。</p>
<blockquote>
<p><a href="mailto:hexo-asset-image@0.0.5" target="_blank" rel="noopener">hexo-asset-image@0.0.5</a>版本已经修复该问题</p>
</blockquote>
<p>或者参考：<a href="https://github.com/foreveryang321/hexo-asset-image" target="_blank" rel="noopener">https://github.com/foreveryang321/hexo-asset-image</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql for Mac 使用</title>
    <url>/posts/4ae0cbaa.html</url>
    <content><![CDATA[<h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment"># 如果没有 .bash_profile 文件，可以通过 touch 来创建一个</span></span><br><span class="line">$ touch .bash_profile</span><br><span class="line"><span class="comment"># 编辑已经存在的文件，先打开文件</span></span><br><span class="line">$ open -e .bash_profile</span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">$ <span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在 .base_profile 中加入如下内容</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/mysql/bin</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="修改root默认密码"><a href="#修改root默认密码" class="headerlink" title="修改root默认密码"></a>修改root默认密码</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysqladmin -u root -p password <span class="string">"new password"</span></span><br></pre></td></tr></table></figure>
<h1 id="终端登录-mysql"><a href="#终端登录-mysql" class="headerlink" title="终端登录 mysql"></a>终端登录 mysql</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
  </entry>
  <entry>
    <title>Oracle DES 加解密</title>
    <url>/posts/2b37b6b3.html</url>
    <content><![CDATA[<h1 id="DES-encrypt"><a href="#DES-encrypt" class="headerlink" title="DES encrypt"></a>DES encrypt</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> <span class="keyword">DES_ENCRYPT</span>(P_TEXT <span class="built_in">VARCHAR2</span>, <span class="comment">-- 明文。长度要是 8 的倍数，若不足 8 的倍数，则用空白补足</span></span><br><span class="line">                                       P_KEY  <span class="built_in">VARCHAR2</span>) <span class="comment">-- 密钥。长度最少要 8 位以上; 不同的 Key，加密结果将会不同</span></span><br><span class="line"> <span class="keyword">RETURN</span> <span class="built_in">VARCHAR2</span> <span class="keyword">IS</span></span><br><span class="line">  V_TEXT    <span class="built_in">VARCHAR2</span>(<span class="number">4000</span>); <span class="comment">-- 不足 8 的倍数，补足后的字符串</span></span><br><span class="line">  V_ENCRYPT RAW(2048); <span class="comment">-- 加密后的字符串</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="comment">-- 补足。CHR(0) 隐藏字符串</span></span><br><span class="line">  V_TEXT    := RPAD(P_TEXT, (TRUNC(LENGTHB(P_TEXT) / <span class="number">8</span>) + <span class="number">1</span>) * <span class="number">8</span>, <span class="keyword">CHR</span>(<span class="number">0</span>));</span><br><span class="line">  V_ENCRYPT := DBMS_OBFUSCATION_TOOLKIT.DESENCRYPT(INPUT =&gt; UTL_I18N.STRING_TO_RAW(V_TEXT,</span><br><span class="line">                                                                                   'ZHS16GBK'), <span class="comment">-- 转换成 16 进制</span></span><br><span class="line">                                                   KEY   =&gt; UTL_I18N.STRING_TO_RAW(P_KEY,</span><br><span class="line">                                                                                   'ZHS16GBK')); <span class="comment">-- 转换成 16 进制</span></span><br><span class="line">  RETURN RAWTOHEX(V_ENCRYPT);</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="DES-decrypt"><a href="#DES-decrypt" class="headerlink" title="DES decrypt"></a>DES decrypt</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> <span class="keyword">DES_DECRYPT</span>(P_TEXT <span class="built_in">VARCHAR2</span>, <span class="comment">-- 密文</span></span><br><span class="line">                                       P_KEY  <span class="built_in">VARCHAR2</span>) <span class="comment">-- 密钥</span></span><br><span class="line"> <span class="keyword">RETURN</span> <span class="built_in">VARCHAR2</span> <span class="keyword">IS</span></span><br><span class="line">  V_DECRYPT <span class="keyword">RAW</span>(<span class="number">2048</span>); <span class="comment">-- 解密后的明文</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">IF</span> (P_TEXT <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">OR</span> P_TEXT = <span class="string">''</span>) <span class="keyword">THEN</span></span><br><span class="line">    <span class="keyword">RETURN</span> <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">  V_DECRYPT := DBMS_OBFUSCATION_TOOLKIT.DESDECRYPT(INPUT =&gt; HEXTORAW(P_TEXT),</span><br><span class="line">                                                   KEY   =&gt; UTL_I18N.STRING_TO_RAW(P_KEY,</span><br><span class="line">                                                                                   'ZHS16GBK')); <span class="comment">-- 需转换成 16 进制</span></span><br><span class="line">  <span class="comment">-- RTRIM 去除字符串右侧空白：CHR(0)</span></span><br><span class="line">  <span class="comment">-- RAW_TO_CHAR 转换成字符串</span></span><br><span class="line">  RETURN RTRIM(UTL_I18N.RAW_TO_CHAR(V_DECRYPT, 'ZHS16GBK'), CHR(0));</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>DES</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 使用</title>
    <url>/posts/db736859.html</url>
    <content><![CDATA[<h1 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rename</span> &lt;<span class="keyword">old</span> table_name&gt; <span class="keyword">to</span> &lt;<span class="keyword">new</span> table_name&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="修改用户名、密码"><a href="#修改用户名、密码" class="headerlink" title="修改用户名、密码"></a>修改用户名、密码</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 用sysdba帐号登陆，查询用户信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span><span class="comment">#, NAME FROM USER$;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更改用户名并提交</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">USER</span>$ <span class="keyword">SET</span> <span class="keyword">NAME</span> = <span class="string">'HISTORY'</span> <span class="keyword">WHERE</span> <span class="keyword">USER</span><span class="comment"># = 85;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 强制刷新，执行数据统一性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">SYSTEM</span> checkpoint;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">SYSTEM</span> <span class="keyword">flush</span> <span class="keyword">SHARED_POOL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更改用户密码</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> HISTORY <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> SUNFLOWER_WXINNEAR_0627;</span><br></pre></td></tr></table></figure>
<h1 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- CASCADE 的意思是将用户的数据库数据一并删除，并没有删除相应的表空间</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> user_name <span class="keyword">CASCADE</span>;</span><br></pre></td></tr></table></figure>
<h1 id="修改-process"><a href="#修改-process" class="headerlink" title="修改 process"></a>修改 process</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询连接数信息</span></span><br><span class="line">SQL&gt; show parameter processes;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前已使用的连接数</span></span><br><span class="line">SQL&gt; select count(*) from v<span class="variable">$process</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改最大连接数</span></span><br><span class="line">SQL&gt; alter system <span class="built_in">set</span> processes = 500 scope = spfile; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启数据库</span></span><br><span class="line">sqlplus /nolog</span><br><span class="line">SQL&gt; conn as sysdba;</span><br><span class="line">SQL&gt; shutdown immediate;</span><br><span class="line">SQL&gt; startup;</span><br></pre></td></tr></table></figure>
<h1 id="adrci"><a href="#adrci" class="headerlink" title="adrci"></a>adrci</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">adrci</span><br></pre></td></tr></table></figure>
<h1 id="Oracle-的-trace、alert日志很大"><a href="#Oracle-的-trace、alert日志很大" class="headerlink" title="Oracle 的 trace、alert日志很大"></a>Oracle 的 trace、alert日志很大</h1><p>MAX_DUMP_FILE_SIZE参数 限定了trace files 以及alert file大小，其值</p>
<p>1、当给具体数字时，是操作系统的数据块数。<br>2、当以m或k作为后缀时，表示以m或k为单位。<br>3、unlimited表示没有限制，只要os允许。（默认）</p>
<p>cd /data/app/oracle/diag/rdbms/orcl/orcl/alert/</p>
<p>cd /data/app/oracle/diag/rdbms/orcl/orcl/trace/</p>
<p>show parameter max_dump_file_size;</p>
<p>alter system set max_dump_file_size=’1024m’;</p>
<blockquote>
<p>删除 alert 日志</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /data/app/oracle/diag/rdbms/orcl/orcl/alert/ -name "*.xml" -mtime +1  -exec rm &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>删除 trace 日志</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除1天前的trc、trm</span></span><br><span class="line">find /data/app/oracle/diag/rdbms/orcl/orcl/trace -name "*.trc" -mtime +1 -exec rm &#123;&#125; \;</span><br><span class="line">find /data/app/oracle/diag/rdbms/orcl/orcl/trace -name "*.trm" -mtime +1 -exec rm &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> alert_orcl.log 日志过大</span></span><br><span class="line">cd /data/app/oracle/diag/rdbms/orcl/orcl/trace</span><br><span class="line">mv alert_orcl.log alert_orcl.log_20201026</span><br><span class="line">touch alert_orcl.log alert_orcl.log</span><br><span class="line">sqlplus / as sysdba</span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> alter system switch logfile;</span></span><br><span class="line">tail -20 alert_orcl.log</span><br><span class="line">Fri Nov 13 16:54:03 2015</span><br><span class="line">Thread 1 advanced to log sequence 2912 (LGWR switch)</span><br><span class="line">  Current log# 2 seq# 2912 mem# 0: /data/app/oracle/oradata/orcl/redo02.log</span><br></pre></td></tr></table></figure>
<h1 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 如果表存在，删除数据表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> drop_table_if_exists(</span><br><span class="line">    p_table <span class="keyword">in</span> <span class="built_in">varchar2</span></span><br><span class="line">) <span class="keyword">is</span></span><br><span class="line">    v_count <span class="built_in">number</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*)</span><br><span class="line">  <span class="keyword">INTO</span> V_COUNT</span><br><span class="line">  <span class="keyword">FROM</span> USER_OBJECTS</span><br><span class="line"> <span class="keyword">WHERE</span> OBJECT_NAME = <span class="keyword">UPPER</span>(P_TABLE);</span><br><span class="line"></span><br><span class="line">IF V_COUNT &gt; 0 THEN</span><br><span class="line">    <span class="keyword">EXECUTE</span> <span class="keyword">IMMEDIATE</span> <span class="string">'drop table '</span> || P_TABLE || <span class="string">' purge'</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle Package 包说明和包体</title>
    <url>/posts/6b176628.html</url>
    <content><![CDATA[<blockquote>
<p>在包中定义的函数，包体中实现的时候，函数名、参数名、类型都要一致，否则报错</p>
</blockquote>
<h1 id="定义包说明"><a href="#定义包说明" class="headerlink" title="定义包说明"></a>定义包说明</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PACKAGE</span> WX_CRYPTO <span class="keyword">IS</span></span><br><span class="line">  <span class="comment">-- 定义 DES encrypt 函数</span></span><br><span class="line">  <span class="keyword">FUNCTION</span> <span class="keyword">DES_ENCRYPT</span>(INPUT_STRING <span class="keyword">IN</span> <span class="built_in">VARCHAR2</span>) <span class="keyword">RETURN</span> <span class="built_in">VARCHAR2</span>;</span><br><span class="line">  FUNCTION DES_ENCRYPT(INPUT_STRING IN VARCHAR2, KEY_STRING IN VARCHAR2)</span><br><span class="line">    RETURN VARCHAR2;</span><br><span class="line"></span><br><span class="line">  <span class="comment">-- 定义 DES decrypt 函数</span></span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2) RETURN VARCHAR2 DETERMINISTIC;</span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2, KEY_STRING IN VARCHAR2)</span><br><span class="line">    RETURN VARCHAR2 DETERMINISTIC;</span><br><span class="line"><span class="keyword">END</span> WX_CRYPTO;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在创建基于自定义函数时, 指定 <code>deterministic</code> 参数，在创建函数索引，就没有问题了</p>
</blockquote>
<a id="more"></a>
<p>比如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 如果函数不加 deterministic，以下创建索引 SQL 语句会报错：</span></span><br><span class="line"><span class="comment"> * ORA-30553: The function is not deterministic</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> i_user_decrypt_user_no <span class="keyword">on</span> <span class="keyword">USER</span> (wx_crypto.des_decrypt(user_no));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 以下查询是会走索引的</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> wx_crypto.des_decrypt(user_no) = <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure>
<h1 id="定义包体"><a href="#定义包体" class="headerlink" title="定义包体"></a>定义包体</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PACKAGE</span> <span class="keyword">BODY</span> WX_CRYPTO <span class="keyword">IS</span></span><br><span class="line">  <span class="comment">-- 实现 DES encrypt 函数（一个参数）</span></span><br><span class="line">  <span class="keyword">FUNCTION</span> <span class="keyword">DES_ENCRYPT</span>(INPUT_STRING <span class="keyword">IN</span> <span class="built_in">VARCHAR2</span> <span class="comment">-- 明文</span></span><br><span class="line">                       ) <span class="keyword">RETURN</span> <span class="built_in">VARCHAR2</span> <span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> WX_CRYPTO.DES_ENCRYPT(INPUT_STRING =&gt; INPUT_STRING,</span><br><span class="line">                                 KEY_STRING   =&gt; <span class="string">'eda93763'</span>);</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">-- 实现 DES encrypt 函数（两个参数）</span></span><br><span class="line">  FUNCTION DES_ENCRYPT(INPUT_STRING IN VARCHAR2, <span class="comment">-- 明文</span></span><br><span class="line">                       KEY_STRING   IN VARCHAR2 <span class="comment">-- 密钥</span></span><br><span class="line">                       ) RETURN VARCHAR2 AS</span><br><span class="line">    V_TEXT        VARCHAR2(4000); <span class="comment">-- 明文。长度要是 8 的倍数，若不足 8 的倍数，则用隐藏字符串 chr(0) 补足</span></span><br><span class="line">    V_TEXT_RAW    RAW(2048); <span class="comment">-- 明文</span></span><br><span class="line">    V_KEY_RAW     RAW(128); <span class="comment">-- 密钥</span></span><br><span class="line">    V_ENCRYPT_RAW RAW(2048); <span class="comment">-- 加密后的字符串</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> INPUT_STRING <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span></span><br><span class="line">      <span class="keyword">RETURN</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    IF INSTR(INPUT_STRING, '&#123;DES&#125;') = 1 THEN</span><br><span class="line">      RETURN INPUT_STRING;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    <span class="comment">-- 向右补足。CHR(0) 隐藏字符串</span></span><br><span class="line">    V_TEXT := RPAD(INPUT_STRING,</span><br><span class="line">                   (TRUNC(LENGTHB(INPUT_STRING) / 8) + 1) * 8,</span><br><span class="line">                   CHR(0));</span><br><span class="line">    <span class="comment">-- 转换成 16 进制</span></span><br><span class="line">    V_TEXT_RAW    := UTL_I18N.STRING_TO_RAW(V_TEXT, 'ZHS16GBK');</span><br><span class="line">    V_KEY_RAW     := UTL_I18N.STRING_TO_RAW(KEY_STRING, 'ZHS16GBK');</span><br><span class="line">    V_ENCRYPT_RAW := DBMS_OBFUSCATION_TOOLKIT.DESENCRYPT(INPUT =&gt; V_TEXT_RAW,</span><br><span class="line">                                                         KEY   =&gt; V_KEY_RAW);</span><br><span class="line">    RETURN '&#123;DES&#125;' || RAWTOHEX(V_ENCRYPT_RAW);</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">-- 实现 DES decrypt 函数（一个参数）</span></span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2 <span class="comment">-- 明文</span></span><br><span class="line">                       ) RETURN VARCHAR2 DETERMINISTIC AS</span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">RETURN</span> WX_CRYPTO.DES_DECRYPT(INPUT_STRING =&gt; INPUT_STRING,</span><br><span class="line">                                 KEY_STRING   =&gt; <span class="string">'eda93763'</span>);</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">-- 实现 DES decrypt 函数（两个参数）</span></span><br><span class="line">  FUNCTION DES_DECRYPT(INPUT_STRING IN VARCHAR2, <span class="comment">-- 密文</span></span><br><span class="line">                       KEY_STRING   IN VARCHAR2 <span class="comment">-- 密钥</span></span><br><span class="line">                       ) RETURN VARCHAR2 DETERMINISTIC AS</span><br><span class="line">    V_TEXT_RAW       RAW(2048); <span class="comment">-- 密文</span></span><br><span class="line">    V_KEY_RAW        RAW(128); <span class="comment">-- 密钥</span></span><br><span class="line">    V_DECRYPT_RAW    RAW(2048); <span class="comment">-- 解密后的明文</span></span><br><span class="line">    V_DECRYPT_STRING VARCHAR2(4000); <span class="comment">-- 解密后的明文</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">IF</span> INPUT_STRING <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span></span><br><span class="line">      <span class="keyword">RETURN</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    IF INSTR(INPUT_STRING, '&#123;DES&#125;') = 1 THEN</span><br><span class="line">      V_TEXT_RAW := HEXTORAW(SUBSTR(INPUT_STRING, 6));</span><br><span class="line">      <span class="comment">-- 转换成 16 进制</span></span><br><span class="line">      V_KEY_RAW := UTL_I18N.STRING_TO_RAW(KEY_STRING, 'ZHS16GBK');</span><br><span class="line">      <span class="comment">-- 解密</span></span><br><span class="line">      V_DECRYPT_RAW := DBMS_OBFUSCATION_TOOLKIT.DESDECRYPT(INPUT =&gt; V_TEXT_RAW,</span><br><span class="line">                                                           KEY   =&gt; V_KEY_RAW);</span><br><span class="line">      <span class="comment">-- RAW_TO_CHAR 转换成字符串</span></span><br><span class="line">      V_DECRYPT_STRING := UTL_I18N.RAW_TO_CHAR(V_DECRYPT_RAW, 'ZHS16GBK');</span><br><span class="line">      <span class="comment">-- RTRIM 去除字符串右侧的隐藏字符串 CHR(0)</span></span><br><span class="line">      RETURN RTRIM(V_DECRYPT_STRING, CHR(0));</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">    RETURN INPUT_STRING;</span><br><span class="line">  <span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">END</span> WX_CRYPTO;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果调用多次函数，最多也只进行一次加密、或者解密操作</p>
</blockquote>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 使用默认密钥</span></span><br><span class="line"><span class="comment">-- 使用默认密钥</span></span><br><span class="line"><span class="keyword">SELECT</span> WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>) ENC,</span><br><span class="line">       WX_CRYPTO.DES_ENCRYPT(WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>)) ENC2,</span><br><span class="line">       WX_CRYPTO.DES_DECRYPT(WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>)) <span class="built_in">DEC</span>,</span><br><span class="line">       WX_CRYPTO.DES_DECRYPT(WX_CRYPTO.DES_DECRYPT(WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>))) DEC2</span><br><span class="line">  <span class="keyword">FROM</span> DUAL;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用指定密钥</span></span><br><span class="line"><span class="keyword">SELECT</span> WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>, <span class="string">'12345678'</span>) ENC,</span><br><span class="line">       WX_CRYPTO.DES_ENCRYPT(WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>,</span><br><span class="line">                                                   <span class="string">'12345678'</span>),</span><br><span class="line">                             <span class="string">'12345678'</span>) ENC2,</span><br><span class="line">       WX_CRYPTO.DES_DECRYPT(WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>,</span><br><span class="line">                                                   <span class="string">'12345678'</span>),</span><br><span class="line">                             <span class="string">'12345678'</span>) <span class="built_in">DEC</span>,</span><br><span class="line">       </span><br><span class="line">       WX_CRYPTO.DES_DECRYPT(WX_CRYPTO.DES_DECRYPT(WX_CRYPTO.DES_ENCRYPT(<span class="string">'1234中文abc'</span>,</span><br><span class="line">                                                                         <span class="string">'12345678'</span>),</span><br><span class="line">                                                   <span class="string">'12345678'</span>),</span><br><span class="line">                             <span class="string">'12345678'</span>) DEC2</span><br><span class="line">  <span class="keyword">FROM</span> DUAL;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Package</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle SYSDATE</title>
    <url>/posts/b9e67bce.html</url>
    <content><![CDATA[<h1 id="sysdate"><a href="#sysdate" class="headerlink" title="sysdate"></a>sysdate</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">'当前时间'</span> <span class="keyword">AS</span> 描述,</span><br><span class="line">       TO_CHAR(<span class="keyword">SYSDATE</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">AS</span> 时间</span><br><span class="line">  <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'1天前'</span> <span class="keyword">AS</span> 描述,</span><br><span class="line">       TO_CHAR(<span class="keyword">SYSDATE</span> - <span class="number">1</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">AS</span> 时间</span><br><span class="line">  <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'1小时前'</span> <span class="keyword">AS</span> 描述,</span><br><span class="line">       TO_CHAR(<span class="keyword">SYSDATE</span> - <span class="number">1</span> / <span class="number">24</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">AS</span> 时间</span><br><span class="line">  <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'1分钟前'</span> <span class="keyword">AS</span> 描述,</span><br><span class="line">       TO_CHAR(<span class="keyword">SYSDATE</span> - <span class="number">1</span> / (<span class="number">24</span> * <span class="number">60</span>), <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">AS</span> 时间</span><br><span class="line">  <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'1秒钟前'</span> <span class="keyword">AS</span> 描述,</span><br><span class="line">       TO_CHAR(<span class="keyword">SYSDATE</span> - <span class="number">1</span> / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>), <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">AS</span> 时间</span><br><span class="line">  <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="comment">-- 2019-11-29号执行以下 sql</span></span><br><span class="line"><span class="comment">-- SELECT  TRUNC(SYSDATE - 1) + 1, TRUNC(SYSDATE + 1) FROM dual</span></span><br><span class="line"><span class="comment">-- 2019/11/29	2019/11/30</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>打印结果</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">描述		时间</span><br><span class="line">当前时间   2019-03-10 10:53:36</span><br><span class="line">1天前     2019-03-09 10:53:36</span><br><span class="line">1小时前    2019-03-10 09:53:36</span><br><span class="line">1分钟前    2019-03-10 10:52:36</span><br><span class="line">1秒钟前    2019-03-10 10:53:35</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>SYSDATE</tag>
      </tags>
  </entry>
  <entry>
    <title>PLSQL Developer乱码解决</title>
    <url>/posts/7c1a91cc.html</url>
    <content><![CDATA[<h1 id="查编码"><a href="#查编码" class="headerlink" title="查编码"></a>查编码</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> userenv(<span class="string">'language'</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="Window环境变量"><a href="#Window环境变量" class="headerlink" title="Window环境变量"></a>Window环境变量</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">GBK编码：</span><br><span class="line">NLS_LANG=CHINESE_CHINA.ZHS16GBK</span><br><span class="line">或者</span><br><span class="line">NLS_LANG=AMERICAN_AMERICA.ZHS16GBK</span><br><span class="line"></span><br><span class="line">UTF-8编码：</span><br><span class="line">NLS_LANG=AMERICAN_AMERICA.AL32UTF8</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>PLSQL Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 按分区同步数据到另一个库</title>
    <url>/posts/4d2ee75e.html</url>
    <content><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>A库中某些大表（1年数据量10+亿条）数据只保留最近3个月数据，超过3个月的数据，都迁移到B库中保存，然后删除A库中已经迁移的数据。</p>
<a id="more"></a>
<h1 id="A库"><a href="#A库" class="headerlink" title="A库"></a>A库</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--  创建视图，指定分区条件</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> V_IM_WX_LOG <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> IM_WX_LOG <span class="keyword">PARTITION</span>(P2019Y03);</span><br></pre></td></tr></table></figure>
<h1 id="B库"><a href="#B库" class="headerlink" title="B库"></a>B库</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 为A库视图创建同义词</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SYNONYM</span> V_IM_WX_LOG <span class="keyword">FOR</span> V_IM_WX_LOG@DBLN_WEIXINDB_KBT;</span><br><span class="line"><span class="comment">-- 同步数据</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IM_WX_LOG_P2019Y03 <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V_IM_WX_LOG;</span><br></pre></td></tr></table></figure>
<h1 id="A库-1"><a href="#A库-1" class="headerlink" title="A库"></a>A库</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_LOG <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> P2019Y03;</span><br><span class="line"><span class="comment">-- 如果索引不是nologging local类型，则需要重建索引</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">index</span> PK_ID <span class="keyword">rebuild</span> <span class="keyword">online</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 或者直接使用以下语句</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_LOG <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> P2019Y03 <span class="keyword">UPDATE</span> IDEXES;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL中inner join、outer join和cross join的区别</title>
    <url>/posts/8b243174.html</url>
    <content><![CDATA[<h1 id="SQL中inner-join、outer-join和cross-join的区别"><a href="#SQL中inner-join、outer-join和cross-join的区别" class="headerlink" title="SQL中inner join、outer join和cross join的区别"></a>SQL中inner join、outer join和cross join的区别</h1><h2 id="INNER-JOIN-产生的结果是AB的交集"><a href="#INNER-JOIN-产生的结果是AB的交集" class="headerlink" title="INNER JOIN 产生的结果是AB的交集"></a>INNER JOIN 产生的结果是AB的交集</h2><p>SELECT * FROM TableA INNER JOIN TableB ON TableA.name = TableB.name</p>
<a id="more"></a>
<h2 id="LEFT-OUTER-JOIN-产生表A的完全集，而B表中匹配的则有值，没有匹配的则以null值取代"><a href="#LEFT-OUTER-JOIN-产生表A的完全集，而B表中匹配的则有值，没有匹配的则以null值取代" class="headerlink" title="LEFT [OUTER] JOIN 产生表A的完全集，而B表中匹配的则有值，没有匹配的则以null值取代"></a>LEFT [OUTER] JOIN 产生表A的完全集，而B表中匹配的则有值，没有匹配的则以null值取代</h2><p>SELECT * FROM TableA LEFT OUTER JOIN TableB ON TableA.name = TableB.name</p>
<h2 id="RIGHT-OUTER-JOIN-产生表B的完全集，而A表中匹配的则有值，没有匹配的则以null值取代"><a href="#RIGHT-OUTER-JOIN-产生表B的完全集，而A表中匹配的则有值，没有匹配的则以null值取代" class="headerlink" title="RIGHT [OUTER] JOIN 产生表B的完全集，而A表中匹配的则有值，没有匹配的则以null值取代"></a>RIGHT [OUTER] JOIN 产生表B的完全集，而A表中匹配的则有值，没有匹配的则以null值取代</h2><p>SELECT * FROM TableA RIGHT OUTER JOIN TableB ON TableA.name = TableB.name</p>
<h2 id="FULL-OUTER-JOIN-产生A和B的并集。对于没有匹配的记录，则会以null做为值"><a href="#FULL-OUTER-JOIN-产生A和B的并集。对于没有匹配的记录，则会以null做为值" class="headerlink" title="FULL [OUTER] JOIN 产生A和B的并集。对于没有匹配的记录，则会以null做为值"></a>FULL [OUTER] JOIN 产生A和B的并集。对于没有匹配的记录，则会以null做为值</h2><p>SELECT <em> FROM TableA FULL OUTER JOIN TableB ON TableA.name = TableB.name<br>你可以通过is NULL将没有匹配的值找出来：<br>SELECT </em> FROM TableA FULL OUTER JOIN TableB ON TableA.name = TableB.name<br>WHERE TableA.id IS null OR TableB.id IS null</p>
<h2 id="CROSS-JOIN-把表A和表B的数据进行一个NM的组合，即笛卡尔积。如本例会产生44-16条记录，在开发过程中我们肯定是要过滤数据，所以这种很少用"><a href="#CROSS-JOIN-把表A和表B的数据进行一个NM的组合，即笛卡尔积。如本例会产生44-16条记录，在开发过程中我们肯定是要过滤数据，所以这种很少用" class="headerlink" title="CROSS JOIN 把表A和表B的数据进行一个NM的组合，即笛卡尔积。如本例会产生44=16条记录，在开发过程中我们肯定是要过滤数据，所以这种很少用"></a>CROSS JOIN 把表A和表B的数据进行一个N<em>M的组合，即笛卡尔积。如本例会产生4</em>4=16条记录，在开发过程中我们肯定是要过滤数据，所以这种很少用</h2><p>SELECT * FROM TableA CROSS JOIN TableB</p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle dblink操作</title>
    <url>/posts/5bb4128a.html</url>
    <content><![CDATA[<h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="comment">-- create &lt;public&gt; database link &lt;dblink_name&gt; connect to &lt;user&gt; identified by &lt;user_pwd&gt; using &lt;dblink&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">link</span> db_test <span class="keyword">connect</span> <span class="keyword">to</span> scott <span class="keyword">identified</span> <span class="keyword">by</span> tiger <span class="keyword">using</span> <span class="string">'(DESCRIPTION=(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.1)(PORT = 1521)))(CONNECT_DATA=(SERVER = DEDICATED)(SERVICE_NAME = orcl)))'</span>;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> &lt;<span class="keyword">public</span>&gt; <span class="keyword">database</span> <span class="keyword">link</span> db_test</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>dblink</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 安装 Oracle</title>
    <url>/posts/ee8ba7d4.html</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote>
<p><a href="https://hub.docker.com/r/loliconneko/oracle-ee-11g" target="_blank" rel="noopener">https://hub.docker.com/r/loliconneko/oracle-ee-11g</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull loliconneko/oracle-ee-11g</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><h2 id="docker-run-命令"><a href="#docker-run-命令" class="headerlink" title="docker run 命令"></a>docker run 命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -h "oracle" --name "oracle" -d -p 1521:1521 loliconneko/oracle-ee-11g</span><br></pre></td></tr></table></figure>
<h2 id="docker-compose-启动"><a href="#docker-compose-启动" class="headerlink" title="docker-compose 启动"></a>docker-compose 启动</h2><blockquote>
<p>oracle.yml</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">oracle-ee-11g:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">loliconneko/oracle-ee-11g</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="comment"># - 1522:8080</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">1521</span><span class="string">:1521</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/docker/oracle:/u01/app/oracle</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose -f oracle.yml up</span><br></pre></td></tr></table></figure>
<h1 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it &lt;container_id&gt; /bin/bash</span><br></pre></td></tr></table></figure>
<h1 id="登录oracle"><a href="#登录oracle" class="headerlink" title="登录oracle"></a>登录oracle</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqlplus sysdba/oracle</span><br><span class="line"><span class="meta">#</span><span class="bash"> 账号/密码</span></span><br><span class="line">system/oracle</span><br></pre></td></tr></table></figure>
<h1 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">select username,password from dba_users;</span><br></pre></td></tr></table></figure>
<h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">create user &lt;user_name&gt; identified by &lt;password&gt;;</span><br></pre></td></tr></table></figure>
<h1 id="给用户授权"><a href="#给用户授权" class="headerlink" title="给用户授权"></a>给用户授权</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grant connect,resource to &lt;user_name&gt;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>connect 是保证该用户能连接数据库<br>resource 是该用户可以使用数据库资源</p>
</blockquote>
<p>所有权限</p>
<p>grant all privileges to &lt;user_name&gt;;</p>
<h1 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">drop user deque</span><br></pre></td></tr></table></figure>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jdbc:oracle:thin:@&lt;ip&gt;:&lt;port&gt;:EE.oracle.docker</span><br><span class="line">或者</span><br><span class="line">jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=&lt;ip&gt;)(PORT=&lt;port&gt;))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=EE.oracle.docker)))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>oracledb_exporter 监控使用</title>
    <url>/posts/65c8c0a4.html</url>
    <content><![CDATA[<h1 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h1><p>oracledb_up 数据库状态<br>  “text”: “DEAD”, “value”: “0”<br>  “text”: “ALIVE”, “value”: “1”<br>oracledb_exporter_scrapes_total 总收集<br>oracledb_activity_execute_count 执行计数<br>oracledb_activity_user_commits 用户提交数<br>oracledb_tablespace_free 表空间状态<br>oracledb_sessions_value 活动会话<br>oracledb_exporter_last_scrape_duration_seconds 最后收集用时<br>oracledb_process_count 进程计数<br>oracledb_activity_user_rollbacks 用户回滚<br>oracledb_wait_time_concurrency 并发等待时间<br>oracledb_wait_time_commit 提交等待时间<br>oracledb_wait_time_application 应用等待<br>oracledb_wait_time_network 网络等待<br>oracledb_resource_current_utilization 资源利用率<br>oracledb_wait_time_system_io 系统I/O等待<br>oracledb_wait_time_user_io 用户I/O等待<br>oracledb_wait_time_configuration 组态等待时间<br>oracledb_wait_time_scheduler Scheduler 等待时间</p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>exporter</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle spool操作</title>
    <url>/posts/eaf10d0a.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/ksh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"set echo off;</span></span><br><span class="line"><span class="string">set heading off;</span></span><br><span class="line"><span class="string">set line 100;</span></span><br><span class="line"><span class="string">set long 2000000000;</span></span><br><span class="line"><span class="string">set longchunksize 255;</span></span><br><span class="line"><span class="string">set wra on;</span></span><br><span class="line"><span class="string">set newpage none;</span></span><br><span class="line"><span class="string">set pagesize 0;</span></span><br><span class="line"><span class="string">set numwidth 12;</span></span><br><span class="line"><span class="string">set termout off;</span></span><br><span class="line"><span class="string">set trimout on;</span></span><br><span class="line"><span class="string">set trimspool on;</span></span><br><span class="line"><span class="string">set feedback off;</span></span><br><span class="line"><span class="string">set timing on;</span></span><br><span class="line"><span class="string">execute dbms_logmnr.add_logfile(LogFileName=&gt;'/oracle/app/oracle/logs/hrbfct_1_4156_748575599.arc',Options=&gt;dbms_logmnr.new);</span></span><br><span class="line"><span class="string">execute dbms_logmnr.start_logmnr(DictFileName=&gt;'/oracle/app/oracle/logs/dict.ora');</span></span><br><span class="line"><span class="string">spool /oracle/app/oracle/logs/record3.txt;</span></span><br><span class="line"><span class="string">select id||'|'||name from t_user;</span></span><br><span class="line"><span class="string">spool off;</span></span><br><span class="line"><span class="string">"</span> | sqlplus <span class="string">'/as sysdba'</span>&gt;/dev/null</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>spool</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 归档日志</title>
    <url>/posts/e34c2a97.html</url>
    <content><![CDATA[<h1 id="开启、关闭归档"><a href="#开启、关闭归档" class="headerlink" title="开启、关闭归档"></a>开启、关闭归档</h1><blockquote>
<p>开启</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 关闭数据库</span></span><br><span class="line">shutdown immediate;</span><br><span class="line"><span class="comment">-- 打开数据库</span></span><br><span class="line">startup mount;</span><br><span class="line"><span class="comment">-- 开启归档日志</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">archivelog</span>;</span><br><span class="line"><span class="comment">-- 开启数据库</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br><span class="line"><span class="comment">-- 查看归档日志是否开启</span></span><br><span class="line">archive log list;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>关闭</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 关闭数据库</span></span><br><span class="line">SQL&gt; shutdown immediate；</span><br><span class="line"><span class="comment">-- 开启数据库至mount状态</span></span><br><span class="line">SQL&gt; startup mount;</span><br><span class="line"><span class="comment">-- 修改数据库模式</span></span><br><span class="line">SQL&gt; alter datebase noarchivelog;</span><br></pre></td></tr></table></figure>
<h1 id="查询归档模式是否开启"><a href="#查询归档模式是否开启" class="headerlink" title="查询归档模式是否开启"></a>查询归档模式是否开启</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">SQL&gt; archive log list;</span><br><span class="line">Database log mode              No Archive Mode</span><br><span class="line">Automatic archival             Disabled</span><br><span class="line">Archive destination            USE_DB_RECOVERY_FILE_DEST</span><br><span class="line">Oldest online log sequence     10107</span><br><span class="line">Current log sequence           10109</span><br></pre></td></tr></table></figure>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>归档日志空间占满</p>
<p>ORA-00257: archiver error. Connect internal only, until freed</p>
<h1 id="查看归档"><a href="#查看归档" class="headerlink" title="查看归档"></a>查看归档</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line">SQL&gt; select * from V$FLASH_RECOVERY_AREA_USAGE;</span><br><span class="line">SQL&gt; quit</span><br></pre></td></tr></table></figure>
<!-- more -->
<h1 id="查询归档日志文件大小"><a href="#查询归档日志文件大小" class="headerlink" title="查询归档日志文件大小"></a>查询归档日志文件大小</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span> to_char(completion_time,<span class="string">'yyyy-mm-dd'</span>) <span class="keyword">as</span> date1,</span><br><span class="line">    <span class="comment">-- CNT 为每天归档次数</span></span><br><span class="line">    <span class="keyword">count</span>(<span class="number">0</span>) <span class="keyword">as</span> cnt,</span><br><span class="line">    <span class="comment">-- MB 为每天的归档量</span></span><br><span class="line">    <span class="keyword">round</span>(<span class="keyword">sum</span>((blocks*block_size)/<span class="number">1024</span>/<span class="number">1024</span>)) <span class="keyword">as</span> mb </span><br><span class="line">    <span class="keyword">from</span> v$archived_log </span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> to_char(completion_time,<span class="string">'yyyy-mm-dd'</span>) </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> date1 <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure>
<h1 id="调整归档日志大小"><a href="#调整归档日志大小" class="headerlink" title="调整归档日志大小"></a>调整归档日志大小</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看归档日志信息</span></span><br><span class="line">SQL&gt; show parameter db_recovery;</span><br><span class="line"><span class="comment">-- 查看归档日志大小</span></span><br><span class="line">SQL&gt; show parameter db_recovery_file_dest_size;</span><br><span class="line"><span class="comment">-- 调整归档日志大小</span></span><br><span class="line">SQL&gt; alter system set db_recovery_file_dest_size=400g</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一般日志文件路径：/data/app/oracle/fast_recovery_area/ORCL/archivelog/</p>
</blockquote>
<h1 id="删除归档日志"><a href="#删除归档日志" class="headerlink" title="删除归档日志"></a>删除归档日志</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ rman</span><br><span class="line">$ connect target sys/oracle</span><br><span class="line"></span><br><span class="line">RMAN&gt; crosscheck archivelog all;</span><br><span class="line">RMAN&gt; delete expired archivelog all;</span><br><span class="line"><span class="comment">-- 注：删除过期的归档</span></span><br><span class="line"><span class="comment">-- 这样就把归档文件删除了。再进入sqlplus 查看ARCHIVELOG日志使用率！</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 以上处理方法是当遇到出现日志写满报错时的处理，建议最好做个任务，定时删除日志，如下：</span></span><br><span class="line"><span class="comment">-- 删除七天前的归档</span></span><br><span class="line">RMAN&gt; DELETE ARCHIVELOG ALL COMPLETED BEFORE 'SYSDATE-7';</span><br><span class="line"><span class="comment">-- 删除七天到现在的归档 </span></span><br><span class="line">RMAN&gt; DELETE ARCHIVELOG FROM TIME 'SYSDATE-7';</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">ARCHIVELOG</span> <span class="keyword">FROM</span> <span class="built_in">TIME</span> <span class="string">'SYSDATE-1'</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>del_archivelog.sh</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "--------------------------`date`--------------------------"</span><br><span class="line">source ~/.bash_profile</span><br><span class="line">mkdir -p /data/del_archivelog</span><br><span class="line">LOG_DIR=/data/del_archivelog/</span><br><span class="line">DATEL=`date '+%Y-%m-%d'`</span><br><span class="line">LOG_NAME=$&#123;LOG_DIR&#125;$&#123;DATEL&#125;".log"</span><br><span class="line"></span><br><span class="line">rman log=$LOG_NAME target / &lt;&lt;EOF</span><br><span class="line">crosscheck archivelog all;</span><br><span class="line">delete noprompt archivelog all completed before 'sysdate-2';</span><br><span class="line">EOF</span><br><span class="line">echo -e "\n"</span><br><span class="line">echo "--------------------------finished--------------------------"</span><br></pre></td></tr></table></figure>
<blockquote>
<p>每天6点执行脚本 del_archivelog.sh，并将执行结果输出到 task.log</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 6 * * * sh ~/del_archivelog.sh &gt;&gt; ~/del_archivelog/task.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>archiver</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 修改默认监听端口</title>
    <url>/posts/edff79be.html</url>
    <content><![CDATA[<h1 id="查看监听状态"><a href="#查看监听状态" class="headerlink" title="查看监听状态"></a>查看监听状态</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsnrctl status</span><br></pre></td></tr></table></figure>
<h1 id="停止监听"><a href="#停止监听" class="headerlink" title="停止监听"></a>停止监听</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsnrctl stop</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi <span class="variable">$ORACLE_HOME</span>/network/admin/listener.ora</span><br><span class="line">1521-----&gt;21521</span><br></pre></td></tr></table></figure>
<h1 id="登录并查看local-listener参数"><a href="#登录并查看local-listener参数" class="headerlink" title="登录并查看local_listener参数"></a>登录并查看local_listener参数</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sqlplus / as sysdba</span><br><span class="line">SQL&gt; show parameter local_listener</span><br><span class="line">(这个时候VALUE这个值应该是空的)</span><br></pre></td></tr></table></figure>
<h1 id="修改local-listener参数"><a href="#修改local-listener参数" class="headerlink" title="修改local_listener参数"></a>修改local_listener参数</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">SQL&gt; alter system set local_listener="(address = (protocol = tcp)(host = 192.168.123.10)(port = 21521))";</span><br><span class="line"><span class="comment">#host后面加的主机名称或者IP</span></span><br></pre></td></tr></table></figure>
<h1 id="查看local-listener参数"><a href="#查看local-listener参数" class="headerlink" title="查看local_listener参数"></a>查看local_listener参数</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line">SQL&gt; show parameter local_listener</span><br></pre></td></tr></table></figure>
<h1 id="启动监听"><a href="#启动监听" class="headerlink" title="启动监听"></a>启动监听</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsnrctl start</span><br></pre></td></tr></table></figure>
<h1 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netstat -an|grep 21521</span><br><span class="line">$ lsnrctl status</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 批量修改字段长度</title>
    <url>/posts/246b5f2e.html</url>
    <content><![CDATA[<h1 id="Oracle不同字符集导入导出"><a href="#Oracle不同字符集导入导出" class="headerlink" title="Oracle不同字符集导入导出"></a>Oracle不同字符集导入导出</h1><p>GBK导入UTF8：GBK字符集（一个汉字占用两位），UTF8字符集（一个汉子占用三位）</p>
<blockquote>
<p>修改 varchar2 类型长度</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PROCEDURE</span> m_varchar2 <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">CURSOR</span> TEMP <span class="keyword">IS</span></span><br><span class="line">        <span class="keyword">SELECT</span> TABLE_NAME,</span><br><span class="line">               COLUMN_NAME,</span><br><span class="line">               <span class="keyword">CEIL</span>(DATA_LENGTH * <span class="number">3</span> / <span class="number">2</span>) DATA_LENGTH</span><br><span class="line">          <span class="keyword">FROM</span> USER_TAB_COLUMNS</span><br><span class="line">         <span class="keyword">WHERE</span> DATA_TYPE = <span class="string">'VARCHAR2'</span></span><br><span class="line">           <span class="keyword">AND</span> DATA_LENGTH &lt; <span class="number">2000</span>;</span><br><span class="line">    STR VARCHAR2(500) := '';</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    DBMS_OUTPUT.ENABLE(<span class="number">1000000</span>);</span><br><span class="line">    FOR S IN TEMP LOOP</span><br><span class="line">        STR := '<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">' || S.TABLE_NAME || '</span> <span class="keyword">MODIFY</span>(<span class="string">' ||</span></span><br><span class="line"><span class="string">               S.COLUMN_NAME || '</span> <span class="built_in">VARCHAR2</span>(<span class="string">' || S.DATA_LENGTH || '</span>))<span class="string">';</span></span><br><span class="line"><span class="string">        DBMS_OUTPUT.PUT_LINE(STR);</span></span><br><span class="line"><span class="string">        EXECUTE IMMEDIATE STR;</span></span><br><span class="line"><span class="string">    END LOOP;</span></span><br><span class="line"><span class="string">END;</span></span><br></pre></td></tr></table></figure>
<p>执行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> m_varchar2();</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<blockquote>
<p>修改 char 类型长度</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PROCEDURE</span> m_char <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">CURSOR</span> TEMP <span class="keyword">IS</span></span><br><span class="line">        <span class="keyword">SELECT</span> TABLE_NAME,</span><br><span class="line">               COLUMN_NAME,</span><br><span class="line">               <span class="keyword">CEIL</span>(DATA_LENGTH * <span class="number">3</span> / <span class="number">2</span>) DATA_LENGTH</span><br><span class="line">          <span class="keyword">FROM</span> USER_TAB_COLUMNS</span><br><span class="line">         <span class="keyword">WHERE</span> DATA_TYPE = <span class="string">'CHAR'</span></span><br><span class="line">           <span class="keyword">AND</span> DATA_LENGTH &lt; <span class="number">2000</span>;</span><br><span class="line">    STR VARCHAR2(500) := '';</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    DBMS_OUTPUT.ENABLE(<span class="number">1000000</span>);</span><br><span class="line">    FOR S IN TEMP LOOP</span><br><span class="line">        STR := '<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">' || S.TABLE_NAME || '</span> <span class="keyword">MODIFY</span>(<span class="string">' ||</span></span><br><span class="line"><span class="string">               S.COLUMN_NAME || '</span> <span class="built_in">VARCHAR2</span>(<span class="string">' || S.DATA_LENGTH || '</span>))<span class="string">';</span></span><br><span class="line"><span class="string">        DBMS_OUTPUT.PUT_LINE(STR);</span></span><br><span class="line"><span class="string">        EXECUTE IMMEDIATE STR;</span></span><br><span class="line"><span class="string">    END LOOP;</span></span><br><span class="line"><span class="string">END;</span></span><br></pre></td></tr></table></figure>
<p>执行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> m_char();</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>expdp</tag>
        <tag>impdp</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 整库迁移</title>
    <url>/posts/d5d4c80.html</url>
    <content><![CDATA[<h1 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">expdp 用户名/密码  directory=DMP logfile=e_T_C_CNCM_EXTINFO.log dumpfile=T_C_CNCM_EXTINFO%U.dmp PARALLEL=6  cluster=no  compression=ALL tables=(table1,table2)</span><br><span class="line"></span><br><span class="line">directory=DMP  <span class="comment">-- 这个是虚拟目录（日志文件和DMP文件存放路径）， 需求提前在数据库里面创建，需要DBA权限。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">directory</span> DMP <span class="keyword">as</span> <span class="string">'/dmp/backup'</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">read</span>,write,<span class="keyword">EXECUTE</span> <span class="keyword">on</span> <span class="keyword">directory</span> DMP <span class="keyword">to</span> 用户名;</span><br><span class="line"></span><br><span class="line">logfile=e_T_C_CNCM_EXTINFO.log  <span class="comment">-- EXPDP日志</span></span><br><span class="line">dumpfile=T_C_CNCM_EXTINFO%U.dmp <span class="comment">-- 输出的DMP文件，其中%U为并行导出产生的序号，如果开6个并行，就可能会有六个文件，自动从01-06编号</span></span><br><span class="line">PARALLEL=6  <span class="comment">-- 并行导出，可以根据主机CPU增加，最好不要超过CODE数</span></span><br><span class="line">cluster=no  <span class="comment">-- 关闭cluster（防止非共享磁盘写文件问题）</span></span><br><span class="line">compression  <span class="comment">-- 压缩</span></span><br><span class="line">tables=()  <span class="comment">-- 可以写多个table</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">impdp 用户名/密码  directory=DMP logfile=i_T_C_APT_TEMPLATE_DETAIL.log dumpfile=T_C_APT_TEMPLATE_DETAIL%U.dmp PARALLEL=4 table_exists_action=<span class="keyword">truncate</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- table_exists_action 可选参数：</span></span><br><span class="line"><span class="comment">-- trauncate：导入时 trauncate 清空原表数据再导入</span></span><br><span class="line"><span class="comment">-- replace：先 drop 表，然后创建表，最后插入数据  </span></span><br><span class="line"><span class="comment">-- append：在原来数据的基础上增加数据</span></span><br></pre></td></tr></table></figure>
<p>SELECT DIRECTORY_NAME ,DIRECTORY_PATH FROM DBA_DIRECTORIES;</p>
<p>/data/app/oracle/admin/orcl/dpdump/</p>
<p>create directory DATA_PUMP_DIR as ‘/data/dmp’;</p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>expdp</tag>
        <tag>impdp</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 编码配置</title>
    <url>/posts/a4a638d8.html</url>
    <content><![CDATA[<h1 id="查编码"><a href="#查编码" class="headerlink" title="查编码"></a>查编码</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> userenv(<span class="string">'language'</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="编码配置"><a href="#编码配置" class="headerlink" title="编码配置"></a>编码配置</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">oracle数据库的编码</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> nls_database_parameters <span class="keyword">where</span> parameter =<span class="string">'NLS_CHARACTERSET'</span>;</span><br><span class="line">oracle客户端编码</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> nls_instance_parameters <span class="keyword">where</span> parameter=<span class="string">'NLS_LANGUAGE'</span>;</span><br><span class="line"></span><br><span class="line">conn /as sysdba;</span><br><span class="line">shutdown immediate;</span><br><span class="line">startup mount;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">enable</span> <span class="keyword">restricted</span> <span class="keyword">session</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> job_queue_processes=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span> AQ_TM_PROCESSES=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="built_in">character</span> <span class="keyword">set</span> INTERNAL_USE AL32UTF8;</span><br><span class="line">shutdown immediate;</span><br><span class="line">startup;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 分区</title>
    <url>/posts/7150914.html</url>
    <content><![CDATA[<h1 id="自增分区"><a href="#自增分区" class="headerlink" title="自增分区"></a>自增分区</h1><blockquote>
<p>numtoyminterval 按年、月分区</p>
</blockquote>
<p>numtoyminterval(1, ‘year’)、numtoyminterval(1, ‘month’)</p>
<blockquote>
<p>numtodsinterval 按天、时、分、秒分区</p>
</blockquote>
<p>numtodsinterval(1, ‘day’)、numtodsinterval(1, ‘hour’)、numtodsinterval(1, ‘minute’)、numtodsinterval(1, ‘second’)</p>
<blockquote>
<p>例子</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span> (<span class="keyword">id</span> <span class="built_in">number</span>, create_dt <span class="built_in">date</span>)</span><br><span class="line">	<span class="keyword">tablespace</span> <span class="keyword">users</span></span><br><span class="line">	<span class="keyword">partition</span> <span class="keyword">by</span> <span class="keyword">range</span> (create_dt)</span><br><span class="line">	<span class="built_in">interval</span>(numtoyminterval(<span class="number">1</span>, <span class="string">'month'</span>))</span><br><span class="line">	(</span><br><span class="line">        <span class="keyword">partition</span> p1 <span class="keyword">values</span> <span class="keyword">less</span> <span class="keyword">than</span> (<span class="keyword">to_date</span>(<span class="string">'2018-01-01 00:00:00'</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>))</span><br><span class="line">    );</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="清空、删除分区操作"><a href="#清空、删除分区操作" class="headerlink" title="清空、删除分区操作"></a>清空、删除分区操作</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建分区表</span></span><br><span class="line">略</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查分区表及数据</span></span><br><span class="line">sql&gt; select t.table_name,t.partition_name,t.num_rows,t.blocks,t.interval,t.high_value from USER_TAB_PARTITIONS t;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建主键和索引</span></span><br><span class="line">sql&gt; alter table TEST_PARTAS add constraint pk_id primary key(ID);</span><br><span class="line">sql&gt; CREATE INDEX IND_ACCOUNT_ID ON TEST_PARTAS (ACCOUNT_ID);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查索引状态，当前状态可用</span></span><br><span class="line">sql&gt; select T.INDEX_NAME,T.TABLE_NAME,T.STATUS from user_indexes t where t.table_name='TEST_PARTAS';</span><br><span class="line"></span><br><span class="line">INDEX_NAME TABLE_NAME STATUS</span><br><span class="line"><span class="comment">------------------------------ ------------------------------ --------</span></span><br><span class="line">PK_ID TEST_PARTAS VALID</span><br><span class="line">IND_ACCOUNT_ID TEST_PARTAS VALID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用truncate 删除p0分区数据，不加update index参数</span></span><br><span class="line">sql&gt; alter table test_partas truncate partition p0;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查索引状态，状态不可用</span></span><br><span class="line">INDEX_NAME TABLE_NAME STATUS</span><br><span class="line"><span class="comment">------------------------------ ------------------------------ --------</span></span><br><span class="line">PK_ID TEST_PARTAS UNUSABLE</span><br><span class="line">IND_ACCOUNT_ID TEST_PARTAS UNUSABLE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重建立索引，要加online ，尽量减小对业务的冲击</span></span><br><span class="line">sql&gt; alter index PK_ID rebuild online;</span><br><span class="line">sql&gt; alter index IND_ACCOUNT_ID rebuild online;</span><br><span class="line">此时索引恢复正常可用状态</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用truncate 删除p1分区数据，增加update index参数</span></span><br><span class="line">sql&gt; alter table test_partas truncate partition p1 update indexes;</span><br><span class="line">此时索引是正常可用状态</span><br></pre></td></tr></table></figure>
<blockquote>
<p>扩展</p>
</blockquote>
<p>如果 truncate 清空分区数据、drop 删除分区，索引都会失效</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">sql&gt; alter table test_partas drop partition SYS_P1611;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG_02 NOLOGGING <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> IM_WX_PAGEOPEN_LOG;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> P2020Y010;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> P2020Y11;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> P2020Y12;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> P2020Y09 <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span>(<span class="keyword">TO_DATE</span>(<span class="string">'2020-10-01 00:00:00'</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>));</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> P2020Y10 <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span>(<span class="keyword">TO_DATE</span>(<span class="string">'2020-11-01 00:00:00'</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>));</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> P2020Y11 <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span>(<span class="keyword">TO_DATE</span>(<span class="string">'2020-12-01 00:00:00'</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>));</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> IM_WX_PAGEOPEN_LOG <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> P2020Y12 <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span>(<span class="keyword">TO_DATE</span>(<span class="string">'2021-01-01 00:00:00'</span>, <span class="string">'yyyy-mm-dd hh24:mi:ss'</span>));</span><br></pre></td></tr></table></figure>
<h1 id="查询索引状态不可用"><a href="#查询索引状态不可用" class="headerlink" title="查询索引状态不可用"></a>查询索引状态不可用</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> T.INDEX_NAME, T.TABLE_NAME, T.STATUS</span><br><span class="line">  <span class="keyword">FROM</span> USER_INDEXES T</span><br><span class="line"> <span class="keyword">WHERE</span> T.TABLE_NAME <span class="keyword">IN</span> (<span class="keyword">SELECT</span> T.TABLE_NAME <span class="keyword">FROM</span> USER_TABLES T);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 表空间操作</title>
    <url>/posts/2fa1c46f.html</url>
    <content><![CDATA[<h1 id="空间回收"><a href="#空间回收" class="headerlink" title="空间回收"></a>空间回收</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">purge recyclebin;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="使用delete删除数据回收空间方法"><a href="#使用delete删除数据回收空间方法" class="headerlink" title="使用delete删除数据回收空间方法"></a>使用delete删除数据回收空间方法</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 开启行迁移功能</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> T_FTP_ARREARS_RESULT <span class="keyword">ENABLE</span> <span class="keyword">ROW</span> <span class="keyword">MOVEMENT</span>;</span><br><span class="line"><span class="comment">-- 收缩表并降低hwm，并且回收相应的索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> T_FTP_ARREARS_RESULT <span class="keyword">SHRINK</span> <span class="keyword">SPACE</span> <span class="keyword">CASCADE</span>;</span><br></pre></td></tr></table></figure>
<h1 id="修改表空间"><a href="#修改表空间" class="headerlink" title="修改表空间"></a>修改表空间</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 修改表空间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'ALTER TABLE WWTEST.'</span> || T.TABLE_NAME || <span class="string">' MOVE TABLESPACE USERS;'</span></span><br><span class="line">  <span class="keyword">FROM</span> ALL_TABLES T</span><br><span class="line"> <span class="keyword">WHERE</span> T.OWNER = <span class="string">'WX_KBT_TEST'</span>;</span><br><span class="line"><span class="comment">---- 如果有分区，使用这条语句</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'alter table '</span> || TABLE_NAME || <span class="string">' move partition '</span> || PARTITION_NAME ||</span><br><span class="line">       <span class="string">' tablespace USERS;'</span></span><br><span class="line">  <span class="keyword">FROM</span> USER_TAB_PARTITIONS</span><br><span class="line"> <span class="keyword">WHERE</span> TABLE_NAME <span class="keyword">IN</span> (<span class="string">'IM_WX_QX_TEMPLATE_RESULT'</span>, <span class="string">'IM_WX_QX_TEMPLATE'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改索引的表空间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'alter index '</span> || INDEX_NAME || <span class="string">' rebuild tablespace USERS;'</span></span><br><span class="line">  <span class="keyword">FROM</span> ALL_INDEXES I</span><br><span class="line"> <span class="keyword">WHERE</span> I.OWNER = <span class="string">'WX_KBT_TEST'</span></span><br><span class="line">   <span class="keyword">AND</span> I.PARTITIONED = <span class="string">'YES'</span>;</span><br><span class="line"><span class="comment">---- 如果有分区，使用这条语句</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'alter index '</span> || P.INDEX_NAME || <span class="string">' rebuild PARTITION '</span> ||</span><br><span class="line">       P.PARTITION_NAME || <span class="string">' tablespace USERS;'</span></span><br><span class="line">  <span class="keyword">FROM</span> USER_IND_PARTITIONS P</span><br><span class="line"> <span class="keyword">WHERE</span> P.INDEX_NAME <span class="keyword">IN</span> (<span class="string">'I_IM_WX_LOG_PROCESSTYPE'</span>, <span class="string">'I_IM_WX_LOG_USERNO'</span>);</span><br></pre></td></tr></table></figure>
<h1 id="大小扩展"><a href="#大小扩展" class="headerlink" title="大小扩展"></a>大小扩展</h1><h2 id="数据文件大小"><a href="#数据文件大小" class="headerlink" title="数据文件大小"></a>数据文件大小</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.TABLESPACE_NAME,</span><br><span class="line">       <span class="keyword">ROUND</span>(A.BYTES / <span class="number">1024</span> / <span class="number">1024</span> / <span class="number">1024</span>, <span class="number">2</span>) <span class="string">"sum GB"</span>,</span><br><span class="line">       <span class="keyword">ROUND</span>(A.BYTES / <span class="number">1024</span> / <span class="number">1024</span>, <span class="number">2</span>) <span class="string">"sum MB"</span>,</span><br><span class="line">       <span class="keyword">ROUND</span>((A.BYTES - B.BYTES) / <span class="number">1024</span> / <span class="number">1024</span> / <span class="number">1024</span>, <span class="number">2</span>) <span class="string">"used GB"</span>,</span><br><span class="line">       <span class="keyword">ROUND</span>((A.BYTES - B.BYTES) / <span class="number">1024</span> / <span class="number">1024</span>, <span class="number">2</span>) <span class="string">"used MB"</span>,</span><br><span class="line">       <span class="keyword">ROUND</span>(B.BYTES / <span class="number">1024</span> / <span class="number">1024</span>, <span class="number">2</span>) <span class="string">"free MB"</span>,</span><br><span class="line">       <span class="keyword">ROUND</span>(((A.BYTES - B.BYTES) / A.BYTES) * <span class="number">100</span>, <span class="number">2</span>) <span class="string">"used%"</span></span><br><span class="line">  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> TABLESPACE_NAME, <span class="keyword">SUM</span>(<span class="keyword">BYTES</span>) <span class="keyword">BYTES</span></span><br><span class="line">          <span class="keyword">FROM</span> DBA_DATA_FILES</span><br><span class="line">         <span class="keyword">GROUP</span> <span class="keyword">BY</span> TABLESPACE_NAME) A,</span><br><span class="line">       (<span class="keyword">SELECT</span> TABLESPACE_NAME, <span class="keyword">SUM</span>(<span class="keyword">BYTES</span>) <span class="keyword">BYTES</span>, <span class="keyword">MAX</span>(<span class="keyword">BYTES</span>) LARGEST</span><br><span class="line">          <span class="keyword">FROM</span> DBA_FREE_SPACE</span><br><span class="line">         <span class="keyword">GROUP</span> <span class="keyword">BY</span> TABLESPACE_NAME) B</span><br><span class="line"> <span class="keyword">WHERE</span> A.TABLESPACE_NAME = B.TABLESPACE_NAME</span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> ((A.BYTES - B.BYTES) / A.BYTES) <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> T.TABLESPACE_NAME,</span><br><span class="line">       T.FILE_NAME,</span><br><span class="line">       T.BYTES / <span class="number">1024</span> / <span class="number">1024</span> || <span class="string">'M'</span> <span class="keyword">AS</span> TOTAL,</span><br><span class="line">       T.AUTOEXTENSIBLE,</span><br><span class="line">       T.MAXBYTES / <span class="number">1024</span> / <span class="number">1024</span> || <span class="string">'M'</span> <span class="keyword">AS</span> <span class="keyword">MAXSIZE</span></span><br><span class="line">  <span class="keyword">FROM</span> DBA_DATA_FILES T</span><br><span class="line"> <span class="keyword">WHERE</span> T.TABLESPACE_NAME = <span class="string">'USERS'</span>;</span><br></pre></td></tr></table></figure>
<h2 id="表空间追加文件（大小）"><a href="#表空间追加文件（大小）" class="headerlink" title="表空间追加文件（大小）"></a>表空间追加文件（大小）</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 固定大小（会马上分配 30GB 硬盘空间）</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> <span class="keyword">users</span> <span class="keyword">add</span> <span class="keyword">datafile</span> <span class="string">'/data/app/oracle/oradata/orcl/users12.dbf'</span> <span class="keyword">size</span> <span class="number">30</span>G;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自动扩展大小（初始大小 500MB，最大 30GB），推荐这种配置方式</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> <span class="keyword">users</span>  <span class="keyword">add</span> <span class="keyword">datafile</span> <span class="string">'/data/app/oracle/oradata/orcl/im_data07.dbf'</span> <span class="keyword">size</span> <span class="number">500</span>M <span class="keyword">autoextend</span> <span class="keyword">on</span> <span class="keyword">next</span> <span class="number">5</span>M <span class="keyword">maxsize</span> <span class="number">30</span>G;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> T.bytes/<span class="number">1024</span>/<span class="number">1024</span>,T.* <span class="keyword">FROM</span> Dba_Segments t  <span class="keyword">WHERE</span> t.tablespace_name=<span class="string">'users'</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> T.bytes <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>
<h1 id="重设大小"><a href="#重设大小" class="headerlink" title="重设大小"></a>重设大小</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">'alter database datafile '</span> || FILE_NAME || <span class="string">' resize 500M;'</span></span><br><span class="line">  <span class="keyword">FROM</span> DBA_DATA_FILES F</span><br><span class="line"> <span class="keyword">WHERE</span> F.TABLESPACE_NAME = <span class="string">'USERS'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'ALTER database datafile '</span> || FILE_NAME || <span class="string">' autoextend on next 10M maxsize 30G;'</span></span><br><span class="line">  <span class="keyword">FROM</span> DBA_DATA_FILES F</span><br><span class="line"> <span class="keyword">WHERE</span> F.TABLESPACE_NAME = <span class="string">'USERS'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">database</span> <span class="keyword">datafile</span> <span class="string">'/data/app/oracle/oradata/orcl/users55.dbf'</span> <span class="keyword">resize</span> <span class="number">500</span>M;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">database</span> <span class="keyword">datafile</span> <span class="string">'/data/app/oracle/oradata/orcl/users55.dbf'</span> <span class="keyword">autoextend</span> <span class="keyword">on</span> <span class="keyword">next</span> <span class="number">10</span>M <span class="keyword">maxsize</span> <span class="number">30</span>G;</span><br></pre></td></tr></table></figure>
<h1 id="删除表空间"><a href="#删除表空间" class="headerlink" title="删除表空间"></a>删除表空间</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 删除空的表空间，不包含物理文件</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name;</span><br><span class="line"><span class="comment">-- 删除非空表空间，不包含物理文件</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">including</span> <span class="keyword">contents</span>;</span><br><span class="line"><span class="comment">-- 删除空表空间，包含物理文件</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">including</span> <span class="keyword">datafiles</span>;</span><br><span class="line"><span class="comment">-- 删除非空表空间，包含物理文件</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">including</span> <span class="keyword">contents</span> <span class="keyword">and</span> <span class="keyword">datafiles</span>;</span><br><span class="line"><span class="comment">-- 如果其他表空间中的表有外键等约束关联到了本表空间中的表的字段，就要加上CASCADE CONSTRAINTS</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">including</span> <span class="keyword">contents</span> <span class="keyword">and</span> <span class="keyword">datafiles</span> <span class="keyword">CASCADE</span> <span class="keyword">CONSTRAINTS</span>;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> &lt;tablespace_name&gt; <span class="keyword">including</span> <span class="keyword">contents</span> <span class="keyword">and</span> <span class="keyword">datafiles</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 全局异常处理</title>
    <url>/posts/97568726.html</url>
    <content><![CDATA[<h1 id="ControllerAdvice-ExceptionHandler"><a href="#ControllerAdvice-ExceptionHandler" class="headerlink" title="ControllerAdvice + ExceptionHandler"></a>ControllerAdvice + ExceptionHandler</h1><blockquote>
<p>BaseExceptionHandler.java</p>
</blockquote>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="meta">@Order</span>(value = Ordered.HIGHEST_PRECEDENCE)</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用 <span class="doctag">@RequestParam</span> 注解时，如果注解的参数缺失，则会抛出此异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = MissingServletRequestParameterException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">missingServletRequestParameterException</span>(<span class="title">MissingServletRequestParameterException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        log.error(<span class="string">"缺少请求参数: &#123;&#125;"</span>, e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> Rs.error(<span class="string">"缺少请求参数"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用 <span class="doctag">@RequestBody</span> 注解时，如果注解的参数为空，则会抛出此异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(HttpMessageNotReadableException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">httpMessageNotReadableException</span>() </span>&#123;</span><br><span class="line">        <span class="comment">// Required request body is missing</span></span><br><span class="line">        <span class="keyword">return</span> Rs.error(<span class="string">"缺少 request body 参数"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 统一处理请求参数校验(实体对象传参)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e BindException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> FebsResponse</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(BindException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">bindException</span>(<span class="title">BindException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        StringBuilder message = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        List&lt;FieldError&gt; fieldErrors = e.getBindingResult().getFieldErrors();</span><br><span class="line">        <span class="keyword">for</span> (FieldError error : fieldErrors) &#123;</span><br><span class="line">            message.append(error.getField()).append(error.getDefaultMessage()).append(<span class="string">","</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        message = <span class="keyword">new</span> StringBuilder(message.substring(<span class="number">0</span>, message.length() - <span class="number">1</span>));</span><br><span class="line">        log.error(message.toString());</span><br><span class="line">        <span class="keyword">return</span> Rs.error(message.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * spring + hibernate-validator 验证异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(MethodArgumentNotValidException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">methodArgumentNotValidException</span>(<span class="title">MethodArgumentNotValidException</span> <span class="title">ex</span>) </span>&#123;</span><br><span class="line">        BindingResult result = ex.getBindingResult();</span><br><span class="line">        ObjectError error = result.getAllErrors().get(<span class="number">0</span>);</span><br><span class="line">        String msg = error.getDefaultMessage();</span><br><span class="line">        <span class="keyword">return</span> Rs.error(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * spring + hibernate-validator 验证异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = ConstraintViolationException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">constraintViolationException</span>(<span class="title">ConstraintViolationException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        StringBuilder message = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        Set&lt;ConstraintViolation&lt;?&gt;&gt; violations = e.getConstraintViolations();</span><br><span class="line">        <span class="keyword">for</span> (ConstraintViolation&lt;?&gt; violation : violations) &#123;</span><br><span class="line">            Path path = violation.getPropertyPath();</span><br><span class="line">            String[] pathArr = StringUtils.splitByWholeSeparatorPreserveAllTokens(path.toString(), <span class="string">"."</span>);</span><br><span class="line">            message.append(pathArr[<span class="number">1</span>]).append(violation.getMessage()).append(<span class="string">","</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        message = <span class="keyword">new</span> StringBuilder(message.substring(<span class="number">0</span>, message.length() - <span class="number">1</span>));</span><br><span class="line">        log.error(message.toString());</span><br><span class="line">        <span class="keyword">return</span> Rs.error(message.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = AccessDeniedException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">accessDeniedException</span>() </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Rs.error(<span class="string">"没有权限访问该资源"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = HttpMediaTypeNotSupportedException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">httpMediaTypeNotSupportedException</span>(<span class="title">HttpMediaTypeNotSupportedException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        String message = <span class="string">"该方法不支持"</span> + StringUtils.substringBetween(e.getMessage(), <span class="string">"'"</span>, <span class="string">"'"</span>) + <span class="string">"媒体类型"</span>;</span><br><span class="line">        log.error(message);</span><br><span class="line">        <span class="keyword">return</span> Rs.error(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = HttpRequestMethodNotSupportedException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseStatus</span>(<span class="title">HttpStatus</span>.<span class="title">OK</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Rs</span>&lt;<span class="title">String</span>&gt; <span class="title">httpRequestMethodNotSupportedException</span>(<span class="title">HttpRequestMethodNotSupportedException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        String message = <span class="string">"该方法不支持"</span> + StringUtils.substringBetween(e.getMessage(), <span class="string">"'"</span>, <span class="string">"'"</span>) + <span class="string">"请求方法"</span>;</span><br><span class="line">        log.error(<span class="string">"msg: &#123;&#125;"</span>, message);</span><br><span class="line">        <span class="keyword">return</span> Rs.error(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里不能最好不要处理 Exception 异常，否则可能会导致页面请求返回错误页面不正确问题</span></span><br><span class="line">    <span class="comment">// @ExceptionHandler(value = Exception.class)</span></span><br><span class="line">    <span class="comment">// @ResponseStatus(HttpStatus.OK)</span></span><br><span class="line">    <span class="comment">// public Rs&lt;String&gt; exception(Exception e) &#123;</span></span><br><span class="line">    <span class="comment">//     String message = e.getMessage();</span></span><br><span class="line">    <span class="comment">//     log.error("msg: &#123;&#125;", message, e);</span></span><br><span class="line">    <span class="comment">//     return Rs.error(message);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="继承-BasicErrorController"><a href="#继承-BasicErrorController" class="headerlink" title="继承 BasicErrorController"></a>继承 BasicErrorController</h1><blockquote>
<p>GlobalErrorController.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ServerProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.error.ErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.annotations.ApiIgnore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@ApiIgnore</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalErrorController</span> <span class="keyword">extends</span> <span class="title">BasicErrorController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalErrorController</span><span class="params">(ErrorAttributes errorAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 ServerProperties serverProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 List&lt;ErrorViewResolver&gt; errorViewResolvers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(errorAttributes, serverProperties.getError(), errorViewResolvers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局异常处理</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     原始异常信息格式</span></span><br><span class="line"><span class="comment">     *     &#123;</span></span><br><span class="line"><span class="comment">     *         "timestamp": 1507803567698,</span></span><br><span class="line"><span class="comment">     *         "status": 404,</span></span><br><span class="line"><span class="comment">     *         "error": "Not Found",</span></span><br><span class="line"><span class="comment">     *         "message": "No message available",</span></span><br><span class="line"><span class="comment">     *         "path": "/v1/api/userinfo"</span></span><br><span class="line"><span class="comment">     *     &#125;</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request 请求对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@RequestMapping</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt; error(HttpServletRequest request) &#123;</span><br><span class="line">        <span class="comment">// 构建一个请求Id</span></span><br><span class="line">        String reqId = String.valueOf(System.currentTimeMillis());</span><br><span class="line">        <span class="comment">// &#123;timestamp=2021-07-20T08:49:22.134+0800, status=404, error=Not Found, path=/app/listxx&#125;</span></span><br><span class="line">        <span class="comment">// &#123;timestamp=2021-07-20T08:49:44.259+0800, status=500, error=Internal Server Error, path=/app/list&#125;</span></span><br><span class="line">        Map&lt;String, Object&gt; body = <span class="keyword">this</span>.getErrorAttributes(request, <span class="keyword">this</span>.getErrorAttributeOptions(request, MediaType.ALL));</span><br><span class="line">        log.error(<span class="string">"reqId: &#123;&#125;, body: &#123;&#125;"</span>, reqId, body);</span><br><span class="line">        <span class="comment">// HttpStatus status = this.getStatus(request);</span></span><br><span class="line">        Object status = body.get(<span class="string">"status"</span>) != <span class="keyword">null</span> ? body.get(<span class="string">"status"</span>) : -<span class="number">99</span>;</span><br><span class="line">        String error = (String) body.get(<span class="string">"error"</span>);</span><br><span class="line">        String path = (String) body.get(<span class="string">"path"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取真实的异常信息</span></span><br><span class="line">        Object attribute = request.getAttribute(<span class="string">"javax.servlet.error.exception"</span>);</span><br><span class="line">        <span class="keyword">if</span> (attribute <span class="keyword">instanceof</span> Throwable) &#123;</span><br><span class="line">            Throwable throwable = (Throwable) attribute;</span><br><span class="line">            String reason = throwable.getMessage();</span><br><span class="line">            Throwable cause = getCause(throwable);</span><br><span class="line">            String message = cause.getMessage();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(message)) &#123;</span><br><span class="line">                error = message;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> DataAccessException) &#123;</span><br><span class="line">                error = <span class="string">"["</span> + reqId + <span class="string">"] 执行 sql 语句报错"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> java.sql.SQLSyntaxErrorException) &#123;</span><br><span class="line">                error = <span class="string">"["</span> + reqId + <span class="string">"] "</span> + error;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                error = <span class="string">"["</span> + reqId + <span class="string">"] "</span> + error;</span><br><span class="line">            &#125;</span><br><span class="line">            log.error(<span class="string">"reqId: &#123;&#125;, reason: &#123;&#125;, msg: &#123;&#125;"</span>, reqId, reason, error, throwable);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">        map.put(<span class="string">"code"</span>, status);</span><br><span class="line">        map.put(<span class="string">"msg"</span>, String.format(<span class="string">"error: %s, path: %s, reqId: %s"</span>, error, path, reqId));</span><br><span class="line">        map.put(<span class="string">"success"</span>, <span class="string">"0"</span>.equals(status));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(map, HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(produces = MediaType.TEXT_HTML_VALUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">errorHtml</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        HttpStatus status = getStatus(request);</span><br><span class="line">        Map&lt;String, Object&gt; model = Collections</span><br><span class="line">                .unmodifiableMap(getErrorAttributes(request, getErrorAttributeOptions(request, MediaType.TEXT_HTML)));</span><br><span class="line">        response.setStatus(status.value());</span><br><span class="line">        ModelAndView modelAndView = resolveErrorView(request, response, status, model);</span><br><span class="line">        modelAndView = (modelAndView != <span class="keyword">null</span>) ? modelAndView : <span class="keyword">new</span> ModelAndView(<span class="string">"error"</span>, model);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建一个请求Id</span></span><br><span class="line">        String reqId = String.valueOf(System.currentTimeMillis());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取真实的异常信息</span></span><br><span class="line">        Object attribute = request.getAttribute(<span class="string">"javax.servlet.error.exception"</span>);</span><br><span class="line">        <span class="keyword">if</span> (attribute <span class="keyword">instanceof</span> Throwable) &#123;</span><br><span class="line">            Throwable throwable = (Throwable) attribute;</span><br><span class="line">            String reason = throwable.getMessage();</span><br><span class="line">            Throwable cause = getCause(throwable);</span><br><span class="line">            String message = cause.getMessage();</span><br><span class="line">            <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> DataAccessException) &#123;</span><br><span class="line">                message = <span class="string">"["</span> + reqId + <span class="string">"] 执行 sql 语句报错"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> java.sql.SQLSyntaxErrorException) &#123;</span><br><span class="line">                message = <span class="string">"["</span> + reqId + <span class="string">"] "</span> + message;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                message = <span class="string">"["</span> + reqId + <span class="string">"] "</span> + message;</span><br><span class="line">            &#125;</span><br><span class="line">            log.error(<span class="string">"reqId: &#123;&#125;, reason: &#123;&#125;"</span>, reqId, reason, throwable);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(message)) &#123;</span><br><span class="line">                modelAndView.addObject(<span class="string">"msg"</span>, message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> modelAndView.addObject(<span class="string">"reqId"</span>, reqId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Throwable <span class="title">getCause</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        Throwable cause1 = cause.getCause();</span><br><span class="line">        <span class="keyword">if</span> (cause1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> getCause(cause1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cause;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>错误页面</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"card-title"</span>&gt;</span>出错啦<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">#if</span> <span class="attr">msg</span>??&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span> <span class="attr">style</span>=<span class="string">"color: #9c9c9c"</span>&gt;</span>$&#123;msg&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">#else</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span> <span class="attr">style</span>=<span class="string">"color: #9c9c9c"</span>&gt;</span>出错了，请联系管理员或者重试......<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">#if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">#if</span> <span class="attr">reqId</span>??&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span> <span class="attr">style</span>=<span class="string">"color: #9c9c9c"</span>&gt;</span>请求 Id：$&#123;reqId&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">#if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 实现表单锁</title>
    <url>/posts/9c62485b.html</url>
    <content><![CDATA[<p>通过注解和 SpEL 表达式实现表单动态锁业务</p>
<a id="more"></a>
<h1 id="FormLock-注解"><a href="#FormLock-注解" class="headerlink" title="FormLock 注解"></a>FormLock 注解</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Inherited;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防止表单重复提交锁实现注解</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> FormLock &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Spring Expression Language (SpEL) expression for computing the key dynamically.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 表单锁 key 的值，spring el 表达式（Spring Expression Language (SpEL) expression），动态获取表单锁的 key 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">key</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="FormLockAspect-切面"><a href="#FormLockAspect-切面" class="headerlink" title="FormLockAspect 切面"></a>FormLockAspect 切面</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RLock;</span><br><span class="line"><span class="keyword">import</span> org.redisson.api.RedissonClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.LocalVariableTableParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.ExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.standard.SpelExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.support.StandardEvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yangli</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormLockAspect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOCK_KEY = <span class="string">"redisson::lock::%s::%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LocalVariableTableParameterNameDiscoverer discoverer = <span class="keyword">new</span> LocalVariableTableParameterNameDiscoverer();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"@annotation(com.grgbanking.prms.common.lock.FormLock)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"pointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint point)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Method method = resolveMethod(point);</span><br><span class="line">        FormLock formLock = AnnotationUtils.findAnnotation(method, FormLock<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (formLock == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        String el = formLock.key();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(el)) &#123;</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!el.startsWith(<span class="string">"#"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        Object[] args = point.getArgs();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Expose indexed variables as well as parameter names (if discoverable)</span></span><br><span class="line">        String[] paramNames = <span class="keyword">this</span>.discoverer.getParameterNames(method);</span><br><span class="line">        <span class="keyword">int</span> paramCount = (paramNames != <span class="keyword">null</span> ? paramNames.length : method.getParameterCount());</span><br><span class="line">        <span class="keyword">int</span> argsCount = args.length;</span><br><span class="line"></span><br><span class="line">        EvaluationContext eval = <span class="keyword">new</span> StandardEvaluationContext();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; paramCount; i++) &#123;</span><br><span class="line">            Object value = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (argsCount &gt; paramCount &amp;&amp; i == paramCount - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// Expose remaining arguments as vararg array for last parameter</span></span><br><span class="line">                value = Arrays.copyOfRange(args, i, argsCount);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argsCount &gt; i) &#123;</span><br><span class="line">                <span class="comment">// Actual argument found - otherwise left as null</span></span><br><span class="line">                value = args[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * see &#123;<span class="doctag">@link</span> MethodBasedEvaluationContext#lazyLoadArguments()&#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            eval.setVariable(<span class="string">"a"</span> + i, value);</span><br><span class="line">            eval.setVariable(<span class="string">"p"</span> + i, value);</span><br><span class="line">            <span class="keyword">if</span> (paramNames != <span class="keyword">null</span>) &#123;</span><br><span class="line">                eval.setVariable(paramNames[i], value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Expression expression = parser.parseExpression(el);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 这里可能会抛出异常，不用处理，这样有利于程序发现&#123;<span class="doctag">@link</span> FormLock#key()&#125;配置错误问题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String lockKey;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lockKey = expression.getValue(eval, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (EvaluationException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> EvaluationException(String.format(<span class="string">"%s 表达式错误"</span>, el));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(lockKey)) &#123;</span><br><span class="line">            log.warn(<span class="string">"&#123;&#125; 表达式的值为空，直接执行逻辑"</span>, el);</span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">        String name = point.getTarget().getClass().getSimpleName() + <span class="string">"#"</span> + method.getName();</span><br><span class="line">        RLock lock = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lock = redissonClient.getLock(String.format(LOCK_KEY, name, lockKey));</span><br><span class="line">            <span class="comment">// 如果不主动释放锁，300 秒后自动释放</span></span><br><span class="line">            <span class="keyword">boolean</span> success = lock.tryLock(<span class="number">100L</span>, <span class="number">300000L</span>, TimeUnit.MILLISECONDS);</span><br><span class="line">            <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">                <span class="comment">// todo 改成自己的返回格式：json、页面等</span></span><br><span class="line">                <span class="keyword">return</span> Rs.error(<span class="string">"表单已提交，不可重复提交"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// log.info("获得表单执行锁 ---&gt; 结束，获取数量：&#123;&#125;", notifications.size());</span></span><br><span class="line">            <span class="keyword">return</span> point.proceed();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (lock != <span class="keyword">null</span> &amp;&amp; lock.isLocked() &amp;&amp; lock.isHeldByCurrentThread()) &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Method <span class="title">resolveMethod</span><span class="params">(ProceedingJoinPoint point)</span> </span>&#123;</span><br><span class="line">        MethodSignature signature = (MethodSignature) point.getSignature();</span><br><span class="line">        Class&lt;?&gt; targetClass = point.getTarget().getClass();</span><br><span class="line"></span><br><span class="line">        Method method = getDeclaredMethod(targetClass, signature.getName(),</span><br><span class="line">            signature.getMethod().getParameterTypes());</span><br><span class="line">        <span class="keyword">if</span> (method == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"无法解析目标方法: "</span> + signature.getMethod().getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> method;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Method <span class="title">getDeclaredMethod</span><span class="params">(Class&lt;?&gt; clazz, String name, Class&lt;?&gt;... parameterTypes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> clazz.getDeclaredMethod(name, parameterTypes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">            Class&lt;?&gt; superClass = clazz.getSuperclass();</span><br><span class="line">            <span class="keyword">if</span> (superClass != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> getDeclaredMethod(superClass, name, parameterTypes);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FormLock</span>(key = <span class="string">"#command.reportNo"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/list"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="keyword">public</span> Rs&lt;AssetsAppraisalsPagingVo&lt;AssetsAppraisal&gt;&gt; list(AssetsAppraisalQueryCommand command) &#123;</span><br><span class="line">  log.info(<span class="string">"command: &#123;&#125;"</span>, command);</span><br><span class="line">  <span class="keyword">return</span> assetsAppraisalService.selectPage(command);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>spring-boot</tag>
        <tag>分布式锁</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Data JPA 使用</title>
    <url>/posts/6cc2492a.html</url>
    <content><![CDATA[<h1 id="Spring-Data-JPA-常用注解"><a href="#Spring-Data-JPA-常用注解" class="headerlink" title="Spring Data JPA 常用注解"></a>Spring Data JPA 常用注解</h1><ol>
<li><p>@Entity</p>
<p>标识实体类是<code>JPA</code>实体，告诉<code>JPA</code>在程序运行时生成实体类对应表</p>
</li>
<li><p>@Table</p>
<p>设置实体类在数据库所对应的表名</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"t_user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">4579521515899728869L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
   <a id="more"></a>
<ol start="3">
<li><p>@Id</p>
<p>标识类里所在变量为主键</p>
</li>
<li><p>@GeneratedValue</p>
<p>设置主键生成策略，此方式依赖于具体的数据库</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用序列</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@SequenceGenerator</span>(name = <span class="string">"sq_name"</span>, sequenceName = <span class="string">"SQ_USER"</span>, allocationSize = <span class="number">1</span>)</span><br><span class="line"><span class="meta">@GeneratedValue</span>(generator = <span class="string">"sq_name"</span>, strategy = GenerationType.SEQUENCE)</span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用分布式 Id 生成</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 唯一主键：GenericGenerator 注解的 strategy 属性，使用非默认策略的时候，需要使用全类名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GenericGenerator</span>(</span><br><span class="line">  name = <span class="string">"SnowflakeId_BaseEntityId"</span>,</span><br><span class="line">  <span class="comment">// 这里需要使用全限类名</span></span><br><span class="line">  strategy = 	<span class="string">"top.ylonline.hibernate.id.SnowflakeIdentifierGenerator"</span></span><br><span class="line">)</span><br><span class="line"><span class="meta">@GeneratedValue</span>(generator = <span class="string">"SnowflakeId_BaseEntityId"</span>)</span><br><span class="line"><span class="meta">@Column</span>(name = <span class="string">"id"</span>, updatable = <span class="keyword">false</span>, nullable = <span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol start="5">
<li><p>@Column表示属性所对应字段名进行个性化设置</p>
</li>
<li><p>@Transient表示属性并非数据库表字段的映射，<code>ORM</code>框架将忽略该属性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transient</span></span><br><span class="line"><span class="keyword">private</span> String zq;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol start="7">
<li><p>@Temporal</p>
<p>当我们使用到<code>java.util</code>包中的时间日期类型时，需要此注释来说明转化成<code>java.util</code>包中的类型。</p>
<p>注入数据库的类型有三种：</p>
<p>TemporalType.DATE（yyyy-MM-dd）</p>
<p>TemporalType.TIME（HH:mm:ss）</p>
<p>TemporalType.TIMESTAMP（yyyy-MM-dd HH:mm:ss.SSS）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Temporal</span>(TemporalType.TIMESTAMP)</span><br><span class="line"><span class="keyword">private</span> Date createdAt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol start="8">
<li><p>@Enumerated</p>
<p>使用此注解映射枚举字段，以<code>String</code>类型存入数据库</p>
<p>注入数据库的类型有两种：</p>
<p>EnumType.ORDINAL（Interger）</p>
<p>EnumType.STRING（String）</p>
</li>
<li><p>@Embedded、@Embeddable</p>
<p>当一个实体类要在多个不同的实体类中进行使用，而其不需要生成数据库表</p>
<p>@Embeddable：注解在类上，表示此类是可以被其他类嵌套</p>
<p>@Embedded：注解在属性上，表示嵌套被@Embeddable注解的同类型类</p>
</li>
<li><p>@CreatedDate、@CreatedBy、@LastModifiedDate、@LastModifiedBy</p>
<p>分别表示创建时间（insert）、创建用户（insert）、最后修改时间（update）、最后修改用户（update）</p>
<p>用法：</p>
<p>1、@EntityListeners(AuditingEntityListener.class)：申明实体类并加注解</p>
<p>2 、实现AuditorAware类</p>
<p>3、springboot 启动类加上注解@EnableJpaAuditing</p>
<p>4、在实体类中属性中加上面四种注解</p>
</li>
<li><p>@MappedSuperclass</p>
<p>实现将实体类的多个属性分别封装到不同的非实体类中</p>
<p>注解的类不是完整的实体类，不会映射到数据库表，但其属性将映射到子类的数据库字段</p>
<p>注解的类不能再标注<code>@Entity</code>或<code>@Table</code>注解，也无需实现序列化接口</p>
</li>
</ol>
<h1 id="Page"><a href="#Page" class="headerlink" title="Page"></a>Page<t></t></h1><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>getTotalElements</td>
<td>总记录数</td>
<td></td>
</tr>
<tr>
<td>getTotalPages</td>
<td>总页数</td>
<td></td>
</tr>
<tr>
<td>getContent</td>
<td>查询记录列表</td>
<td></td>
</tr>
<tr>
<td>getNumber</td>
<td>当前页数，从0开始</td>
<td></td>
</tr>
<tr>
<td>getNumberOfElements</td>
<td>当前页码中的记录数</td>
<td></td>
</tr>
<tr>
<td>getSize</td>
<td>每页记录数</td>
</tr>
</tbody>
</table>
<h1 id="EntityListeners注解"><a href="#EntityListeners注解" class="headerlink" title="EntityListeners注解"></a>EntityListeners注解</h1><blockquote>
<p>使用在实体类，或者mapped superclass上</p>
</blockquote>
<p>主要是配置<code>PrePersist</code>、<code>PreRemove</code>、<code>PostPersist</code>、<code>PostRemove</code>、<code>PreUpdate</code>、<code>PostUpdate</code>、<code>PostLoad</code>等监听回调</p>
<p>配置JPA审计使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">注意：如果需要自动填充createdBy、createdAt、modifiedBy、modifiedAt</span><br><span class="line">1、需要开启JPA审计（启用@EnableJpaAuditing）</span><br><span class="line">2、新建一个类实现AuditorAware接口，返回createdBy、modifiedBy的值，然后通过@Configuration注册成bean</span><br><span class="line">3、在实体类，或者mapped superclass上@EntityListeners(org.springframework.data.jpa.domain.support.AuditingEntityListener.class)</span><br></pre></td></tr></table></figure>
<h1 id="Modifying注解"><a href="#Modifying注解" class="headerlink" title="Modifying注解"></a>Modifying注解</h1><p>（1）可以通过自定义的 JPQL 完成 UPDATE 和 DELETE 操作。 注意： JPQL 不支持使用 INSERT</p>
<p>（2）在 @Query 注解中编写 JPQL 语句， 但必须使用 @Modifying 进行修饰. 以通知 Spring Data， 这是一个 UPDATE 或 DELETE 操作</p>
<p>（3）UPDATE 或 DELETE 操作需要使用事务，此时需要定义 Service 层，在 Service 层的方法上添加事务操作</p>
<p>（4）默认情况下， Spring Data 的每个方法上有事务， 但都是一个只读事务。 他们不能完成修改操作</p>
<h1 id="批量插入、更新配置"><a href="#批量插入、更新配置" class="headerlink" title="批量插入、更新配置"></a>批量插入、更新配置</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="comment"># show-sql: true</span></span><br><span class="line">    <span class="attr">database:</span> <span class="string">ORACLE</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">hibernate:</span></span><br><span class="line">        <span class="comment"># format_sql: false</span></span><br><span class="line">        <span class="attr">dialect:</span> <span class="string">org.hibernate.dialect.Oracle10gDialect</span></span><br><span class="line">        <span class="attr">jdbc:</span></span><br><span class="line">          <span class="attr">batch_size:</span> <span class="number">500</span></span><br><span class="line">          <span class="attr">batch_versioned_data:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">order_inserts:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">order_updates:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考</p>
</blockquote>
<p><a href="https://vladmihalcea.com/how-to-batch-insert-and-update-statements-with-hibernate/" target="_blank" rel="noopener">https://vladmihalcea.com/how-to-batch-insert-and-update-statements-with-hibernate/</a></p>
<p><a href="https://docs.jboss.org/hibernate/orm/4.3/manual/en-US/html/ch03.html#configuration-jdbc-properties" target="_blank" rel="noopener">https://docs.jboss.org/hibernate/orm/4.3/manual/en-US/html/ch03.html#configuration-jdbc-properties</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>jpa</tag>
        <tag>hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-session + redis 保存会话 session</title>
    <url>/posts/74b23c9e.html</url>
    <content><![CDATA[<blockquote>
<p>基于<code>spring-boot</code> + <code>spring-session</code> + <code>redis</code> 实现 <code>session</code> 共享</p>
</blockquote>
<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot-starter-data-redis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-session-data-redis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="spring-boot-1-x"><a href="#spring-boot-1-x" class="headerlink" title="spring-boot 1.x"></a>spring-boot 1.x</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.support.spring.GenericFastJsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.ConfigureRedisAction;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.CookieHttpSessionStrategy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.CookieSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.DefaultCookieSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.HttpSessionStrategy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用 redis 存储 HttpSession</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     spring-boot 两种方式启用 spring-session + redis</span></span><br><span class="line"><span class="comment"> *     1、使用 <span class="doctag">@EnableRedisHttpSession</span> 注解，需要在注解配置 session 失效时间，使用注解 spring.session.timeout 会无效</span></span><br><span class="line"><span class="comment"> *     2、在application.properties 配置 spring.session.store-type: redis</span></span><br><span class="line"><span class="comment"> *     优先级：<span class="doctag">@EnableRedisHttpSession</span> &gt; application.properties</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/11/7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableRedisHttpSession</span>(maxInactiveIntervalInSeconds = <span class="number">86400</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisHttpSessionConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * disable sessions expire event notifications</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConfigureRedisAction <span class="title">configureRedisAction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ConfigureRedisAction.NO_OP;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * spring-session 使用 fastjson 序列化</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;bean name 要配置成 &lt;strong&gt;springSessionDefaultRedisSerializer&lt;/strong&gt;，否则不生效，参考：</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> RedisHttpSessionConfiguration#setDefaultRedisSerializer(org.springframework.data.redis.serializer.RedisSerializer)&#125;&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Qualifier</span>(<span class="string">"springSessionDefaultRedisSerializer"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisSerializer&lt;Object&gt; <span class="title">springSessionDefaultRedisSerializer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> GenericFastJsonRedisSerializer();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cookie serializer</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> SpringHttpSessionConfiguration#setCookieSerializer(org.springframework.session.web.http.CookieSerializer)&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Qualifier</span>(<span class="string">"cookieSerializer"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CookieSerializer <span class="title">cookieSerializer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultCookieSerializer serializer = <span class="keyword">new</span> DefaultCookieSerializer();</span><br><span class="line">        serializer.setCookieName(<span class="string">"x-auth-token"</span>);</span><br><span class="line">        <span class="comment">// serializer.setDomainName("localhost");</span></span><br><span class="line">        <span class="comment">// serializer.setDomainNamePattern("(\\w+)");//("^.+?\\.(\\w+\\.[a-z]+)$");</span></span><br><span class="line">        serializer.setCookiePath(<span class="string">"/"</span>);</span><br><span class="line">        serializer.setUseHttpOnlyCookie(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 由于spring-boot 1.x和2.x这个默认值不一样，所以统一设置成 false</span></span><br><span class="line">        serializer.setUseBase64Encoding(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// 防止 http、https 混用的情况</span></span><br><span class="line">        serializer.setUseSecureCookie(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> serializer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HttpSessionStrategy</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> SpringHttpSessionConfiguration#setHttpSessionStrategy(org.springframework.session.web.http.HttpSessionStrategy)&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Qualifier</span>(<span class="string">"httpSessionStrategy"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpSessionStrategy <span class="title">httpSessionStrategy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CookieHttpSessionStrategy strategy = <span class="keyword">new</span> CookieHttpSessionStrategy();</span><br><span class="line">        strategy.setCookieSerializer(cookieSerializer());</span><br><span class="line">        <span class="keyword">return</span> strategy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// /**</span></span><br><span class="line">    <span class="comment">//  * HttpSessionStrategy</span></span><br><span class="line">    <span class="comment">//  * &lt;p&gt;</span></span><br><span class="line">    <span class="comment">//  * &#123;@link SpringHttpSessionConfiguration#setHttpSessionStrategy(org.springframework.session.web.http</span></span><br><span class="line">    <span class="comment">// .HttpSessionStrategy)&#125;</span></span><br><span class="line">    <span class="comment">//  */</span></span><br><span class="line">    <span class="comment">// @Bean</span></span><br><span class="line">    <span class="comment">// @Qualifier("httpSessionStrategy")</span></span><br><span class="line">    <span class="comment">// public HttpSessionStrategy httpSessionStrategy() &#123;</span></span><br><span class="line">    <span class="comment">//     HeaderHttpSessionStrategy strategy = new HeaderHttpSessionStrategy();</span></span><br><span class="line">    <span class="comment">//     strategy.setHeaderName(UTConst.COOKIE_NAME);</span></span><br><span class="line">    <span class="comment">//     return strategy;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="spring-boot-2-x"><a href="#spring-boot-2-x" class="headerlink" title="spring-boot 2.x"></a>spring-boot 2.x</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.support.spring.GenericFastJsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.ConfigureRedisAction;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.CookieHttpSessionIdResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.CookieSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.DefaultCookieSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.web.http.HttpSessionIdResolver;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 使用 redis 存储 HttpSession</span></span><br><span class="line"><span class="comment">* &lt;pre&gt;</span></span><br><span class="line"><span class="comment">*     spring-boot 两种方式启用 spring-session + redis</span></span><br><span class="line"><span class="comment">*     1、使用 <span class="doctag">@EnableRedisHttpSession</span> 注解，需要在注解配置 session 失效时间，使用注解 spring.session.timeout 会无效</span></span><br><span class="line"><span class="comment">*     2、在application.properties 配置 spring.session.store-type: redis</span></span><br><span class="line"><span class="comment">*     优先级：<span class="doctag">@EnableRedisHttpSession</span> &gt; application.properties</span></span><br><span class="line"><span class="comment">* &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Created by YL on 2018/11/7</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@EnableRedisHttpSession</span>(maxInactiveIntervalInSeconds = <span class="number">86400</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisHttpSessionConfig</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * disable sessions expire event notifications</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ConfigureRedisAction <span class="title">configureRedisAction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> ConfigureRedisAction.NO_OP;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * spring-session 使用 fastjson 序列化</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;bean name 要配置成 &lt;strong&gt;springSessionDefaultRedisSerializer&lt;/strong&gt;，否则不生效，参考：</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@link</span> RedisHttpSessionConfiguration#setDefaultRedisSerializer(RedisSerializer)&#125;&lt;/p&gt;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="meta">@Qualifier</span>(<span class="string">"springSessionDefaultRedisSerializer"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> RedisSerializer&lt;Object&gt; <span class="title">springSessionDefaultRedisSerializer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> GenericFastJsonRedisSerializer();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * cookie serializer</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@link</span> SpringHttpSessionConfiguration#setCookieSerializer(CookieSerializer)&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="meta">@Qualifier</span>(<span class="string">"cookieSerializer"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> CookieSerializer <span class="title">cookieSerializer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       DefaultCookieSerializer serializer = <span class="keyword">new</span> DefaultCookieSerializer();</span><br><span class="line">       serializer.setCookieName(<span class="string">"x-auth-token"</span>);</span><br><span class="line">       <span class="comment">// serializer.setDomainName("localhost");</span></span><br><span class="line">       <span class="comment">// serializer.setDomainNamePattern("(\\w+)");//("^.+?\\.(\\w+\\.[a-z]+)$");</span></span><br><span class="line">       serializer.setCookiePath(<span class="string">"/"</span>);</span><br><span class="line">       serializer.setUseHttpOnlyCookie(<span class="keyword">true</span>);</span><br><span class="line">       <span class="comment">// 由于spring-boot 1.x和2.x这个默认值不一样，所以统一设置成 false</span></span><br><span class="line">       serializer.setUseBase64Encoding(<span class="keyword">false</span>);</span><br><span class="line">       <span class="comment">// 防止 http、https 混用的情况</span></span><br><span class="line">       serializer.setUseSecureCookie(<span class="keyword">false</span>);</span><br><span class="line">       <span class="keyword">return</span> serializer;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * HttpSessionIdResolver</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@link</span> SpringHttpSessionConfiguration#setHttpSessionIdResolver(HttpSessionIdResolver)&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="meta">@Qualifier</span>(<span class="string">"httpSessionIdResolver"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> HttpSessionIdResolver <span class="title">httpSessionIdResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       CookieHttpSessionIdResolver resolver = <span class="keyword">new</span> CookieHttpSessionIdResolver();</span><br><span class="line">       resolver.setCookieSerializer(cookieSerializer());</span><br><span class="line">       <span class="keyword">return</span> resolver;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// /**</span></span><br><span class="line">   <span class="comment">//  * HttpSessionIdResolver</span></span><br><span class="line">   <span class="comment">//  * &lt;p&gt;</span></span><br><span class="line">   <span class="comment">//  * &#123;@link SpringHttpSessionConfiguration#setHttpSessionIdResolver(HttpSessionIdResolver)&#125;</span></span><br><span class="line">   <span class="comment">//  */</span></span><br><span class="line">   <span class="comment">// @Bean</span></span><br><span class="line">   <span class="comment">// @Qualifier("httpSessionIdResolver")</span></span><br><span class="line">   <span class="comment">// public HttpSessionIdResolver httpSessionIdResolver() &#123;</span></span><br><span class="line">   <span class="comment">//     return new HeaderHttpSessionIdResolver("x-gdwxkf-token");</span></span><br><span class="line">   <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="应用容器-session-过期时间"><a href="#应用容器-session-过期时间" class="headerlink" title="应用容器 session 过期时间"></a>应用容器 session 过期时间</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">session:</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">1d</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p><code>server.servlet.session.timeout</code>参数对于<code>SpringBoot</code>内嵌的<code>Tomcat</code>生效。</p>
</li>
<li><p>如果项目部署在外部<code>Tomcat</code>中，该参数对外部<code>Tomcat</code>不生效。</p>
<p>外部<code>Tomcat</code>部署可以这样配置<code>session</code>过期时间</p>
<ul>
<li><p>第一种：在<code>web.xml</code>中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>30<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>第二种：在<code>Tomcat</code>的<code>conf/server.xml</code>中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">"/app"</span> <span class="attr">docBase</span>=<span class="string">"/app"</span> <span class="attr">defaultSessionTimeOut</span>=<span class="string">"86400"</span> <span class="attr">...</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>第三种：在<code>Java</code>程序中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">session.setMaxInactiveInterval(<span class="number">86400</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>spring-boot</tag>
        <tag>spring-session</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot + redis序列化方式</title>
    <url>/posts/84a732bc.html</url>
    <content><![CDATA[<h1 id="Kryo"><a href="#Kryo" class="headerlink" title="Kryo"></a>Kryo</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.SerializationException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.esotericsoftware.kryo.Kryo;</span><br><span class="line"><span class="keyword">import</span> com.esotericsoftware.kryo.io.Input;</span><br><span class="line"><span class="keyword">import</span> com.esotericsoftware.kryo.io.Output;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * kryo 序列化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KryoSerializer</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">RedisSerializer</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">2048</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] EMPTY_BYTE_ARRAY = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;Kryo&gt; KRYOS = ThreadLocal.withInitial(Kryo::<span class="keyword">new</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] serialize(T t) <span class="keyword">throws</span> SerializationException &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == t) &#123;</span><br><span class="line">            <span class="keyword">return</span> EMPTY_BYTE_ARRAY;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// -1 代表无限制，实际中依业务修改</span></span><br><span class="line">        Output output = <span class="keyword">new</span> Output(BUFFER_SIZE, -<span class="number">1</span>);</span><br><span class="line">        Kryo kryo = KRYOS.get();</span><br><span class="line">        kryo.writeClassAndObject(output, t);</span><br><span class="line">        output.flush();</span><br><span class="line">        <span class="keyword">return</span> output.toBytes();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">deserialize</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> SerializationException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == bytes || bytes.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Input input = <span class="keyword">new</span> Input(bytes);</span><br><span class="line">        Kryo kryo = KRYOS.get();</span><br><span class="line">        T t = (T) kryo.readClassAndObject(input);</span><br><span class="line">        input.close();</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="LZ4"><a href="#LZ4" class="headerlink" title="LZ4"></a>LZ4</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.SerializationException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.jpountz.lz4.LZ4BlockInputStream;</span><br><span class="line"><span class="keyword">import</span> net.jpountz.lz4.LZ4BlockOutputStream;</span><br><span class="line"><span class="keyword">import</span> net.jpountz.lz4.LZ4Compressor;</span><br><span class="line"><span class="keyword">import</span> net.jpountz.lz4.LZ4Factory;</span><br><span class="line"><span class="keyword">import</span> net.jpountz.lz4.LZ4FastDecompressor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * LZ4 压缩</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LZ4Serializer</span> <span class="keyword">implements</span> <span class="title">RedisSerializer</span>&lt;<span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">4096</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RedisSerializer&lt;Object&gt; innerSerializer;</span><br><span class="line">    <span class="keyword">private</span> LZ4FastDecompressor decompresser;</span><br><span class="line">    <span class="keyword">private</span> LZ4Compressor compressor;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LZ4Serializer</span><span class="params">(RedisSerializer&lt;Object&gt; innerSerializer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.innerSerializer = innerSerializer;</span><br><span class="line">        LZ4Factory factory = LZ4Factory.fastestInstance();</span><br><span class="line">        <span class="keyword">this</span>.compressor = factory.fastCompressor();</span><br><span class="line">        <span class="keyword">this</span>.decompresser = factory.fastDecompressor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] serialize(Object graph) <span class="keyword">throws</span> SerializationException &#123;</span><br><span class="line">        <span class="keyword">if</span> (graph == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        ByteArrayOutputStream byteOutput = <span class="keyword">null</span>;</span><br><span class="line">        LZ4BlockOutputStream compressedOutput = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = innerSerializer.serialize(graph);</span><br><span class="line">            byteOutput = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            compressedOutput = <span class="keyword">new</span> LZ4BlockOutputStream(byteOutput, BUFFER_SIZE, compressor);</span><br><span class="line">            compressedOutput.write(bytes);</span><br><span class="line">            compressedOutput.finish();</span><br><span class="line">            <span class="keyword">byte</span>[] compressBytes = byteOutput.toByteArray();</span><br><span class="line">            <span class="keyword">return</span> compressBytes;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SerializationException(<span class="string">"LZ4 Serialization Error"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IOUtils.closeQuietly(compressedOutput);</span><br><span class="line">            IOUtils.closeQuietly(byteOutput);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">deserialize</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> SerializationException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bytes == <span class="keyword">null</span> || bytes.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">null</span>;</span><br><span class="line">        LZ4BlockInputStream lzis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            baos = <span class="keyword">new</span> ByteArrayOutputStream(BUFFER_SIZE);</span><br><span class="line">            lzis = <span class="keyword">new</span> LZ4BlockInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes), decompresser);</span><br><span class="line">            <span class="keyword">int</span> count;</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER_SIZE];</span><br><span class="line">            <span class="keyword">while</span> ((count = lzis.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(buffer, <span class="number">0</span>, count);</span><br><span class="line">            &#125;</span><br><span class="line">            Object result = innerSerializer.deserialize(baos.toByteArray());</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SerializationException(<span class="string">"LZ4 deserizelie error"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IOUtils.closeQuietly(lzis);</span><br><span class="line">            IOUtils.closeQuietly(baos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="GZip"><a href="#GZip" class="headerlink" title="GZip"></a>GZip</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GzipSerializer</span> <span class="keyword">implements</span> <span class="title">RedisSerializer</span>&lt;<span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">4096</span>;</span><br><span class="line">    <span class="keyword">private</span> RedisSerializer&lt;Object&gt; innerSerializer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GzipSerializer</span><span class="params">(RedisSerializer&lt;Object&gt; innerSerializer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.innerSerializer = innerSerializer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] serialize(Object graph) <span class="keyword">throws</span> SerializationException &#123;</span><br><span class="line">        <span class="keyword">if</span> (graph == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">null</span>;</span><br><span class="line">        GZIPOutputStream gzip = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 序列化</span></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = innerSerializer.serialize(graph);</span><br><span class="line">            bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            gzip = <span class="keyword">new</span> GZIPOutputStream(bos);</span><br><span class="line">            <span class="comment">// 压缩</span></span><br><span class="line">            gzip.write(bytes);</span><br><span class="line">            gzip.finish();</span><br><span class="line">            <span class="keyword">byte</span>[] result = bos.toByteArray();</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SerializationException(<span class="string">"Gzip Serialization Error"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IOUtils.closeQuietly(bos);</span><br><span class="line">            IOUtils.closeQuietly(gzip);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">deserialize</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> SerializationException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bytes == <span class="keyword">null</span> || bytes.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">null</span>;</span><br><span class="line">        ByteArrayInputStream bis = <span class="keyword">null</span>;</span><br><span class="line">        GZIPInputStream gzip = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            bis = <span class="keyword">new</span> ByteArrayInputStream(bytes);</span><br><span class="line">            gzip = <span class="keyword">new</span> GZIPInputStream(bis);</span><br><span class="line">            <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER_SIZE];</span><br><span class="line">            <span class="keyword">int</span> n;</span><br><span class="line">            <span class="comment">// 解压</span></span><br><span class="line">            <span class="keyword">while</span> ((n = gzip.read(buff, <span class="number">0</span>, BUFFER_SIZE)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                bos.write(buff, <span class="number">0</span>, n);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 反序列化</span></span><br><span class="line">            Object result = innerSerializer.deserialize(bos.toByteArray());</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SerializationException(<span class="string">"Gzip deserizelie error"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            IOUtils.closeQuietly(bos);</span><br><span class="line">            IOUtils.closeQuietly(bis);</span><br><span class="line">            IOUtils.closeQuietly(gzip);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="FST"><a href="#FST" class="headerlink" title="FST"></a>FST</h1><p>略</p>
<h1 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson"></a>fastjson</h1><p>略</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-boot shiro 配置</title>
    <url>/posts/ae8ab207.html</url>
    <content><![CDATA[<h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>使用@Configuration配置shiro无状态登录时出现的问题，在subject.login之后当前线程重新绑定了一个假定subject，isAuthenticated。</p>
<p>这里自定义的访问拦截器的创建需要放在shiroFilter之后，如下：</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Shiro 的 Web 过滤器链</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Bean</span>(<span class="string">"shiroFilter"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ShiroFilterFactoryBean filter = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">    filter.setSecurityManager(securityManager());</span><br><span class="line"> </span><br><span class="line">    Map&lt;String, Filter&gt; filters = <span class="keyword">new</span> LinkedHashMap&lt;String, Filter&gt;();</span><br><span class="line">    <span class="comment">// 无状态授权器</span></span><br><span class="line">    filters.put(<span class="string">"statelessAuthc"</span>, statelessAuthcFilter());</span><br><span class="line">    filter.setFilters(filters);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置shiro拦截器链</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// filterChainDefinitionMap 必须是 LinkedHashMap 因为它必须保证有序</span></span><br><span class="line">    Map&lt;String, String&gt; chain = <span class="keyword">new</span> LinkedHashMap&lt;String, String&gt;();</span><br><span class="line">    <span class="comment">// anon-表示可以匿名访问， authc-表示需要认证才可以访问</span></span><br><span class="line">    <span class="comment">// 因为禁用了 Session，所以这里不能使用 authc 了，否则会报 DisabledSessionException 异常</span></span><br><span class="line">    chain.put(<span class="string">"/services/*"</span>, <span class="string">"statelessAuthc"</span>);</span><br><span class="line">    chain.put(<span class="string">"/**"</span>, <span class="string">"anon"</span>);</span><br><span class="line">    filter.setFilterChainDefinitionMap(chain);</span><br><span class="line">    <span class="keyword">return</span> filter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> AccessControlFilter <span class="title">statelessAuthcFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> StatelessAccessControlFilter();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis整合spring boot</title>
    <url>/posts/ec4f6c67.html</url>
    <content><![CDATA[<ol>
<li>在pom.xml加入如下内容<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol start="2">
<li>mybatis-config.xml<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Integer"</span> <span class="attr">type</span>=<span class="string">"java.lang.Integer"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Long"</span> <span class="attr">type</span>=<span class="string">"java.lang.Long"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"HashMap"</span> <span class="attr">type</span>=<span class="string">"java.util.HashMap"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"LinkedHashMap"</span> <span class="attr">type</span>=<span class="string">"java.util.LinkedHashMap"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"ArrayList"</span> <span class="attr">type</span>=<span class="string">"java.util.ArrayList"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"LinkedList"</span> <span class="attr">type</span>=<span class="string">"java.util.LinkedList"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.ylonline.wechat.job.pojo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"top/ylonline/wechat/job/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>或者在<code>application.yml</code>中加入<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mybatis:</span><br><span class="line">  config-location: classpath:mybatis/mybatis-config.xml</span><br><span class="line">  type-aliases-package: top.ylonline.wechat.job.pojo</span><br><span class="line">#  mapper-locations 这个配置参数仅当mapper xml与mapper class不在同一个目录下时有效。所以一般可以忽略。</span><br><span class="line">#  mapper-locations: classpath:top/ylonline/wechat/job/mapper/*.xml</span><br></pre></td></tr></table></figure></p>
<p>在Mapper类上面使用 <code>@Mapper</code> 注解<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">count</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Mapper.xml配置<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"top.ylonline.wechat.job.mapper.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"top.ylonline.wechat.job.pojo.User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">arg</span> <span class="attr">column</span>=<span class="string">"ID"</span> <span class="attr">javaType</span>=<span class="string">"java.math.BigDecimal"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">arg</span> <span class="attr">column</span>=<span class="string">"AGE"</span> <span class="attr">javaType</span>=<span class="string">"java.math.BigDecimal"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">arg</span> <span class="attr">column</span>=<span class="string">"CITYID"</span> <span class="attr">javaType</span>=<span class="string">"java.math.BigDecimal"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">constructor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"count"</span> <span class="attr">parameterType</span>=<span class="string">"top.ylonline.wechat.job.pojo.User"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Long"</span>&gt;</span></span><br><span class="line">        select count(*) from user where cityid = #&#123;user.cityid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-boot parent</title>
    <url>/posts/3ef60930.html</url>
    <content><![CDATA[<h1 id="End-of-Life"><a href="#End-of-Life" class="headerlink" title="End of Life"></a>End of Life</h1><p>see：<a href="https://spring.io/projects/platform" target="_blank" rel="noopener">https://spring.io/projects/platform</a></p>
<p>The Platform will reach the end of its supported life on 9 April 2019. Maintenence releases of both the Brussels and Cairo lines will continue to be published up until that time. Users of the Platform are encourage to start using Spring Boot’s dependency management directory, either by using <code>spring-boot-starter-parent</code> as their Maven project’s parent, or by importing the <code>spring-boot-dependencies</code> bom.</p>
<a id="more"></a>
<h1 id="spring-boot-starter-parent"><a href="#spring-boot-starter-parent" class="headerlink" title="spring-boot-starter-parent"></a>spring-boot-starter-parent</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="spring-boot-dependencies"><a href="#spring-boot-dependencies" class="headerlink" title="spring-boot-dependencies"></a>spring-boot-dependencies</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 定时器</title>
    <url>/posts/6710625f.html</url>
    <content><![CDATA[<p>在pom.xml中加入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>定时器类<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArticleSummaryScheduled</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  等同于fixedRate</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/15 * * * * ?"</span>)</span><br><span class="line">    <span class="comment">// 上一次开始执行时间点之后6s再次执行</span></span><br><span class="line">    <span class="comment">//    @Scheduled(fixedRate = 6000)</span></span><br><span class="line">    <span class="comment">// 上一次执行完毕时间点之后6s再次执行</span></span><br><span class="line">    <span class="comment">//    @Scheduled(fixedDelay = 6000)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> Date());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在main方法类上面使用 <code>@EnableScheduling</code> 注解<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 定时器启动类</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>只要上面的配置，就可以启动一个定时器了</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>task</tag>
        <tag>schedule</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-boot 事件监听 ApplicationListener</title>
    <url>/posts/ba3065f8.html</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>SpringBoot 为 ApplicationContextEvent 提供了四种事件：</p>
<ul>
<li>ApplicationStartedEvent ：spring boot 启动开始时执行的事件</li>
<li>ApplicationEnvironmentPreparedEvent：spring boot 对应 Enviroment 已经准备完毕，但此时上下文 context 还没有创建</li>
<li>ApplicationPreparedEvent：spring boot 上下文 context 创建完成，但此时 spring 中的 bean 是没有完全加载完成的</li>
<li>ApplicationFailedEvent：spring boot启动异常时执行事件</li>
</ul>
<a id="more"></a>
<h1 id="ApplicationEnvironmentPreparedEvent事件监听"><a href="#ApplicationEnvironmentPreparedEvent事件监听" class="headerlink" title="ApplicationEnvironmentPreparedEvent事件监听"></a>ApplicationEnvironmentPreparedEvent事件监听</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.ConfigurableEnvironment;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 环境配置事件监听器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/7/5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnvironmentPreparedEventListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ApplicationEnvironmentPreparedEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ApplicationEnvironmentPreparedEvent event)</span> </span>&#123;</span><br><span class="line">        ConfigurableEnvironment environment = event.getEnvironment();</span><br><span class="line">        <span class="comment">// 获取 spring.profiles.active 的值</span></span><br><span class="line">        String activeProfile = environment.getActiveProfiles()[<span class="number">0</span>];</span><br><span class="line">        log.info(<span class="string">"激活环境 ---&gt; activeProfile: &#123;&#125;"</span>, activeProfile);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里要注意注册<code>ApplicationEnvironmentPreparedEvent</code>监听器的方式</p>
</blockquote>
<p>如果是 jar 环境部署</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/7/5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Common</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SpringApplicationBuilder <span class="title">configureSpringBuilder</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        builder.listeners(<span class="keyword">new</span> EnvironmentPreparedEventListener());</span><br><span class="line">        <span class="keyword">return</span> builder.sources(App<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for JAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        configureSpringBuilder(<span class="keyword">new</span> SpringApplicationBuilder())</span><br><span class="line">            .run(args);</span><br><span class="line">        <span class="keyword">synchronized</span> (App<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    App<span class="class">.<span class="keyword">class</span>.<span class="title">wait</span>()</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/7/5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for JAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication app = <span class="keyword">new</span> SpringApplication(Application<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        app.addListeners(<span class="keyword">new</span> EnvironmentPreparedEventListener());</span><br><span class="line">        app.run(args);</span><br><span class="line">        <span class="keyword">synchronized</span> (App<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    App<span class="class">.<span class="keyword">class</span>.<span class="title">wait</span>()</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果是 war 环境部署</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.support.SpringBootServletInitializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2018/7/2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Common</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SpringApplicationBuilder <span class="title">configureSpringBuilder</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        builder.listeners(<span class="keyword">new</span> EnvironmentPreparedEventListener());</span><br><span class="line">        <span class="keyword">return</span> builder.sources(App<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for WAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configureSpringBuilder(builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for JAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        configureSpringBuilder(<span class="keyword">new</span> SpringApplicationBuilder())</span><br><span class="line">            .run(args);</span><br><span class="line">        <span class="keyword">synchronized</span> (App<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    App<span class="class">.<span class="keyword">class</span>.<span class="title">wait</span>()</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Junit-测试"><a href="#Junit-测试" class="headerlink" title="Junit 测试"></a>Junit 测试</h1><blockquote>
<p>测试单元下，自定义事件不生效的问题</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= App<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">loader</span> </span>= IAmTest.CustomLoader<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ActiveProfiles("local")</span><br><span class="line"><span class="comment">// 单元测试配置数据库默认会事务会退，此时强制事务提交</span></span><br><span class="line"><span class="comment">// @Rollback(false) </span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IAmTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomLoader</span> <span class="keyword">extends</span> <span class="title">SpringBootContextLoader</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> SpringApplication <span class="title">getSpringApplication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            SpringApplication app = <span class="keyword">super</span>.getSpringApplication();</span><br><span class="line">            app.addListeners(<span class="keyword">new</span> EnvironmentPreparedEventListener());</span><br><span class="line">            <span class="keyword">return</span> app;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> TestService testService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JSONObject json = testService.get(<span class="string">"name"</span>, <span class="string">"200~180****2307~01~~"</span>);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 使用注意事项</title>
    <url>/posts/47aa1712.html</url>
    <content><![CDATA[<h2 id="兼容问题"><a href="#兼容问题" class="headerlink" title="兼容问题"></a>兼容问题</h2><p>spring-boot-starter-parent切换回1.5.2.RELEASE版本</p>
<p>因为1.5.4.RELEASE、1.5.5.RELEASE、1.5.6.RELEASE、1.5.7.RELEASE、2.0.0.M1、2.0.0.M2、2.0.0.M3都存在使用spring-boot-starter-data-redis时，会出现异常</p>
<p><code>java.lang.NoSuchMethodError: org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource.&lt;init&gt;</code>异常</p>
<p>请查看<a href="https://github.com/spring-projects/spring-boot/issues/9606" target="_blank" rel="noopener">https://github.com/spring-projects/spring-boot/issues/9606</a></p>
<a id="more"></a>
<h2 id="外部-Tomcat-容器部署"><a href="#外部-Tomcat-容器部署" class="headerlink" title="外部 Tomcat 容器部署"></a>外部 Tomcat 容器部署</h2><blockquote>
<p>外部 Tomcat 等容器部署war，要继承 SpringBootServletInitializer 类</p>
</blockquote>
<p>war部署要重写SpringBootServletInitializer的configure方法，可以不要main方法，main方法是jar部署时候会执行的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.support.SpringBootServletInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YL</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span>(</span><br><span class="line">        excludeName = &#123;</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// 数据库相关</span></span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// jmx 相关</span></span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// websocket 相关</span></span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// mail相关</span></span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// 模版引擎</span></span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// actuate trace：保存最近100次请求记录在内容，没什么卵用</span></span><br><span class="line">                <span class="string">"org.springframework.boot.actuate.autoconfigure.TraceRepositoryAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.actuate.autoconfigure.TraceWebFilterAutoConfiguration"</span>,</span><br><span class="line">                <span class="string">"org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration"</span>,</span><br><span class="line">                <span class="comment">// 其他</span></span><br><span class="line">                <span class="string">"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"</span></span><br><span class="line">        &#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Common</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SpringApplicationBuilder <span class="title">configureSpringBuilder</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 自定义事件监听器，实现 ApplicationListener</span></span><br><span class="line">        -- builder.listeners(<span class="keyword">new</span> EnvironmentPreparedEventListener());</span><br><span class="line">        <span class="keyword">return</span> builder.sources(App<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for WAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configureSpringBuilder(builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * for JAR deploy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        configureSpringBuilder(<span class="keyword">new</span> SpringApplicationBuilder())</span><br><span class="line">                .run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="attach-false"><a href="#attach-false" class="headerlink" title="attach=false"></a>attach=false</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 将原始的包作为 install 和 deploy 的对象，而不是包含了依赖的包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attach</span>&gt;</span>false<span class="tag">&lt;/<span class="name">attach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="spring-boot升级到2-0"><a href="#spring-boot升级到2-0" class="headerlink" title="spring-boot升级到2.0"></a>spring-boot升级到2.0</h2><ol>
<li>弃用WebMvcConfigurerAdapter，替换成WebMvcConfigurer</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuratiion</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebAdapter</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">            .allowedHeaders(<span class="string">"*"</span>)</span><br><span class="line">            .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">            .allowedMethods(<span class="string">"GET"</span>, <span class="string">"POST"</span>, <span class="string">"PUT"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 spring-boot 2.0 中需要注意，因为使用的是 spring 5，原先的方法是继承WebMvcConfigurerAdapter抽象类，现在是直接扩展 WebMvcConfigurer 这个接口。原先的方式很能生效，不过已经被 spring 5弃用了（@Deprecated）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuratiion</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfiguration</span>　</span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WebMvcConfigurer <span class="title">webMvcConfigurer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> WebMvcConfigurer() &#123;</span><br><span class="line">            <span class="comment">// 跨域配置</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">                registry.addMapping(<span class="string">"/api/**"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 拦截器配置</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>其他</li>
</ol>
<h2 id="RequestBody"><a href="#RequestBody" class="headerlink" title="@RequestBody"></a>@RequestBody</h2><ol>
<li>使用 @RequestBody 注解时，如果注解的参数没有传入，则会抛出<code>org.springframework.http.converter.HttpMessageNotReadableException</code>异常</li>
<li>配合hibernate-validator不起作用的问题</li>
</ol>
<p>在参数前面使用<code>org.springframework.validation.annotation.Validated</code>注解，或者<code>javax.validation.Valid</code>注解均可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.NotBlank;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2017/10/19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MarketRebateDTO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@NotBlank</span>(message = <span class="string">"营销活动 Id 不能为空"</span>)</span><br><span class="line">    <span class="meta">@Length</span>(min = <span class="number">5</span>, max = <span class="number">8</span>, message = <span class="string">"营销活动 Id[$&#123;validatedValue&#125;] 长度必须在 &#123;min&#125; 和 &#123;max&#125; 之间"</span>)</span><br><span class="line">    <span class="keyword">private</span> String marketCfgId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String productNo;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String rebateAmt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String tradeType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 广东省营销接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2017/10/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/market"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MarketController</span> <span class="keyword">extends</span> <span class="title">BaseRestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Reference</span></span><br><span class="line">    <span class="keyword">private</span> MarketService marketService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/rebate"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseResponse <span class="title">rebate</span><span class="params">(@RequestBody @Valid MarketRebateDTO rebate)</span> <span class="keyword">throws</span> CoreException, OkHttpException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> marketService.doRebate(rebate);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h2><ol>
<li>使用 @RequestParam 注解时，如果注解的参数没有传入，则会抛出<code>org.springframework.web.bind.MissingServletRequestParameterException</code>异常</li>
<li>配合hibernate-validator不起作用的问题</li>
</ol>
<p>要注册 MethodValidationPostProcessor Bean，并且在<strong><em>类</em></strong>上面使用<code>org.springframework.validation.annotation.Validated</code>注解</p>
<blockquote>
<p>注意：使用<code>javax.validation.Valid</code>注解对RequestParam对应的参数进行注解，是无效的，需要使用@Validated注解来使得验证生效</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Validator <span class="title">validator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ValidatorFactory factory = Validation.byProvider(HibernateValidator<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">        .<span class="title">configure</span>()</span></span><br><span class="line"><span class="class">        // 1、普通模式（默认是这个模式）</span></span><br><span class="line"><span class="class">        // 普通模式(会校验完所有的属性，然后返回所有的验证失败信息)</span></span><br><span class="line"><span class="class">        // 2、快速失败返回模式</span></span><br><span class="line"><span class="class">        // 快速失败返回模式(只要有一个验证失败，则返回)</span></span><br><span class="line">        // .addProperty("hibernate.validator.fail_fast", "true")</span><br><span class="line">        .failFast(<span class="keyword">true</span>)</span><br><span class="line">        .buildValidatorFactory();</span><br><span class="line">    <span class="keyword">return</span> factory.getValidator();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> MethodValidationPostProcessor <span class="title">methodValidationPostProcessor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    MethodValidationPostProcessor postProcessor = <span class="keyword">new</span> MethodValidationPostProcessor();</span><br><span class="line">    <span class="comment">// 设置validator模式为快速失败返回</span></span><br><span class="line">    postProcessor.setValidator(validator());</span><br><span class="line">    <span class="keyword">return</span> postProcessor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.NotBlank;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * csp 平台接口封装</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Created by YL on 2017/9/19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/csp"</span>)</span><br><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CspController</span> <span class="keyword">extends</span> <span class="title">BaseRestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Reference</span></span><br><span class="line">    <span class="keyword">private</span> CspService cspService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseResponse <span class="title">get</span><span class="params">(@RequestParam</span></span></span><br><span class="line"><span class="function"><span class="params">                            @NotBlank(message = <span class="string">"组件名不能为空"</span>)</span></span></span><br><span class="line"><span class="function">                                    String func,</span></span><br><span class="line"><span class="function">                            @RequestParam</span></span><br><span class="line"><span class="function">                            @<span class="title">NotBlank</span><span class="params">(message = <span class="string">"参数值不能为空"</span>)</span></span></span><br><span class="line"><span class="function">                                    String param) <span class="keyword">throws</span> OkHttpException, OpenApiException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseResponse(cspService.get(func, param));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>至此，Bean Validator 和 hibernate-validator的@Size、@Min、@Max、@Length、@NotBlank等注解就生效了</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 打包相关</title>
    <url>/posts/ab825d27.html</url>
    <content><![CDATA[<h1 id="webjars打包"><a href="#webjars打包" class="headerlink" title="webjars打包"></a>webjars打包</h1><p>包路径：src\main\resources\webjars<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>$&#123;project.build.outputDirectory&#125;/META-INF/resources/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="使用外部配置文件，静态资源"><a href="#使用外部配置文件，静态资源" class="headerlink" title="使用外部配置文件，静态资源"></a>使用外部配置文件，静态资源</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>freemarker/**/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>$&#123;project.build.directory&#125;/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>freemarker/**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="JAR部署方式"><a href="#JAR部署方式" class="headerlink" title="JAR部署方式"></a>JAR部署方式</h1><blockquote>
<p>外部 lib 打包方式</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>ZIP<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attach</span>&gt;</span>false<span class="tag">&lt;/<span class="name">attach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeTypes</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">includeTypes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeScope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">includeScope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                    $&#123;project.build.directory&#125;/lib</span><br><span class="line">                <span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="WAR包部署方式"><a href="#WAR包部署方式" class="headerlink" title="WAR包部署方式"></a>WAR包部署方式</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span>&gt;</span>WAR<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nothing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">attach</span>&gt;</span>false<span class="tag">&lt;/<span class="name">attach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-cloud-sleuth</title>
    <url>/posts/ccd87ced.html</url>
    <content><![CDATA[<h1 id="sleuth输出的日志格式"><a href="#sleuth输出的日志格式" class="headerlink" title="sleuth输出的日志格式"></a>sleuth输出的日志格式</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-04-29 16:37:54.849  INFO [sleuth,fd6f9ebb8f69ab75,fd6f9ebb8f69ab75,false] 1616 --- [ctor-http-nio-2] t.y.sc.sleuth.service.UserServiceImpl    : list: [&#123;id=1, name=test_1&#125;, &#123;id=2, name=test_2&#125;, &#123;id=3, name=test_3&#125;, &#123;id=4, name=test_4&#125;, &#123;id=5, name=test_5&#125;, &#123;id=6, name=test_6&#125;, &#123;id=7, name=test_7&#125;, &#123;id=8, name=test_8&#125;, &#123;id=9, name=test_9&#125;, &#123;id=10, name=test_10&#125;]</span><br></pre></td></tr></table></figure>
<p>可以看到内容是由<code>[appname,traceId,spanId,exportable]</code>组成的, 具体含义如下：</p>
<ul>
<li>appname：服务的名称，也就是spring.application.name的值</li>
<li>traceId：整个请求的唯一ID，它标识整个整个请求的链路</li>
<li>spanId：基本的工作单元，发起一起远程调用就是一个span</li>
<li>exportable：是否导入数据到Zipkin中</li>
</ul>
<a id="more"></a> 
<h1 id="sleuth的数据推送到logstash"><a href="#sleuth的数据推送到logstash" class="headerlink" title="sleuth的数据推送到logstash"></a>sleuth的数据推送到logstash</h1><blockquote>
<p>将跟踪的信息导入到ES中，可以将跟踪的信息以JSON格式的数据输出到 logstash，再输出到ES中</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"appName"</span> <span class="attr">source</span>=<span class="string">"spring.application.name"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Appender to log to file in a JSON format --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"logstash"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;LOG_FILE&#125;.json<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_FILE&#125;.json.%d&#123;yyyy-MM-dd&#125;.gz<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>7<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timestamp</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">timeZone</span>&gt;</span>UTC<span class="tag">&lt;/<span class="name">timeZone</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timestamp</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span></span><br><span class="line">                    &#123;</span><br><span class="line">                    "level": "%level",</span><br><span class="line">                    "appName": "$&#123;appName:-&#125;",</span><br><span class="line">                    "traceId": "%X&#123;X-B3-TraceId:-&#125;",</span><br><span class="line">                    "spanId": "%X&#123;X-B3-SpanId:-&#125;",</span><br><span class="line">                    "parentId": "%X&#123;X-B3-ParentSpanId:-&#125;",</span><br><span class="line">                    "exportable": "%X&#123;X-Span-Export:-&#125;",</span><br><span class="line">                    "pid": "$&#123;PID:-&#125;",</span><br><span class="line">                    "thread": "%thread",</span><br><span class="line">                    "class": "%logger&#123;40&#125;",</span><br><span class="line">                    "msg": "%message"</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>spring-cloud</tag>
        <tag>sleuth</tag>
      </tags>
  </entry>
  <entry>
    <title>PasswordEncoder 配置</title>
    <url>/posts/583c9124.html</url>
    <content><![CDATA[<h1 id="PasswordEncoder-配置"><a href="#PasswordEncoder-配置" class="headerlink" title="PasswordEncoder 配置"></a>PasswordEncoder 配置</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  String bcrypt = <span class="string">"bcrypt"</span>;</span><br><span class="line">  BCryptPasswordEncoder encoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">  Map&lt;String, PasswordEncoder&gt; encoders = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">8</span>);</span><br><span class="line">  encoders.put(bcrypt, <span class="keyword">new</span> BCryptPasswordEncoder());</span><br><span class="line">  encoders.put(<span class="string">"pbkdf2"</span>, <span class="keyword">new</span> Pbkdf2PasswordEncoder());</span><br><span class="line">  encoders.put(<span class="string">"scrypt"</span>, <span class="keyword">new</span> SCryptPasswordEncoder());</span><br><span class="line">  <span class="comment">// md</span></span><br><span class="line">  <span class="comment">// encoders.put("md4", new Md4PasswordEncoder());</span></span><br><span class="line">  <span class="comment">// encoders.put("md5", new MessageDigestPasswordEncoder("MD5"));</span></span><br><span class="line">  <span class="comment">// sha</span></span><br><span class="line">  <span class="comment">// encoders.put("sha1", new StandardPasswordEncoder("SHA-1", ""));</span></span><br><span class="line">  <span class="comment">// encoders.put("sha256", new StandardPasswordEncoder());</span></span><br><span class="line">  <span class="comment">// encoders.put("sha384", new StandardPasswordEncoder("SHA-384", ""));</span></span><br><span class="line">  <span class="comment">// encoders.put("sha512", new StandardPasswordEncoder("SHA-512", ""));</span></span><br><span class="line">  <span class="comment">// sm3</span></span><br><span class="line">  <span class="comment">// encoders.put("sm3", new SM3PasswordEncoder());</span></span><br><span class="line">  <span class="comment">// ldap</span></span><br><span class="line">  <span class="comment">// encoders.put("ldap", new LdapShaPasswordEncoder());</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//idForEncode is default for encoder</span></span><br><span class="line">  DelegatingPasswordEncoder delegating = <span class="keyword">new</span> DelegatingPasswordEncoder(bcrypt, encoders);</span><br><span class="line">  <span class="comment">// 如果都不匹配以上加密方式，则使用默认方式</span></span><br><span class="line">  delegating.setDefaultPasswordEncoderForMatches(encoder);</span><br><span class="line">  <span class="keyword">return</span> delegating;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring-security</tag>
      </tags>
  </entry>
  <entry>
    <title>Nacos 实现 gateway 路由动态更新</title>
    <url>/posts/da547d1d.html</url>
    <content><![CDATA[<p>通过<a href="https://nacos.io/zh-cn/" target="_blank" rel="noopener">Nacos</a>配置<code>spring-cloud-gateway</code>的路由规则，实现路由规则的动态更新，代码在托管<a href="https://github.com/foreveryang321/java-best-practice/blob/master/gateway-examples/gateway-nacos" target="_blank" rel="noopener">gateway-nacos</a></p>
<a id="more"></a>
<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.SR2<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p> <code>spring-cloud-starter-alibaba-nacos-config</code> 的原理是将配置信息注入到<code>Spring</code>的<code>environment</code>中，并在配置更新时自动触发<code>context refresh</code>事件，从而将<code>environment</code>环境中的配置变更为最新配置</p>
</blockquote>
<h1 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>
<h1 id="bootstrap-properties"><a href="#bootstrap-properties" class="headerlink" title="bootstrap.properties"></a>bootstrap.properties</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.application.name=nacos-spring-cloud-gateway-example</span><br><span class="line">spring.cloud.nacos.config.server-addr=192.168.56.101:8848</span><br><span class="line"></span><br><span class="line">spring.cloud.nacos.config.ext-config[0].data-id=gateway.yaml</span><br><span class="line">spring.cloud.nacos.config.ext-config[0].refresh=true</span><br></pre></td></tr></table></figure>
<blockquote>
<p>refresh要配置为true，否则不能动态更新 gateway.yaml 的配置项</p>
</blockquote>
<h1 id="App-java"><a href="#App-java" class="headerlink" title="App.java"></a>App.java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(App<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="在-Nacos-控制台新建-gateway-yaml-配置"><a href="#在-Nacos-控制台新建-gateway-yaml-配置" class="headerlink" title="在 Nacos 控制台新建 gateway.yaml 配置"></a>在 Nacos 控制台新建 gateway.yaml 配置</h1><p>Data ID: gateway.yaml</p>
<p>Group: DEFAULT_GROUP<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">baidu</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://www.baidu.com</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/s</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">taobao</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://www.taobao.com/</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/markets/3c/tbdc</span></span><br></pre></td></tr></table></figure></p>
<p>配置完成后，执行 <code>App.java</code> 启动网关项目</p>
<h1 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h1><p>分别访问<a href="http://localhost:8080/s" target="_blank" rel="noopener">http://localhost:8080/s</a>和<a href="http://localhost:8080/markets/3c/tbdc" target="_blank" rel="noopener">http://localhost:8080/markets/3c/tbdc</a>，能正常转发到百度、淘宝网站</p>
<h1 id="修改-gateway-yaml-配置"><a href="#修改-gateway-yaml-配置" class="headerlink" title="修改 gateway.yaml 配置"></a>修改 gateway.yaml 配置</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">baidu</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://www.baidu.com</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/s</span></span><br></pre></td></tr></table></figure>
<p>控制台打印以下日志，说明配置修改已经被监听到<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">org.springframework.cloud.endpoint.event.RefreshEventListener.handle(37) | Refresh keys changed: [spring.cloud</span><br><span class="line">.gateway.routes.xxx]</span><br></pre></td></tr></table></figure></p>
<p>再次访问<a href="http://localhost:8080/markets/3c/tbdc" target="_blank" rel="noopener">http://localhost:8080/markets/3c/tbdc</a>，会返回404页面</p>
<blockquote>
<p>说明修改的配置已经动态更新了</p>
</blockquote>
<h1 id="动态更新原理"><a href="#动态更新原理" class="headerlink" title="动态更新原理"></a>动态更新原理</h1><ol>
<li><a href="https://nacos.io/zh-cn/" target="_blank" rel="noopener">Nacos</a> 配置更新的时候，<code>spring-cloud-starter-alibaba-nacos-config</code>会 <code>publish</code> 一个 <code>RefreshEvent</code> 事件，从而使 <code>spring-cloud-commons</code> 的 <code>RefreshEventListener</code> 监听到并触发 <code>ContextRefresher.refresh()</code> 方法。</li>
<li><code>spring-cloud-gateway</code> 的 <code>RouteRefreshListener</code> 监听了 <code>ApplicationEvent</code> 事件，当 <code>Nacos</code> 触发 <code>ContextRefresher.refresh()</code>后，会监听到 <code>RefreshScopeRefreshedEvent</code>事件并调用<code>RouteRefreshListener.reset()</code> 方法 <code>publish</code>  一个 <code>RefreshRoutesEvent</code> 路由更新事件，达到路由动态更新的目的。</li>
</ol>
<h2 id="spring-cloud-alibaba-nacos-config"><a href="#spring-cloud-alibaba-nacos-config" class="headerlink" title="spring-cloud-alibaba-nacos-config"></a>spring-cloud-alibaba-nacos-config</h2><p>在<code>spring-cloud-alibaba-nacos-config</code>中，会默认监听配置的更新，并publish refresh事件</p>
<ul>
<li>NacosRefreshProperties.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosRefreshProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Value</span>(<span class="string">"$&#123;spring.cloud.nacos.config.refresh.enabled:true&#125;"</span>)</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> enabled = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> enabled;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.enabled = enabled;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>...refresh.enabled:true</code>默认开启配置更新事件推送</p>
</blockquote>
<ul>
<li>NacosContextRefresher.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosContextRefresher</span></span></span><br><span class="line"><span class="class">		<span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ApplicationReadyEvent</span>&gt;, <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger LOGGER = LoggerFactory</span><br><span class="line">			.getLogger(NacosContextRefresher<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> AtomicLong loadCount = <span class="keyword">new</span> AtomicLong(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> NacosRefreshProperties refreshProperties;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> NacosRefreshHistory refreshHistory;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> ConfigService configService;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> AtomicBoolean ready = <span class="keyword">new</span> AtomicBoolean(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Map&lt;String, Listener&gt; listenerMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">NacosContextRefresher</span><span class="params">(NacosRefreshProperties refreshProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">			NacosRefreshHistory refreshHistory, ConfigService configService)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.refreshProperties = refreshProperties;</span><br><span class="line">		<span class="keyword">this</span>.refreshHistory = refreshHistory;</span><br><span class="line">		<span class="keyword">this</span>.configService = configService;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ApplicationReadyEvent event)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// many Spring context</span></span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.ready.compareAndSet(<span class="keyword">false</span>, <span class="keyword">true</span>)) &#123;</span><br><span class="line">			<span class="keyword">this</span>.registerNacosListenersForApplications();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.applicationContext = applicationContext;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registerNacosListenersForApplications</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (refreshProperties.isEnabled()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (NacosPropertySource nacosPropertySource : NacosPropertySourceRepository</span><br><span class="line">					.getAll()) &#123;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (!nacosPropertySource.isRefreshable()) &#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				String dataId = nacosPropertySource.getDataId();</span><br><span class="line">				registerNacosListener(nacosPropertySource.getGroup(), dataId);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registerNacosListener</span><span class="params">(<span class="keyword">final</span> String group, <span class="keyword">final</span> String dataId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		Listener listener = listenerMap.computeIfAbsent(dataId, i -&gt; <span class="keyword">new</span> Listener() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveConfigInfo</span><span class="params">(String configInfo)</span> </span>&#123;</span><br><span class="line">				loadCount.incrementAndGet();</span><br><span class="line">				String md5 = <span class="string">""</span>;</span><br><span class="line">				<span class="keyword">if</span> (!StringUtils.isEmpty(configInfo)) &#123;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						MessageDigest md = MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">						md5 = <span class="keyword">new</span> BigInteger(<span class="number">1</span>, md.digest(configInfo.getBytes(<span class="string">"UTF-8"</span>)))</span><br><span class="line">								.toString(<span class="number">16</span>);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">catch</span> (NoSuchAlgorithmException | UnsupportedEncodingException e) &#123;</span><br><span class="line">						LOGGER.warn(<span class="string">"[Nacos] unable to get md5 for dataId: "</span> + dataId, e);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				refreshHistory.add(dataId, md5);</span><br><span class="line">				applicationContext.publishEvent(</span><br><span class="line">						<span class="keyword">new</span> RefreshEvent(<span class="keyword">this</span>, <span class="keyword">null</span>, <span class="string">"Refresh Nacos config"</span>));</span><br><span class="line">				<span class="keyword">if</span> (LOGGER.isDebugEnabled()) &#123;</span><br><span class="line">					LOGGER.debug(<span class="string">"Refresh Nacos config group&#123;&#125;,dataId&#123;&#125;"</span>, group, dataId);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> Executor <span class="title">getExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			configService.addListener(dataId, group, listener);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (NacosException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="spring-cloud-gateway"><a href="#spring-cloud-gateway" class="headerlink" title="spring-cloud-gateway"></a>spring-cloud-gateway</h2><ul>
<li>RefreshEventListener.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefreshEventListener</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Log log = LogFactory.getLog(RefreshEventListener<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">	<span class="keyword">private</span> ContextRefresher refresh;</span><br><span class="line">	<span class="keyword">private</span> AtomicBoolean ready = <span class="keyword">new</span> AtomicBoolean(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">RefreshEventListener</span><span class="params">(ContextRefresher refresh)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.refresh = refresh;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@EventListener</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(ApplicationReadyEvent event)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.ready.compareAndSet(<span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@EventListener</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(RefreshEvent event)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.ready.get()) &#123; <span class="comment">// don't handle events before app is ready</span></span><br><span class="line">			log.debug(<span class="string">"Event received "</span> + event.getEventDesc());</span><br><span class="line">			Set&lt;String&gt; keys = <span class="keyword">this</span>.refresh.refresh();</span><br><span class="line">			log.info(<span class="string">"Refresh keys changed: "</span> + keys);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>RouteRefreshListener.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteRefreshListener</span></span></span><br><span class="line"><span class="class">		<span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ApplicationEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> HeartbeatMonitor monitor = <span class="keyword">new</span> HeartbeatMonitor();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> ApplicationEventPublisher publisher;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">RouteRefreshListener</span><span class="params">(ApplicationEventPublisher publisher)</span> </span>&#123;</span><br><span class="line">		Assert.notNull(publisher, <span class="string">"publisher may not be null"</span>);</span><br><span class="line">		<span class="keyword">this</span>.publisher = publisher;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ApplicationEvent event)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (event <span class="keyword">instanceof</span> ContextRefreshedEvent</span><br><span class="line">				|| event <span class="keyword">instanceof</span> RefreshScopeRefreshedEvent</span><br><span class="line">				|| event <span class="keyword">instanceof</span> InstanceRegisteredEvent) &#123;</span><br><span class="line">			reset();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (event <span class="keyword">instanceof</span> ParentHeartbeatEvent) &#123;</span><br><span class="line">			ParentHeartbeatEvent e = (ParentHeartbeatEvent) event;</span><br><span class="line">			resetIfNeeded(e.getValue());</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (event <span class="keyword">instanceof</span> HeartbeatEvent) &#123;</span><br><span class="line">			HeartbeatEvent e = (HeartbeatEvent) event;</span><br><span class="line">			resetIfNeeded(e.getValue());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resetIfNeeded</span><span class="params">(Object value)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.monitor.update(value)) &#123;</span><br><span class="line">			reset();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.publisher.publishEvent(<span class="keyword">new</span> RefreshRoutesEvent(<span class="keyword">this</span>));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>spring-boot</tag>
        <tag>Nacos</tag>
        <tag>spring-cloud-gateway</tag>
      </tags>
  </entry>
</search>
